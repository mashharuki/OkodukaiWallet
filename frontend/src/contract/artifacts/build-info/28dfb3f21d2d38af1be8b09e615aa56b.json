{"id":"28dfb3f21d2d38af1be8b09e615aa56b","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.9._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable, ERC1967Upgrade {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/core/BaseAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-empty-blocks */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./Helpers.sol\";\n\n/**\n * Basic account implementation.\n * this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n * specific account implementation should inherit it and provide the account-specific logic\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for UserOperation;\n\n    //return value in case of signature failure, with no time-range.\n    // equivalent to _packValidationData(true,0,0);\n    uint256 constant internal SIG_VALIDATION_FAILED = 1;\n\n    /**\n     * Return the account nonce.\n     * This method returns the next sequential nonce.\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\n     */\n    function getNonce() public view virtual returns (uint256) {\n        return entryPoint().getNonce(address(this), 0);\n    }\n\n    /**\n     * return the entryPoint used by this account.\n     * subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * Validate user's signature and nonce.\n     * subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds)\n    external override virtual returns (uint256 validationData) {\n        _requireFromEntryPoint();\n        validationData = _validateSignature(userOp, userOpHash);\n        _validateNonce(userOp.nonce);\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal virtual view {\n        require(msg.sender == address(entryPoint()), \"account: not from EntryPoint\");\n    }\n\n    /**\n     * validate the signature is valid for this message.\n     * @param userOp validate the userOp.signature field\n     * @param userOpHash convenient field: the hash of the request, to check the signature against\n     *          (also hashes the entrypoint and chain id)\n     * @return validationData signature and time-range of this operation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash) internal virtual returns (uint256 validationData);\n\n    /**\n     * Validate the nonce of the UserOperation.\n     * This method may validate the nonce requirement of this account.\n     * e.g.\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n     *      `require(nonce < type(uint64).max)`\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\n     *      `require(nonce & type(uint64).max == 0)`\n     *\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n     * action is needed by the account itself.\n     *\n     * @param nonce to validate\n     *\n     * solhint-disable-next-line no-empty-blocks\n     */\n    function _validateNonce(uint256 nonce) internal view virtual {\n    }\n\n    /**\n     * sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * subclass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again)\n     * @param missingAccountFunds the minimum value this method should send the entrypoint.\n     *  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success,) = payable(msg.sender).call{value : missingAccountFunds, gas : type(uint256).max}(\"\");\n            (success);\n            //ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n"},"contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./UserOperation.sol\";\n\ninterface IAccount {\n\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp the operation that is about to be executed.\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n     *      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n     *      The excess is left as a deposit in the entrypoint, for future calls.\n     *      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n     *      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n     * @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds) external returns (uint256 validationData);\n}"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n * 集約した署名を検証する。 \n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}"},"contracts/interfaces/IEntryPoint.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order. \n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key) external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity. \n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call. \n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}"},"contracts/samples/callback/TokenCallbackHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable no-empty-blocks */\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\n\n/**\n * Token callback handler.\n *   Handles supported tokens' callbacks, allowing account receiving these tokens.\n */\ncontract TokenCallbackHandler is IERC777Recipient, IERC721Receiver, IERC1155Receiver {\n    function tokensReceived(\n        address,\n        address,\n        address,\n        uint256,\n        bytes calldata,\n        bytes calldata\n    ) external pure override {\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155Receiver.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155Receiver.onERC1155BatchReceived.selector;\n    }\n\n    function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC721Receiver).interfaceId ||\n            interfaceId == type(IERC1155Receiver).interfaceId ||\n            interfaceId == type(IERC165).interfaceId;\n    }\n}"},"contracts/samples/SimpleAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\n\nimport \"../core/BaseAccount.sol\";\nimport \"./callback/TokenCallbackHandler.sol\";\n\n/**\n  * minimal account.\n  *  this is sample minimal account.\n  *  has execute, eth handling methods\n  *  has a single signer that can send requests through the entryPoint.\n  */\ncontract SimpleAccount is BaseAccount, TokenCallbackHandler, UUPSUpgradeable, Initializable {\n    using ECDSA for bytes32;\n\n    address public owner;\n\n    IEntryPoint private immutable _entryPoint;\n\n    event SimpleAccountInitialized(IEntryPoint indexed entryPoint, address indexed owner);\n\n    modifier onlyOwner() {\n        _onlyOwner();\n        _;\n    }\n\n    /// @inheritdoc BaseAccount\n    function entryPoint() public view virtual override returns (IEntryPoint) {\n        return _entryPoint;\n    }\n\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable {}\n\n    constructor(IEntryPoint anEntryPoint) {\n        _entryPoint = anEntryPoint;\n        _disableInitializers();\n    }\n\n    function _onlyOwner() internal view {\n        //directly from EOA owner, or through the account itself (which gets redirected through execute())\n        require(msg.sender == owner || msg.sender == address(this), \"only owner\");\n    }\n\n    /**\n     * execute a transaction (called directly from owner, or by entryPoint)\n     */\n    function execute(address dest, uint256 value, bytes calldata func) external {\n        _requireFromEntryPointOrOwner();\n        _call(dest, value, func);\n    }\n\n    /**\n     * execute a sequence of transactions\n     */\n    function executeBatch(address[] calldata dest, bytes[] calldata func) external {\n        _requireFromEntryPointOrOwner();\n        require(dest.length == func.length, \"wrong array lengths\");\n        for (uint256 i = 0; i < dest.length; i++) {\n            _call(dest[i], 0, func[i]);\n        }\n    }\n\n    /**\n     * @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n     * a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n      * the implementation by calling `upgradeTo()`\n     */\n    function initialize(address anOwner) public virtual initializer {\n        _initialize(anOwner);\n    }\n\n    function _initialize(address anOwner) internal virtual {\n        owner = anOwner;\n        emit SimpleAccountInitialized(_entryPoint, owner);\n    }\n\n    // Require the function call went through EntryPoint or owner\n    function _requireFromEntryPointOrOwner() internal view {\n        require(msg.sender == address(entryPoint()) || msg.sender == owner, \"account: not Owner or EntryPoint\");\n    }\n\n    /// implement template method of BaseAccount\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash)\n    internal override virtual returns (uint256 validationData) {\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\n        // recover\n        if (owner != hash.recover(userOp.signature))\n            return SIG_VALIDATION_FAILED;\n        return 0;\n    }\n\n    function _call(address target, uint256 value, bytes memory data) internal {\n        (bool success, bytes memory result) = target.call{value : value}(data);\n        if (!success) {\n            assembly {\n                revert(add(result, 32), mload(result))\n            }\n        }\n    }\n\n    /**\n     * check current account deposit in the entryPoint\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint().balanceOf(address(this));\n    }\n\n    /**\n     * deposit more funds for this account in the entryPoint\n     */\n    function addDeposit() public payable {\n        entryPoint().depositTo{value : msg.value}(address(this));\n    }\n\n    /**\n     * withdraw value from the account's deposit\n     * @param withdrawAddress target to send to\n     * @param amount to withdraw\n     */\n    function withdrawDepositTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\n        entryPoint().withdrawTo(withdrawAddress, amount);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal view override {\n        (newImplementation);\n        _onlyOwner();\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[20]},"id":21,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"132:131:0","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.9._"},"fullyImplemented":true,"id":20,"linearizedBaseContracts":[20],"name":"IERC1967","nameLocation":"274:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"289:68:0","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":7,"name":"Upgraded","nameLocation":"368:8:0","nodeType":"EventDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"393:14:0","nodeType":"VariableDeclaration","scope":7,"src":"377:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"377:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"376:32:0"},"src":"362:47:0"},{"anonymous":false,"documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"415:67:0","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":14,"name":"AdminChanged","nameLocation":"493:12:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"514:13:0","nodeType":"VariableDeclaration","scope":14,"src":"506:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"537:8:0","nodeType":"VariableDeclaration","scope":14,"src":"529:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"505:41:0"},"src":"487:60:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"553:59:0","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":19,"name":"BeaconUpgraded","nameLocation":"623:14:0","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"654:6:0","nodeType":"VariableDeclaration","scope":19,"src":"638:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"637:24:0"},"src":"617:45:0"}],"scope":21,"src":"264:400:0","usedErrors":[]}],"src":"107:558:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[30]},"id":31,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":22,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"138:203:1","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":30,"linearizedBaseContracts":[30],"name":"IERC1822Proxiable","nameLocation":"352:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"376:438:1","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":29,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:1","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"841:2:1"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:1"},"scope":30,"src":"819:57:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":31,"src":"342:536:1","usedErrors":[]}],"src":"113:766:1"},"id":1},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[1038],"ERC1967Upgrade":[334],"IBeacon":[344],"IERC1822Proxiable":[30],"IERC1967":[20],"StorageSlot":[1098]},"id":335,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":32,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:2"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":335,"sourceUnit":345,"src":"141:31:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":34,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":335,"sourceUnit":21,"src":"173:39:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":35,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":335,"sourceUnit":31,"src":"213:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":36,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":335,"sourceUnit":1039,"src":"259:33:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":37,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":335,"sourceUnit":1099,"src":"293:37:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":39,"name":"IERC1967","nameLocations":["605:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":20,"src":"605:8:2"},"id":40,"nodeType":"InheritanceSpecifier","src":"605:8:2"}],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"332:236:2","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":334,"linearizedBaseContracts":[334,20],"name":"ERC1967Upgrade","nameLocation":"587:14:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":43,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"724:14:2","nodeType":"VariableDeclaration","scope":334,"src":"699:108:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"699:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"741:66:2","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"814:214:2","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":47,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1059:20:2","nodeType":"VariableDeclaration","scope":334,"src":"1033:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1033:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1082:66:2","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":59,"nodeType":"Block","src":"1289:78:2","statements":[{"expression":{"expression":{"arguments":[{"id":55,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1333:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":53,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1306:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1318:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"1306:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1306:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":57,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1355:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"1306:54:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":52,"id":58,"nodeType":"Return","src":"1299:61:2"}]},"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"1155:67:2","text":" @dev Returns the current implementation address."},"id":60,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1236:18:2","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"1254:2:2"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"1280:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1279:9:2"},"scope":334,"src":"1227:140:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":83,"nodeType":"Block","src":"1521:196:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":69,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1558:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":67,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"1539:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1038_$","typeString":"type(library Address)"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1547:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":726,"src":"1539:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1539:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:47:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":66,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1531:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"ExpressionStatement","src":"1531:95:2"},{"expression":{"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":77,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1663:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":74,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1636:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1648:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"1636:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1685:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"1636:54:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":80,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1693:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1636:74:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":82,"nodeType":"ExpressionStatement","src":"1636:74:2"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1373:80:2","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1467:18:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"newImplementation","nameLocation":"1494:17:2","nodeType":"VariableDeclaration","scope":84,"src":"1486:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1485:27:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"1521:0:2"},"scope":334,"src":"1458:259:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":98,"nodeType":"Block","src":"1879:96:2","statements":[{"expression":{"arguments":[{"id":91,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1908:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1889:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"ExpressionStatement","src":"1889:37:2"},{"eventCall":{"arguments":[{"id":95,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1950:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":94,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1941:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"EmitStatement","src":"1936:32:2"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1723:95:2","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":99,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1832:10:2","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"newImplementation","nameLocation":"1851:17:2","nodeType":"VariableDeclaration","scope":99,"src":"1843:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1842:27:2"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1879:0:2"},"scope":334,"src":"1823:152:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":128,"nodeType":"Block","src":"2237:167:2","statements":[{"expression":{"arguments":[{"id":110,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2258:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":109,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"2247:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"2247:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":113,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"2290:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2295:6:2","memberName":"length","nodeType":"MemberAccess","src":"2290:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2290:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":117,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"2309:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2290:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":127,"nodeType":"IfStatement","src":"2286:112:2","trueBody":{"id":126,"nodeType":"Block","src":"2320:78:2","statements":[{"expression":{"arguments":[{"id":122,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2363:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":123,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"2382:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":119,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2334:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1038_$","typeString":"type(library Address)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2342:20:2","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":925,"src":"2334:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":125,"nodeType":"ExpressionStatement","src":"2334:53:2"}]}}]},"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1981:123:2","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2118:17:2","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"newImplementation","nameLocation":"2153:17:2","nodeType":"VariableDeclaration","scope":129,"src":"2145:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"data","nameLocation":"2193:4:2","nodeType":"VariableDeclaration","scope":129,"src":"2180:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"forceCall","nameLocation":"2212:9:2","nodeType":"VariableDeclaration","scope":129,"src":"2207:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":105,"name":"bool","nodeType":"ElementaryTypeName","src":"2207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2135:92:2"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2237:0:2"},"scope":334,"src":"2109:295:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"2708:820:2","statements":[{"condition":{"expression":{"arguments":[{"id":141,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"3049:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":139,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3022:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3034:14:2","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"3022:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3022:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3065:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"3022:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":179,"nodeType":"Block","src":"3140:382:2","statements":[{"clauses":[{"block":{"id":164,"nodeType":"Block","src":"3234:115:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3260:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":159,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"3268:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3260:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3290:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3252:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3252:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":163,"nodeType":"ExpressionStatement","src":"3252:82:2"}]},"errorName":"","id":165,"nodeType":"TryCatchClause","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"slot","nameLocation":"3228:4:2","nodeType":"VariableDeclaration","scope":165,"src":"3220:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3220:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3219:14:2"},"src":"3211:138:2"},{"block":{"id":170,"nodeType":"Block","src":"3356:89:2","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3381:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":166,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3374:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"ExpressionStatement","src":"3374:56:2"}]},"errorName":"","id":171,"nodeType":"TryCatchClause","src":"3350:95:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":150,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"3176:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":149,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3158:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$30_$","typeString":"type(contract IERC1822Proxiable)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3158:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$30","typeString":"contract IERC1822Proxiable"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":29,"src":"3158:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3158:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":172,"nodeType":"TryStatement","src":"3154:291:2"},{"expression":{"arguments":[{"id":174,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"3476:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":175,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"3495:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":176,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3501:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":173,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3458:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3458:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"3458:53:2"}]},"id":180,"nodeType":"IfStatement","src":"3018:504:2","trueBody":{"id":148,"nodeType":"Block","src":"3072:62:2","statements":[{"expression":{"arguments":[{"id":145,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"3105:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":144,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3086:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":147,"nodeType":"ExpressionStatement","src":"3086:37:2"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"2410:161:2","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2585:21:2","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"newImplementation","nameLocation":"2624:17:2","nodeType":"VariableDeclaration","scope":182,"src":"2616:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2616:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"data","nameLocation":"2664:4:2","nodeType":"VariableDeclaration","scope":182,"src":"2651:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":133,"name":"bytes","nodeType":"ElementaryTypeName","src":"2651:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"forceCall","nameLocation":"2683:9:2","nodeType":"VariableDeclaration","scope":182,"src":"2678:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":135,"name":"bool","nodeType":"ElementaryTypeName","src":"2678:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2606:92:2"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"2708:0:2"},"scope":334,"src":"2576:952:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"3534:189:2","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":186,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3754:11:2","nodeType":"VariableDeclaration","scope":334,"src":"3728:106:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3728:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3768:66:2","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"3949:69:2","statements":[{"expression":{"expression":{"arguments":[{"id":194,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3993:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":192,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3966:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3978:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"3966:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3966:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4006:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"3966:45:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":191,"id":197,"nodeType":"Return","src":"3959:52:2"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"3841:50:2","text":" @dev Returns the current admin."},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3905:9:2","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"3914:2:2"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"3940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"3940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3939:9:2"},"scope":334,"src":"3896:122:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":224,"nodeType":"Block","src":"4145:156:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":206,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4163:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"4175:7:2","typeDescriptions":{}}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4175:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4163:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4187:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4155:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4155:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"4155:73:2"},{"expression":{"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":218,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4265:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":215,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"4238:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4250:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"4238:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4278:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"4238:45:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":221,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4286:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4238:56:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":223,"nodeType":"ExpressionStatement","src":"4238:56:2"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"4024:71:2","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":225,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4109:9:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"newAdmin","nameLocation":"4127:8:2","nodeType":"VariableDeclaration","scope":225,"src":"4119:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"4119:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4118:18:2"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"4145:0:2"},"scope":334,"src":"4100:201:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":241,"nodeType":"Block","src":"4461:86:2","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":232,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"4489:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4489:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":234,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"4502:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":231,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4476:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4476:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"EmitStatement","src":"4471:40:2"},{"expression":{"arguments":[{"id":238,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"4531:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"4521:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4521:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"4521:19:2"}]},"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"4307:100:2","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":242,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4421:12:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"newAdmin","nameLocation":"4442:8:2","nodeType":"VariableDeclaration","scope":242,"src":"4434:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4433:18:2"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"4461:0:2"},"scope":334,"src":"4412:135:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"4553:232:2","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":246,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4816:12:2","nodeType":"VariableDeclaration","scope":334,"src":"4790:107:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4790:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4831:66:2","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":258,"nodeType":"Block","src":"5014:70:2","statements":[{"expression":{"expression":{"arguments":[{"id":254,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"5058:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":252,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"5031:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5043:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"5031:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5031:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5072:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"5031:46:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":251,"id":257,"nodeType":"Return","src":"5024:53:2"}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"4904:51:2","text":" @dev Returns the current beacon."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4969:10:2","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"4979:2:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":259,"src":"5005:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"5005:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5004:9:2"},"scope":334,"src":"4960:124:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"5213:324:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":268,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"5250:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":266,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5231:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1038_$","typeString":"type(library Address)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5239:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":726,"src":"5231:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5231:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5262:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5223:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5223:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"ExpressionStatement","src":"5223:79:2"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":277,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"5360:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":276,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"5352:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$344_$","typeString":"type(contract IBeacon)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$344","typeString":"contract IBeacon"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5371:14:2","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":343,"src":"5352:33:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":274,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5333:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1038_$","typeString":"type(library Address)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5341:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":726,"src":"5333:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5333:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5402:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":273,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5312:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"5312:150:2"},{"expression":{"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":288,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"5499:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":285,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"5472:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1098_$","typeString":"type(library StorageSlot)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5484:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"5472:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5513:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"5472:46:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":291,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"5521:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5472:58:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":293,"nodeType":"ExpressionStatement","src":"5472:58:2"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5090:71:2","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5175:10:2","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"newBeacon","nameLocation":"5194:9:2","nodeType":"VariableDeclaration","scope":295,"src":"5186:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5185:19:2"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"5213:0:2"},"scope":334,"src":"5166:371:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":332,"nodeType":"Block","src":"5966:217:2","statements":[{"expression":{"arguments":[{"id":306,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5987:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":305,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5976:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5976:21:2"},{"eventCall":{"arguments":[{"id":310,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6027:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":309,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"6012:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"EmitStatement","src":"6007:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6051:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6056:6:2","memberName":"length","nodeType":"MemberAccess","src":"6051:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6065:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6051:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":317,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6070:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6051:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":331,"nodeType":"IfStatement","src":"6047:130:2","trueBody":{"id":330,"nodeType":"Block","src":"6081:96:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":323,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6132:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":322,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$344_$","typeString":"type(contract IBeacon)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6124:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$344","typeString":"contract IBeacon"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6143:14:2","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":343,"src":"6124:33:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6124:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6161:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":319,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"6095:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1038_$","typeString":"type(library Address)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6103:20:2","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":925,"src":"6095:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6095:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":329,"nodeType":"ExpressionStatement","src":"6095:71:2"}]}}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"5543:292:2","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":333,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5849:23:2","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"newBeacon","nameLocation":"5890:9:2","nodeType":"VariableDeclaration","scope":333,"src":"5882:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"data","nameLocation":"5922:4:2","nodeType":"VariableDeclaration","scope":333,"src":"5909:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"5909:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"forceCall","nameLocation":"5941:9:2","nodeType":"VariableDeclaration","scope":333,"src":"5936:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":301,"name":"bool","nodeType":"ElementaryTypeName","src":"5936:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5872:84:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[],"src":"5966:0:2"},"scope":334,"src":"5840:343:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":335,"src":"569:5616:2","usedErrors":[]}],"src":"116:6070:2"},"id":2},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[344]},"id":345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":336,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"118:79:3","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":344,"linearizedBaseContracts":[344],"name":"IBeacon","nameLocation":"208:7:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"222:162:3","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":343,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:3","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"412:2:3"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":343,"src":"438:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:3"},"scope":344,"src":"389:58:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":345,"src":"198:251:3","usedErrors":[]}],"src":"93:357:3"},"id":3},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[1038],"Initializable":[513]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":346,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":514,"sourceUnit":1039,"src":"138:33:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"173:2198:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":513,"linearizedBaseContracts":[513],"name":"Initializable","nameLocation":"2390:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"2410:109:4","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":351,"mutability":"mutable","name":"_initialized","nameLocation":"2538:12:4","nodeType":"VariableDeclaration","scope":513,"src":"2524:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":350,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"2557:91:4","text":" @dev Indicates that the contract is in the process of being initialized."},"id":354,"mutability":"mutable","name":"_initializing","nameLocation":"2666:13:4","nodeType":"VariableDeclaration","scope":513,"src":"2653:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2686:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":359,"name":"Initialized","nameLocation":"2787:11:4","nodeType":"EventDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2805:7:4","nodeType":"VariableDeclaration","scope":359,"src":"2799:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":356,"name":"uint8","nodeType":"ElementaryTypeName","src":"2799:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2798:15:4"},"src":"2781:33:4"},{"body":{"id":414,"nodeType":"Block","src":"3247:472:4","statements":[{"assignments":[363],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3262:14:4","nodeType":"VariableDeclaration","scope":414,"src":"3257:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"3257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":366,"initialValue":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3279:14:4","subExpression":{"id":364,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3280:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3257:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":368,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3325:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":369,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"3343:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3343:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3325:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3324:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3365:34:4","subExpression":{"arguments":[{"arguments":[{"id":378,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3393:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$513","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$513","typeString":"contract Initializable"}],"id":377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3385:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"3385:7:4","typeDescriptions":{}}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":374,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"3366:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1038_$","typeString":"type(library Address)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3374:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":726,"src":"3366:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3366:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"3403:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3419:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3403:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3365:55:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3364:57:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3324:97:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3435:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3303:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:190:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"3303:190:4"},{"expression":{"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":391,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"3503:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3518:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3503:16:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":394,"nodeType":"ExpressionStatement","src":"3503:16:4"},{"condition":{"id":395,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3533:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":401,"nodeType":"IfStatement","src":"3529:65:4","trueBody":{"id":400,"nodeType":"Block","src":"3549:45:4","statements":[{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":396,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3563:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3579:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3563:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":399,"nodeType":"ExpressionStatement","src":"3563:20:4"}]}},{"id":402,"nodeType":"PlaceholderStatement","src":"3603:1:4"},{"condition":{"id":403,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3618:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"IfStatement","src":"3614:99:4","trueBody":{"id":412,"nodeType":"Block","src":"3634:79:4","statements":[{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":404,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3648:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3664:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3648:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"ExpressionStatement","src":"3648:21:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3700:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":408,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3688:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3688:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"EmitStatement","src":"3683:19:4"}]}}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"2820:399:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":415,"name":"initializer","nameLocation":"3233:11:4","nodeType":"ModifierDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"3244:2:4"},"src":"3224:495:4","virtual":false,"visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"4830:255:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4848:14:4","subExpression":{"id":421,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"4849:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":423,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4866:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":424,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4881:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4866:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4848:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4890:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4840:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4840:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"4840:99:4"},{"expression":{"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":430,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4949:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":431,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4964:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4949:22:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":433,"nodeType":"ExpressionStatement","src":"4949:22:4"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":434,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"4981:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4997:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4981:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"4981:20:4"},{"id":438,"nodeType":"PlaceholderStatement","src":"5011:1:4"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":439,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5022:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5038:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5022:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":442,"nodeType":"ExpressionStatement","src":"5022:21:4"},{"eventCall":{"arguments":[{"id":444,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5070:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":443,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"5058:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"EmitStatement","src":"5053:25:4"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"3725:1062:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":448,"name":"reinitializer","nameLocation":"4801:13:4","nodeType":"ModifierDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"version","nameLocation":"4821:7:4","nodeType":"VariableDeclaration","scope":448,"src":"4815:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":417,"name":"uint8","nodeType":"ElementaryTypeName","src":"4815:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4814:15:4"},"src":"4792:293:4","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"5323:97:4","statements":[{"expression":{"arguments":[{"id":452,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5341:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5356:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5333:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5333:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"5333:69:4"},{"id":456,"nodeType":"PlaceholderStatement","src":"5412:1:4"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"5091:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":458,"name":"onlyInitializing","nameLocation":"5304:16:4","nodeType":"ModifierDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"5320:2:4"},"src":"5295:125:4","virtual":false,"visibility":"internal"},{"body":{"id":493,"nodeType":"Block","src":"5955:230:4","statements":[{"expression":{"arguments":[{"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5973:14:4","subExpression":{"id":463,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5974:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5965:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"5965:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6045:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6065:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":470,"name":"uint8","nodeType":"ElementaryTypeName","src":"6065:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":469,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6060:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6060:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6072:3:4","memberName":"max","nodeType":"MemberAccess","src":"6060:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6045:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6041:138:4","trueBody":{"id":491,"nodeType":"Block","src":"6077:102:4","statements":[{"expression":{"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":475,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6091:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":477,"name":"uint8","nodeType":"ElementaryTypeName","src":"6111:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6106:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6118:3:4","memberName":"max","nodeType":"MemberAccess","src":"6106:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6091:30:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":482,"nodeType":"ExpressionStatement","src":"6091:30:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6157:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":485,"name":"uint8","nodeType":"ElementaryTypeName","src":"6157:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6152:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6164:3:4","memberName":"max","nodeType":"MemberAccess","src":"6152:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":483,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"6140:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"EmitStatement","src":"6135:33:4"}]}}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"5426:475:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":494,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5915:20:4","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"5935:2:4"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"5955:0:4"},"scope":513,"src":"5906:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":502,"nodeType":"Block","src":"6359:36:4","statements":[{"expression":{"id":500,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6376:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":499,"id":501,"nodeType":"Return","src":"6369:19:4"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"6191:99:4","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":503,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6304:22:4","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"6326:2:4"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"6352:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":497,"name":"uint8","nodeType":"ElementaryTypeName","src":"6352:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6351:7:4"},"scope":513,"src":"6295:100:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"6567:37:4","statements":[{"expression":{"id":509,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6584:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":508,"id":510,"nodeType":"Return","src":"6577:20:4"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"6401:105:4","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":512,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6520:15:4","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"6535:2:4"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"6561:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":506,"name":"bool","nodeType":"ElementaryTypeName","src":"6561:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6560:6:4"},"scope":513,"src":"6511:93:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":514,"src":"2372:4234:4","usedErrors":[]}],"src":"113:6494:4"},"id":4},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"Address":[1038],"ERC1967Upgrade":[334],"IBeacon":[344],"IERC1822Proxiable":[30],"IERC1967":[20],"StorageSlot":[1098],"UUPSUpgradeable":[629]},"id":630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":630,"sourceUnit":31,"src":"140:45:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"../ERC1967/ERC1967Upgrade.sol","id":517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":630,"sourceUnit":335,"src":"186:39:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":519,"name":"IERC1822Proxiable","nameLocations":["913:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":30,"src":"913:17:5"},"id":520,"nodeType":"InheritanceSpecifier","src":"913:17:5"},{"baseName":{"id":521,"name":"ERC1967Upgrade","nameLocations":["932:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":334,"src":"932:14:5"},"id":522,"nodeType":"InheritanceSpecifier","src":"932:14:5"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"227:648:5","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":629,"linearizedBaseContracts":[629,334,20,30],"name":"UUPSUpgradeable","nameLocation":"894:15:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"953:87:5","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":529,"mutability":"immutable","name":"__self","nameLocation":"1071:6:5","nodeType":"VariableDeclaration","scope":629,"src":"1045:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":527,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1088:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$629","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$629","typeString":"contract UUPSUpgradeable"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1080:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:5","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1080:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":551,"nodeType":"Block","src":"1619:205:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1645:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$629","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$629","typeString":"contract UUPSUpgradeable"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:5","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":537,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1654:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1662:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1629:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:80:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"1629:80:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":543,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1727:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":545,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1751:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1727:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1719:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"1719:87:5"},{"id":550,"nodeType":"PlaceholderStatement","src":"1816:1:5"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"1100:493:5","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":552,"name":"onlyProxy","nameLocation":"1607:9:5","nodeType":"ModifierDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"1616:2:5"},"src":"1598:226:5","virtual":false,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"2054:120:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":558,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2080:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$629","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$629","typeString":"contract UUPSUpgradeable"}],"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:5","typeDescriptions":{}}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":560,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2089:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2072:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2097:58:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":555,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2064:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"2064:92:5"},{"id":565,"nodeType":"PlaceholderStatement","src":"2166:1:5"}]},"documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"1830:195:5","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":567,"name":"notDelegated","nameLocation":"2039:12:5","nodeType":"ModifierDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"2051:2:5"},"src":"2030:144:5","virtual":false,"visibility":"internal"},{"baseFunctions":[29],"body":{"id":578,"nodeType":"Block","src":"2849:44:5","statements":[{"expression":{"id":576,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2866:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":575,"id":577,"nodeType":"Return","src":"2859:27:5"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"2180:577:5","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":579,"implemented":true,"kind":"function","modifiers":[{"id":572,"kind":"modifierInvocation","modifierName":{"id":571,"name":"notDelegated","nameLocations":["2818:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"2818:12:5"},"nodeType":"ModifierInvocation","src":"2818:12:5"}],"name":"proxiableUUID","nameLocation":"2771:13:5","nodeType":"FunctionDefinition","overrides":{"id":570,"nodeType":"OverrideSpecifier","overrides":[],"src":"2809:8:5"},"parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"2784:2:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"2840:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2840:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2839:9:5"},"scope":629,"src":"2762:131:5","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":600,"nodeType":"Block","src":"3146:124:5","statements":[{"expression":{"arguments":[{"id":588,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3174:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":587,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3156:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"3156:36:5"},{"expression":{"arguments":[{"id":592,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3224:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3243:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":593,"name":"bytes","nodeType":"ElementaryTypeName","src":"3247:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3243:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3257:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":591,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3202:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"ExpressionStatement","src":"3202:61:5"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"2899:169:5","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":601,"implemented":true,"kind":"function","modifiers":[{"id":585,"kind":"modifierInvocation","modifierName":{"id":584,"name":"onlyProxy","nameLocations":["3136:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":552,"src":"3136:9:5"},"nodeType":"ModifierInvocation","src":"3136:9:5"}],"name":"upgradeTo","nameLocation":"3082:9:5","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"newImplementation","nameLocation":"3100:17:5","nodeType":"VariableDeclaration","scope":601,"src":"3092:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"3092:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3091:27:5"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"3146:0:5"},"scope":629,"src":"3073:197:5","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":621,"nodeType":"Block","src":"3626:115:5","statements":[{"expression":{"arguments":[{"id":612,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3654:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":611,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3636:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"ExpressionStatement","src":"3636:36:5"},{"expression":{"arguments":[{"id":616,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3704:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3723:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3729:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":615,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3682:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3682:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"3682:52:5"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"3276:238:5","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":622,"implemented":true,"kind":"function","modifiers":[{"id":609,"kind":"modifierInvocation","modifierName":{"id":608,"name":"onlyProxy","nameLocations":["3616:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":552,"src":"3616:9:5"},"nodeType":"ModifierInvocation","src":"3616:9:5"}],"name":"upgradeToAndCall","nameLocation":"3528:16:5","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"newImplementation","nameLocation":"3553:17:5","nodeType":"VariableDeclaration","scope":622,"src":"3545:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"data","nameLocation":"3585:4:5","nodeType":"VariableDeclaration","scope":622,"src":"3572:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":605,"name":"bytes","nodeType":"ElementaryTypeName","src":"3572:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3544:46:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"3626:0:5"},"scope":629,"src":"3519:222:5","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"3747:397:5","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":628,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4158:17:5","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"newImplementation","nameLocation":"4184:17:5","nodeType":"VariableDeclaration","scope":628,"src":"4176:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:27:5"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"4219:0:5"},"scope":629,"src":"4149:71:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":630,"src":"876:3346:5","usedErrors":[]}],"src":"115:4108:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[670],"IERC165":[1646]},"id":671,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":631,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":671,"sourceUnit":1647,"src":"143:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":634,"name":"IERC165","nameLocations":["262:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"262:7:6"},"id":635,"nodeType":"InheritanceSpecifier","src":"262:7:6"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"192:39:6","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":670,"linearizedBaseContracts":[670,1646],"name":"IERC1155Receiver","nameLocation":"242:16:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"276:826:6","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:6","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"operator","nameLocation":"1151:8:6","nodeType":"VariableDeclaration","scope":651,"src":"1143:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"from","nameLocation":"1177:4:6","nodeType":"VariableDeclaration","scope":651,"src":"1169:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"1199:2:6","nodeType":"VariableDeclaration","scope":651,"src":"1191:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"1219:5:6","nodeType":"VariableDeclaration","scope":651,"src":"1211:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"data","nameLocation":"1249:4:6","nodeType":"VariableDeclaration","scope":651,"src":"1234:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":645,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:6"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"1278:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":648,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:6"},"scope":670,"src":"1107:179:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"1292:994:6","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":669,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:6","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"operator","nameLocation":"2340:8:6","nodeType":"VariableDeclaration","scope":669,"src":"2332:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"from","nameLocation":"2366:4:6","nodeType":"VariableDeclaration","scope":669,"src":"2358:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"ids","nameLocation":"2399:3:6","nodeType":"VariableDeclaration","scope":669,"src":"2380:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ArrayTypeName","src":"2380:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"values","nameLocation":"2431:6:6","nodeType":"VariableDeclaration","scope":669,"src":"2412:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":661,"nodeType":"ArrayTypeName","src":"2412:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"data","nameLocation":"2462:4:6","nodeType":"VariableDeclaration","scope":669,"src":"2447:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":663,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:6"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":669,"src":"2491:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":666,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:6"},"scope":670,"src":"2291:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":671,"src":"232:2269:6","usedErrors":[]}],"src":"118:2384:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[688]},"id":689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":672,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"141:152:7","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":688,"linearizedBaseContracts":[688],"name":"IERC721Receiver","nameLocation":"304:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"326:493:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":687,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:7","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"operator","nameLocation":"867:8:7","nodeType":"VariableDeclaration","scope":687,"src":"859:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"from","nameLocation":"893:4:7","nodeType":"VariableDeclaration","scope":687,"src":"885:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:7","nodeType":"VariableDeclaration","scope":687,"src":"907:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"data","nameLocation":"947:4:7","nodeType":"VariableDeclaration","scope":687,"src":"932:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":681,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:7"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"976:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":684,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:7"},"scope":688,"src":"824:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":689,"src":"294:692:7","usedErrors":[]}],"src":"116:871:7"},"id":7},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","exportedSymbols":{"IERC777Recipient":[708]},"id":709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":690,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC777Recipient","contractDependencies":[],"contractKind":"interface","documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"127:406:8","text":" @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."},"fullyImplemented":false,"id":708,"linearizedBaseContracts":[708],"name":"IERC777Recipient","nameLocation":"544:16:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"567:474:8","text":" @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."},"functionSelector":"0023de29","id":707,"implemented":false,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"1055:14:8","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"operator","nameLocation":"1087:8:8","nodeType":"VariableDeclaration","scope":707,"src":"1079:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"from","nameLocation":"1113:4:8","nodeType":"VariableDeclaration","scope":707,"src":"1105:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"to","nameLocation":"1135:2:8","nodeType":"VariableDeclaration","scope":707,"src":"1127:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"amount","nameLocation":"1155:6:8","nodeType":"VariableDeclaration","scope":707,"src":"1147:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"userData","nameLocation":"1186:8:8","nodeType":"VariableDeclaration","scope":707,"src":"1171:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"1171:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"operatorData","nameLocation":"1219:12:8","nodeType":"VariableDeclaration","scope":707,"src":"1204:27:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"1204:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:168:8"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"1246:0:8"},"scope":708,"src":"1046:201:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":709,"src":"534:715:8","usedErrors":[]}],"src":"102:1148:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1038]},"id":1039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":710,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1038,"linearizedBaseContracts":[1038],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":725,"nodeType":"Block","src":"1241:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":719,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"1465:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:9","memberName":"code","nodeType":"MemberAccess","src":"1465:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:9","memberName":"length","nodeType":"MemberAccess","src":"1465:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":718,"id":724,"nodeType":"Return","src":"1458:30:9"}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"216:954:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:9","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"account","nameLocation":"1203:7:9","nodeType":"VariableDeclaration","scope":726,"src":"1195:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:9"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"1235:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:9"},"scope":1038,"src":"1175:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"2483:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":737,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1038","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1038","typeString":"library Address"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:9","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":740,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2526:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"2493:73:9"},{"assignments":[746,null],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"success","nameLocation":"2583:7:9","nodeType":"VariableDeclaration","scope":759,"src":"2578:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":753,"initialValue":{"arguments":[{"hexValue":"","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":747,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2596:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:9","memberName":"call","nodeType":"MemberAccess","src":"2596:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2618:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:9"},{"expression":{"arguments":[{"id":755,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2647:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"2639:78:9"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"1501:906:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:9","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:9","nodeType":"VariableDeclaration","scope":760,"src":"2431:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"amount","nameLocation":"2466:6:9","nodeType":"VariableDeclaration","scope":760,"src":"2458:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:9"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"2483:0:9"},"scope":1038,"src":"2412:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":777,"nodeType":"Block","src":"3555:96:9","statements":[{"expression":{"arguments":[{"id":771,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"3594:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"3602:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":770,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[818,862],"referencedDeclaration":862,"src":"3572:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":769,"id":776,"nodeType":"Return","src":"3565:79:9"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"2730:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:9","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"target","nameLocation":"3496:6:9","nodeType":"VariableDeclaration","scope":778,"src":"3488:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"data","nameLocation":"3517:4:9","nodeType":"VariableDeclaration","scope":778,"src":"3504:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":764,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:9"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3541:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:9"},"scope":1038,"src":"3466:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"4020:76:9","statements":[{"expression":{"arguments":[{"id":791,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4059:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4067:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":794,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4076:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":790,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[818,862],"referencedDeclaration":862,"src":"4037:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":789,"id":796,"nodeType":"Return","src":"4030:59:9"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"3657:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:9","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"target","nameLocation":"3912:6:9","nodeType":"VariableDeclaration","scope":798,"src":"3904:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"data","nameLocation":"3941:4:9","nodeType":"VariableDeclaration","scope":798,"src":"3928:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:9","nodeType":"VariableDeclaration","scope":798,"src":"3955:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":784,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:9"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"4006:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:9"},"scope":1038,"src":"3873:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"4601:111:9","statements":[{"expression":{"arguments":[{"id":811,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"4640:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"4648:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"4654:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":810,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[818,862],"referencedDeclaration":862,"src":"4618:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":809,"id":816,"nodeType":"Return","src":"4611:94:9"}]},"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"4102:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:9","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"target","nameLocation":"4506:6:9","nodeType":"VariableDeclaration","scope":818,"src":"4498:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"data","nameLocation":"4535:4:9","nodeType":"VariableDeclaration","scope":818,"src":"4522:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"value","nameLocation":"4557:5:9","nodeType":"VariableDeclaration","scope":818,"src":"4549:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:9"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"4587:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:9"},"scope":1038,"src":"4458:254:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"5139:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":835,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1038","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1038","typeString":"library Address"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:9","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5182:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":842,"nodeType":"ExpressionStatement","src":"5149:81:9"},{"assignments":[844,846],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"success","nameLocation":"5246:7:9","nodeType":"VariableDeclaration","scope":861,"src":"5241:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":843,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:9","nodeType":"VariableDeclaration","scope":861,"src":"5255:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":845,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":853,"initialValue":{"arguments":[{"id":851,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5308:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":847,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5282:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:9","memberName":"call","nodeType":"MemberAccess","src":"5282:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5301:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:9"},{"expression":{"arguments":[{"id":855,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5357:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":856,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"5365:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":857,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5374:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":858,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5386:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":854,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5330:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":831,"id":860,"nodeType":"Return","src":"5323:76:9"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"4718:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:9","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"target","nameLocation":"5008:6:9","nodeType":"VariableDeclaration","scope":862,"src":"5000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"data","nameLocation":"5037:4:9","nodeType":"VariableDeclaration","scope":862,"src":"5024:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":822,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"value","nameLocation":"5059:5:9","nodeType":"VariableDeclaration","scope":862,"src":"5051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:9","nodeType":"VariableDeclaration","scope":862,"src":"5074:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":826,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:9"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"5125:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":829,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:9"},"scope":1038,"src":"4960:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"5683:97:9","statements":[{"expression":{"arguments":[{"id":873,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"5719:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"5727:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":872,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[879,908],"referencedDeclaration":908,"src":"5700:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":871,"id":877,"nodeType":"Return","src":"5693:80:9"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"5412:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:9","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"target","nameLocation":"5619:6:9","nodeType":"VariableDeclaration","scope":879,"src":"5611:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"data","nameLocation":"5640:4:9","nodeType":"VariableDeclaration","scope":879,"src":"5627:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:9"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"5669:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:9"},"scope":1038,"src":"5583:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":907,"nodeType":"Block","src":"6122:168:9","statements":[{"assignments":[892,894],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"success","nameLocation":"6138:7:9","nodeType":"VariableDeclaration","scope":907,"src":"6133:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:9","nodeType":"VariableDeclaration","scope":907,"src":"6147:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":899,"initialValue":{"arguments":[{"id":897,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6192:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6174:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:9"},{"expression":{"arguments":[{"id":901,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6241:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"6249:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":903,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6258:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":904,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6270:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":900,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6214:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":890,"id":906,"nodeType":"Return","src":"6207:76:9"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"5786:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":908,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:9","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"target","nameLocation":"6009:6:9","nodeType":"VariableDeclaration","scope":908,"src":"6001:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"data","nameLocation":"6038:4:9","nodeType":"VariableDeclaration","scope":908,"src":"6025:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":883,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:9","nodeType":"VariableDeclaration","scope":908,"src":"6052:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":885,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:9"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"6108:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":888,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:9"},"scope":1038,"src":"5964:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":924,"nodeType":"Block","src":"6566:101:9","statements":[{"expression":{"arguments":[{"id":919,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"6604:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"6612:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":918,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[925,954],"referencedDeclaration":954,"src":"6583:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":917,"id":923,"nodeType":"Return","src":"6576:84:9"}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"6296:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":925,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:9","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"target","nameLocation":"6507:6:9","nodeType":"VariableDeclaration","scope":925,"src":"6499:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"data","nameLocation":"6528:4:9","nodeType":"VariableDeclaration","scope":925,"src":"6515:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:9"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"6552:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:9"},"scope":1038,"src":"6469:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":953,"nodeType":"Block","src":"7008:170:9","statements":[{"assignments":[938,940],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"success","nameLocation":"7024:7:9","nodeType":"VariableDeclaration","scope":953,"src":"7019:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":937,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:9","nodeType":"VariableDeclaration","scope":953,"src":"7033:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":945,"initialValue":{"arguments":[{"id":943,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7080:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":941,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7060:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:9"},{"expression":{"arguments":[{"id":947,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7129:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"7137:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":949,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7146:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":950,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7158:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":946,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7102:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":936,"id":952,"nodeType":"Return","src":"7095:76:9"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"6673:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:9","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"target","nameLocation":"6900:6:9","nodeType":"VariableDeclaration","scope":954,"src":"6892:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"data","nameLocation":"6929:4:9","nodeType":"VariableDeclaration","scope":954,"src":"6916:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:9","nodeType":"VariableDeclaration","scope":954,"src":"6943:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":931,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:9"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"6994:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:9"},"scope":1038,"src":"6853:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"7660:434:9","statements":[{"condition":{"id":968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7674:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":990,"nodeType":"Block","src":"8030:58:9","statements":[{"expression":{"arguments":[{"id":986,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8052:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":987,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"8064:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":985,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8044:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"8044:33:9"}]},"id":991,"nodeType":"IfStatement","src":"7670:418:9","trueBody":{"id":984,"nodeType":"Block","src":"7683:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7701:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:9","memberName":"length","nodeType":"MemberAccess","src":"7701:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":981,"nodeType":"IfStatement","src":"7697:286:9","trueBody":{"id":980,"nodeType":"Block","src":"7725:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":975,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7927:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7916:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"7908:60:9"}]}},{"expression":{"id":982,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8003:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":967,"id":983,"nodeType":"Return","src":"7996:17:9"}]}}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7184:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:9","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"target","nameLocation":"7519:6:9","nodeType":"VariableDeclaration","scope":993,"src":"7511:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"success","nameLocation":"7540:7:9","nodeType":"VariableDeclaration","scope":993,"src":"7535:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":958,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:9","nodeType":"VariableDeclaration","scope":993,"src":"7557:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":960,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:9","nodeType":"VariableDeclaration","scope":993,"src":"7590:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":962,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:9"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"7646:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":965,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:9"},"scope":1038,"src":"7466:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1016,"nodeType":"Block","src":"8475:135:9","statements":[{"condition":{"id":1005,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"8489:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1014,"nodeType":"Block","src":"8546:58:9","statements":[{"expression":{"arguments":[{"id":1010,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"8568:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1011,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8580:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1009,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8560:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1013,"nodeType":"ExpressionStatement","src":"8560:33:9"}]},"id":1015,"nodeType":"IfStatement","src":"8485:119:9","trueBody":{"id":1008,"nodeType":"Block","src":"8498:42:9","statements":[{"expression":{"id":1006,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"8519:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1004,"id":1007,"nodeType":"Return","src":"8512:17:9"}]}}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"8100:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:9","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"success","nameLocation":"8355:7:9","nodeType":"VariableDeclaration","scope":1017,"src":"8350:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":995,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:9","nodeType":"VariableDeclaration","scope":1017,"src":"8372:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":997,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:9","nodeType":"VariableDeclaration","scope":1017,"src":"8405:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":999,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:9"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"8461:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1002,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:9"},"scope":1038,"src":"8315:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1036,"nodeType":"Block","src":"8699:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1024,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8775:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:9","memberName":"length","nodeType":"MemberAccess","src":"8775:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1034,"nodeType":"Block","src":"9105:45:9","statements":[{"expression":{"arguments":[{"id":1031,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"9126:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1030,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"ExpressionStatement","src":"9119:20:9"}]},"id":1035,"nodeType":"IfStatement","src":"8771:379:9","trueBody":{"id":1029,"nodeType":"Block","src":"8798:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:9"},"nodeType":"YulFunctionCall","src":"8997:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:9"},"nodeType":"YulFunctionCall","src":"9038:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:9"},"nodeType":"YulFunctionCall","src":"9031:44:9"},"nodeType":"YulExpressionStatement","src":"9031:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1019,"isOffset":false,"isSlot":false,"src":"9003:10:9","valueSize":1},{"declaration":1019,"isOffset":false,"isSlot":false,"src":"9046:10:9","valueSize":1}],"id":1028,"nodeType":"InlineAssembly","src":"8947:142:9"}]}}]},"id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:9","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:9","nodeType":"VariableDeclaration","scope":1037,"src":"8633:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1018,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:9","nodeType":"VariableDeclaration","scope":1037,"src":"8658:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:9"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"8699:0:9"},"scope":1038,"src":"8616:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1039,"src":"194:8964:9","usedErrors":[]}],"src":"101:9058:9"},"id":9},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1098]},"id":1099,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1040,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"130:1148:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":1098,"linearizedBaseContracts":[1098],"name":"StorageSlot","nameLocation":"1287:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1044,"members":[{"constant":false,"id":1043,"mutability":"mutable","name":"value","nameLocation":"1342:5:10","nodeType":"VariableDeclaration","scope":1044,"src":"1334:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"1334:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1312:11:10","nodeType":"StructDefinition","scope":1098,"src":"1305:49:10","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1047,"members":[{"constant":false,"id":1046,"mutability":"mutable","name":"value","nameLocation":"1394:5:10","nodeType":"VariableDeclaration","scope":1047,"src":"1389:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1045,"name":"bool","nodeType":"ElementaryTypeName","src":"1389:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1367:11:10","nodeType":"StructDefinition","scope":1098,"src":"1360:46:10","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1050,"members":[{"constant":false,"id":1049,"mutability":"mutable","name":"value","nameLocation":"1449:5:10","nodeType":"VariableDeclaration","scope":1050,"src":"1441:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1419:11:10","nodeType":"StructDefinition","scope":1098,"src":"1412:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1053,"members":[{"constant":false,"id":1052,"mutability":"mutable","name":"value","nameLocation":"1504:5:10","nodeType":"VariableDeclaration","scope":1053,"src":"1496:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1474:11:10","nodeType":"StructDefinition","scope":1098,"src":"1467:49:10","visibility":"public"},{"body":{"id":1063,"nodeType":"Block","src":"1698:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1760:38:10","statements":[{"nodeType":"YulAssignment","src":"1774:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"1784:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1774:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1060,"isOffset":false,"isSlot":true,"src":"1774:6:10","suffix":"slot","valueSize":1},{"declaration":1056,"isOffset":false,"isSlot":false,"src":"1784:4:10","valueSize":1}],"id":1062,"nodeType":"InlineAssembly","src":"1751:47:10"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"1522:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1623:14:10","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"slot","nameLocation":"1646:4:10","nodeType":"VariableDeclaration","scope":1064,"src":"1638:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1637:14:10"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"r","nameLocation":"1695:1:10","nodeType":"VariableDeclaration","scope":1064,"src":"1675:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"AddressSlot","nameLocations":["1675:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1044,"src":"1675:11:10"},"referencedDeclaration":1044,"src":"1675:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1044_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1674:23:10"},"scope":1098,"src":"1614:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"1986:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2048:38:10","statements":[{"nodeType":"YulAssignment","src":"2062:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2072:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2062:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1071,"isOffset":false,"isSlot":true,"src":"2062:6:10","suffix":"slot","valueSize":1},{"declaration":1067,"isOffset":false,"isSlot":false,"src":"2072:4:10","valueSize":1}],"id":1073,"nodeType":"InlineAssembly","src":"2039:47:10"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"1810:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1911:14:10","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"slot","nameLocation":"1934:4:10","nodeType":"VariableDeclaration","scope":1075,"src":"1926:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1926:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1925:14:10"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"r","nameLocation":"1983:1:10","nodeType":"VariableDeclaration","scope":1075,"src":"1963:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1070,"nodeType":"UserDefinedTypeName","pathNode":{"id":1069,"name":"BooleanSlot","nameLocations":["1963:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1963:11:10"},"referencedDeclaration":1047,"src":"1963:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"1962:23:10"},"scope":1098,"src":"1902:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"2274:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2336:38:10","statements":[{"nodeType":"YulAssignment","src":"2350:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2360:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2350:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1082,"isOffset":false,"isSlot":true,"src":"2350:6:10","suffix":"slot","valueSize":1},{"declaration":1078,"isOffset":false,"isSlot":false,"src":"2360:4:10","valueSize":1}],"id":1084,"nodeType":"InlineAssembly","src":"2327:47:10"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"2098:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2199:14:10","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"slot","nameLocation":"2222:4:10","nodeType":"VariableDeclaration","scope":1086,"src":"2214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:14:10"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"r","nameLocation":"2271:1:10","nodeType":"VariableDeclaration","scope":1086,"src":"2251:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1050_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1081,"nodeType":"UserDefinedTypeName","pathNode":{"id":1080,"name":"Bytes32Slot","nameLocations":["2251:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1050,"src":"2251:11:10"},"referencedDeclaration":1050,"src":"2251:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1050_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2250:23:10"},"scope":1098,"src":"2190:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1096,"nodeType":"Block","src":"2562:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2624:38:10","statements":[{"nodeType":"YulAssignment","src":"2638:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2648:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2638:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1093,"isOffset":false,"isSlot":true,"src":"2638:6:10","suffix":"slot","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"2648:4:10","valueSize":1}],"id":1095,"nodeType":"InlineAssembly","src":"2615:47:10"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"2386:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2487:14:10","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"slot","nameLocation":"2510:4:10","nodeType":"VariableDeclaration","scope":1097,"src":"2502:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2501:14:10"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"r","nameLocation":"2559:1:10","nodeType":"VariableDeclaration","scope":1097,"src":"2539:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1053_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1092,"nodeType":"UserDefinedTypeName","pathNode":{"id":1091,"name":"Uint256Slot","nameLocations":["2539:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1053,"src":"2539:11:10"},"referencedDeclaration":1053,"src":"2539:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1053_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2538:23:10"},"scope":1098,"src":"2478:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1099,"src":"1279:1391:10","usedErrors":[]}],"src":"105:2566:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2511],"Strings":[1273]},"id":1274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1100,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":2512,"src":"126:25:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"153:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":1273,"linearizedBaseContracts":[1273],"name":"Strings","nameLocation":"196:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1105,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:11","nodeType":"VariableDeclaration","scope":1273,"src":"210:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1103,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1108,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:11","nodeType":"VariableDeclaration","scope":1273,"src":"270:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1106,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1155,"nodeType":"Block","src":"486:625:11","statements":[{"id":1154,"nodeType":"UncheckedBlock","src":"496:609:11","statements":[{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":1154,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1124,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"548:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1118,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"537:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2511_$","typeString":"type(library Math)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2348,"src":"537:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:11"},{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"buffer","nameLocation":"586:6:11","nodeType":"VariableDeclaration","scope":1154,"src":"572:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1125,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1131,"initialValue":{"arguments":[{"id":1129,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"606:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1127,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:11"},{"assignments":[1133],"declarations":[{"constant":false,"id":1133,"mutability":"mutable","name":"ptr","nameLocation":"635:3:11","nodeType":"VariableDeclaration","scope":1154,"src":"627:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1134,"nodeType":"VariableDeclarationStatement","src":"627:11:11"},{"AST":{"nodeType":"YulBlock","src":"708:67:11","statements":[{"nodeType":"YulAssignment","src":"726:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:11"},"nodeType":"YulFunctionCall","src":"745:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:11"},"nodeType":"YulFunctionCall","src":"733:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1126,"isOffset":false,"isSlot":false,"src":"737:6:11","valueSize":1},{"declaration":1117,"isOffset":false,"isSlot":false,"src":"753:6:11","valueSize":1},{"declaration":1133,"isOffset":false,"isSlot":false,"src":"726:3:11","valueSize":1}],"id":1135,"nodeType":"InlineAssembly","src":"699:76:11"},{"body":{"id":1150,"nodeType":"Block","src":"801:267:11","statements":[{"expression":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:11","subExpression":{"id":1137,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"819:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ExpressionStatement","src":"819:5:11"},{"AST":{"nodeType":"YulBlock","src":"902:84:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:11"},"nodeType":"YulFunctionCall","src":"942:14:11"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:11"},"nodeType":"YulFunctionCall","src":"937:30:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:11"},"nodeType":"YulFunctionCall","src":"924:44:11"},"nodeType":"YulExpressionStatement","src":"924:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1105,"isOffset":false,"isSlot":false,"src":"958:8:11","valueSize":1},{"declaration":1133,"isOffset":false,"isSlot":false,"src":"932:3:11","valueSize":1},{"declaration":1111,"isOffset":false,"isSlot":false,"src":"946:5:11","valueSize":1}],"id":1140,"nodeType":"InlineAssembly","src":"893:93:11"},{"expression":{"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1003:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1144,"nodeType":"ExpressionStatement","src":"1003:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1036:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"nodeType":"IfStatement","src":"1032:21:11","trueBody":{"id":1148,"nodeType":"Break","src":"1048:5:11"}}]},"condition":{"hexValue":"74727565","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1151,"nodeType":"WhileStatement","src":"788:280:11"},{"expression":{"id":1152,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"1088:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1115,"id":1153,"nodeType":"Return","src":"1081:13:11"}]}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"320:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:11","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"value","nameLocation":"441:5:11","nodeType":"VariableDeclaration","scope":1156,"src":"433:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:11"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"471:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1113,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:11"},"scope":1273,"src":"415:696:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"1290:100:11","statements":[{"id":1174,"nodeType":"UncheckedBlock","src":"1300:84:11","statements":[{"expression":{"arguments":[{"id":1165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1166,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1350:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2511_$","typeString":"type(library Math)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"1350:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1164,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1176,1252,1272],"referencedDeclaration":1252,"src":"1331:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1163,"id":1173,"nodeType":"Return","src":"1324:49:11"}]}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"1117:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:11","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"value","nameLocation":"1245:5:11","nodeType":"VariableDeclaration","scope":1176,"src":"1237:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:11"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"1275:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1161,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:11"},"scope":1273,"src":"1216:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"1603:347:11","statements":[{"assignments":[1187],"declarations":[{"constant":false,"id":1187,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:11","nodeType":"VariableDeclaration","scope":1251,"src":"1613:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1186,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1196,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1191,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"1649:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1188,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:11"},{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1197,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1670:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1199,"indexExpression":{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1202,"nodeType":"ExpressionStatement","src":"1670:15:11"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1203,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1695:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1205,"indexExpression":{"hexValue":"31","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1208,"nodeType":"ExpressionStatement","src":"1695:15:11"},{"body":{"id":1237,"nodeType":"Block","src":"1765:83:11","statements":[{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1223,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1779:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1225,"indexExpression":{"id":1224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1786:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1226,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1791:8:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1230,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1800:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1232,"nodeType":"ExpressionStatement","src":"1779:33:11"},{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1826:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1236,"nodeType":"ExpressionStatement","src":"1826:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1753:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"initializationExpression":{"assignments":[1210],"declarations":[{"constant":false,"id":1210,"mutability":"mutable","name":"i","nameLocation":"1733:1:11","nodeType":"VariableDeclaration","scope":1238,"src":"1725:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1216,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1212,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"1741:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:11"},"loopExpression":{"expression":{"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:11","subExpression":{"id":1220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1762:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1222,"nodeType":"ExpressionStatement","src":"1760:3:11"},"nodeType":"ForStatement","src":"1720:128:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"1857:55:11"},{"expression":{"arguments":[{"id":1248,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1936:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1246,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:11","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1185,"id":1250,"nodeType":"Return","src":"1922:21:11"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"1396:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:11","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"value","nameLocation":"1542:5:11","nodeType":"VariableDeclaration","scope":1252,"src":"1534:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"length","nameLocation":"1557:6:11","nodeType":"VariableDeclaration","scope":1252,"src":"1549:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:11"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"1588:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1183,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:11"},"scope":1273,"src":"1513:437:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1271,"nodeType":"Block","src":"2175:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1265,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2220:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1263,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:11","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:11","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1268,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2228:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1260,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1176,1252,1272],"referencedDeclaration":1252,"src":"2192:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1259,"id":1270,"nodeType":"Return","src":"2185:59:11"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1956:141:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:11","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"addr","nameLocation":"2131:4:11","nodeType":"VariableDeclaration","scope":1272,"src":"2123:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:11"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1272,"src":"2160:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1257,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:11"},"scope":1273,"src":"2102:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1274,"src":"188:2065:11","usedErrors":[]}],"src":"101:2153:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1634],"Math":[2511],"Strings":[1273]},"id":1635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1635,"sourceUnit":1274,"src":"137:24:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"163:205:12","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1634,"linearizedBaseContracts":[1634],"name":"ECDSA","nameLocation":"377:5:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1283,"members":[{"id":1278,"name":"NoError","nameLocation":"417:7:12","nodeType":"EnumValue","src":"417:7:12"},{"id":1279,"name":"InvalidSignature","nameLocation":"434:16:12","nodeType":"EnumValue","src":"434:16:12"},{"id":1280,"name":"InvalidSignatureLength","nameLocation":"460:22:12","nodeType":"EnumValue","src":"460:22:12"},{"id":1281,"name":"InvalidSignatureS","nameLocation":"492:17:12","nodeType":"EnumValue","src":"492:17:12"},{"id":1282,"name":"InvalidSignatureV","nameLocation":"519:17:12","nodeType":"EnumValue","src":"519:17:12"}],"name":"RecoverError","nameLocation":"394:12:12","nodeType":"EnumDefinition","src":"389:175:12"},{"body":{"id":1326,"nodeType":"Block","src":"624:457:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"638:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1290,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"647:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1278,"src":"647:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"734:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1296,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"743:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"743:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"843:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1305,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"852:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1280,"src":"852:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1313,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"965:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1314,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"974:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1281,"src":"974:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1322,"nodeType":"IfStatement","src":"961:114:12","trueBody":{"id":1321,"nodeType":"Block","src":"1006:69:12","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1317,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"1020:44:12"}]}},"id":1323,"nodeType":"IfStatement","src":"839:236:12","trueBody":{"id":1312,"nodeType":"Block","src":"889:66:12","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1308,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"903:41:12"}]}},"id":1324,"nodeType":"IfStatement","src":"730:345:12","trueBody":{"id":1303,"nodeType":"Block","src":"774:59:12","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1299,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"ExpressionStatement","src":"788:34:12"}]}},"id":1325,"nodeType":"IfStatement","src":"634:441:12","trueBody":{"id":1294,"nodeType":"Block","src":"669:55:12","statements":[{"functionReturnParameters":1288,"id":1293,"nodeType":"Return","src":"683:7:12"}]}}]},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:12","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"error","nameLocation":"604:5:12","nodeType":"VariableDeclaration","scope":1327,"src":"591:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1285,"nodeType":"UserDefinedTypeName","pathNode":{"id":1284,"name":"RecoverError","nameLocations":["591:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"591:12:12"},"referencedDeclaration":1283,"src":"591:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:12"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[],"src":"624:0:12"},"scope":1634,"src":"570:511:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1372,"nodeType":"Block","src":"2249:626:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1340,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2263:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:12","memberName":"length","nodeType":"MemberAccess","src":"2263:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1370,"nodeType":"Block","src":"2788:81:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:12","typeDescriptions":{}}},"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1366,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2822:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1280,"src":"2822:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"id":1368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1339,"id":1369,"nodeType":"Return","src":"2802:56:12"}]},"id":1371,"nodeType":"IfStatement","src":"2259:610:12","trueBody":{"id":1361,"nodeType":"Block","src":"2287:495:12","statements":[{"assignments":[1345],"declarations":[{"constant":false,"id":1345,"mutability":"mutable","name":"r","nameLocation":"2309:1:12","nodeType":"VariableDeclaration","scope":1361,"src":"2301:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1346,"nodeType":"VariableDeclarationStatement","src":"2301:9:12"},{"assignments":[1348],"declarations":[{"constant":false,"id":1348,"mutability":"mutable","name":"s","nameLocation":"2332:1:12","nodeType":"VariableDeclaration","scope":1361,"src":"2324:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1349,"nodeType":"VariableDeclarationStatement","src":"2324:9:12"},{"assignments":[1351],"declarations":[{"constant":false,"id":1351,"mutability":"mutable","name":"v","nameLocation":"2353:1:12","nodeType":"VariableDeclaration","scope":1361,"src":"2347:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1350,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1352,"nodeType":"VariableDeclarationStatement","src":"2347:7:12"},{"AST":{"nodeType":"YulBlock","src":"2555:171:12","statements":[{"nodeType":"YulAssignment","src":"2573:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:12"},"nodeType":"YulFunctionCall","src":"2584:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:12"},"nodeType":"YulFunctionCall","src":"2578:27:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:12"}]},{"nodeType":"YulAssignment","src":"2622:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:12"},"nodeType":"YulFunctionCall","src":"2633:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:12"},"nodeType":"YulFunctionCall","src":"2627:27:12"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:12"}]},{"nodeType":"YulAssignment","src":"2671:41:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:12","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:12"},"nodeType":"YulFunctionCall","src":"2690:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:12"},"nodeType":"YulFunctionCall","src":"2684:27:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:12"},"nodeType":"YulFunctionCall","src":"2676:36:12"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1345,"isOffset":false,"isSlot":false,"src":"2573:1:12","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":false,"src":"2622:1:12","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"2588:9:12","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"2637:9:12","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"2694:9:12","valueSize":1},{"declaration":1351,"isOffset":false,"isSlot":false,"src":"2671:1:12","valueSize":1}],"id":1353,"nodeType":"InlineAssembly","src":"2546:180:12"},{"expression":{"arguments":[{"id":1355,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"2757:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1356,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2763:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1357,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"2766:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1358,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"2769:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1354,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1373,1447,1541],"referencedDeclaration":1541,"src":"2746:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1339,"id":1360,"nodeType":"Return","src":"2739:32:12"}]}}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"1087:1053:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:12","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"hash","nameLocation":"2173:4:12","nodeType":"VariableDeclaration","scope":1373,"src":"2165:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"signature","nameLocation":"2192:9:12","nodeType":"VariableDeclaration","scope":1373,"src":"2179:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:12"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"2226:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"2235:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1337,"nodeType":"UserDefinedTypeName","pathNode":{"id":1336,"name":"RecoverError","nameLocations":["2235:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"2235:12:12"},"referencedDeclaration":1283,"src":"2235:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:12"},"scope":1634,"src":"2145:730:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"3748:140:12","statements":[{"assignments":[1384,1387],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:12","nodeType":"VariableDeclaration","scope":1399,"src":"3759:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"error","nameLocation":"3791:5:12","nodeType":"VariableDeclaration","scope":1399,"src":"3778:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"RecoverError","nameLocations":["3778:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"3778:12:12"},"referencedDeclaration":1283,"src":"3778:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1392,"initialValue":{"arguments":[{"id":1389,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3811:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1390,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3817:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1388,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1373,1447,1541],"referencedDeclaration":1373,"src":"3800:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:12"},{"expression":{"arguments":[{"id":1394,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"3849:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}],"id":1393,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3837:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1283_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"ExpressionStatement","src":"3837:18:12"},{"expression":{"id":1397,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3872:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1382,"id":1398,"nodeType":"Return","src":"3865:16:12"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"2881:775:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:12","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"hash","nameLocation":"3686:4:12","nodeType":"VariableDeclaration","scope":1400,"src":"3678:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"signature","nameLocation":"3705:9:12","nodeType":"VariableDeclaration","scope":1400,"src":"3692:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1377,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:12"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1400,"src":"3739:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:12"},"scope":1634,"src":"3661:227:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1446,"nodeType":"Block","src":"4275:203:12","statements":[{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"s","nameLocation":"4293:1:12","nodeType":"VariableDeclaration","scope":1446,"src":"4285:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1423,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4297:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:12","typeDescriptions":{}}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:12"},{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"v","nameLocation":"4393:1:12","nodeType":"VariableDeclaration","scope":1446,"src":"4387:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1424,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1438,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1430,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4412:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:12","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:12","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1426,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:12","typeDescriptions":{}}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:12"},{"expression":{"arguments":[{"id":1440,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4457:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1441,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4463:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1442,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4466:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1443,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"4469:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1439,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1373,1447,1541],"referencedDeclaration":1541,"src":"4446:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4446:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1414,"id":1445,"nodeType":"Return","src":"4439:32:12"}]},"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"3894:243:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:12","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"hash","nameLocation":"4179:4:12","nodeType":"VariableDeclaration","scope":1447,"src":"4171:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"r","nameLocation":"4201:1:12","nodeType":"VariableDeclaration","scope":1447,"src":"4193:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"vs","nameLocation":"4220:2:12","nodeType":"VariableDeclaration","scope":1447,"src":"4212:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:12"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"4252:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"4261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1412,"nodeType":"UserDefinedTypeName","pathNode":{"id":1411,"name":"RecoverError","nameLocations":["4261:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"4261:12:12"},"referencedDeclaration":1283,"src":"4261:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:12"},"scope":1634,"src":"4142:336:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"4759:136:12","statements":[{"assignments":[1460,1463],"declarations":[{"constant":false,"id":1460,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:12","nodeType":"VariableDeclaration","scope":1476,"src":"4770:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"error","nameLocation":"4802:5:12","nodeType":"VariableDeclaration","scope":1476,"src":"4789:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1462,"nodeType":"UserDefinedTypeName","pathNode":{"id":1461,"name":"RecoverError","nameLocations":["4789:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"4789:12:12"},"referencedDeclaration":1283,"src":"4789:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1469,"initialValue":{"arguments":[{"id":1465,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"4822:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1466,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"4828:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1467,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"4831:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1464,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1373,1447,1541],"referencedDeclaration":1447,"src":"4811:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:12"},{"expression":{"arguments":[{"id":1471,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"4856:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}],"id":1470,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"4844:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1283_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1473,"nodeType":"ExpressionStatement","src":"4844:18:12"},{"expression":{"id":1474,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"4879:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1458,"id":1475,"nodeType":"Return","src":"4872:16:12"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"4484:154:12","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:12","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"hash","nameLocation":"4677:4:12","nodeType":"VariableDeclaration","scope":1477,"src":"4669:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"r","nameLocation":"4699:1:12","nodeType":"VariableDeclaration","scope":1477,"src":"4691:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"vs","nameLocation":"4718:2:12","nodeType":"VariableDeclaration","scope":1477,"src":"4710:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:12"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"4750:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:12"},"scope":1634,"src":"4643:252:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"5218:1345:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1496,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"6114:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:12","typeDescriptions":{}}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"6102:161:12","trueBody":{"id":1508,"nodeType":"Block","src":"6187:76:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:12","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6209:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1504,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6221:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6234:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1281,"src":"6221:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"id":1506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1493,"id":1507,"nodeType":"Return","src":"6201:51:12"}]}},{"assignments":[1511],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"signer","nameLocation":"6365:6:12","nodeType":"VariableDeclaration","scope":1540,"src":"6357:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1518,"initialValue":{"arguments":[{"id":1513,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"6384:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1514,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"6390:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1515,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"6393:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1516,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"6396:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1512,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:12","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"6412:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:12","typeDescriptions":{}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"IfStatement","src":"6408:101:12","trueBody":{"id":1533,"nodeType":"Block","src":"6434:75:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:12","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6456:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1529,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6468:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6481:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"6468:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"id":1531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1493,"id":1532,"nodeType":"Return","src":"6448:50:12"}]}},{"expression":{"components":[{"id":1535,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"6527:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1536,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6535:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1283_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6548:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1278,"src":"6535:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"id":1538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1493,"id":1539,"nodeType":"Return","src":"6519:37:12"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"4901:163:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:12","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"hash","nameLocation":"5106:4:12","nodeType":"VariableDeclaration","scope":1541,"src":"5098:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"v","nameLocation":"5126:1:12","nodeType":"VariableDeclaration","scope":1541,"src":"5120:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1481,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"r","nameLocation":"5145:1:12","nodeType":"VariableDeclaration","scope":1541,"src":"5137:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"s","nameLocation":"5164:1:12","nodeType":"VariableDeclaration","scope":1541,"src":"5156:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:12"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"5195:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"5204:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"RecoverError","nameLocations":["5204:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"5204:12:12"},"referencedDeclaration":1283,"src":"5204:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:12"},"scope":1634,"src":"5069:1494:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"6828:138:12","statements":[{"assignments":[1556,1559],"declarations":[{"constant":false,"id":1556,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:12","nodeType":"VariableDeclaration","scope":1573,"src":"6839:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"error","nameLocation":"6871:5:12","nodeType":"VariableDeclaration","scope":1573,"src":"6858:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1558,"nodeType":"UserDefinedTypeName","pathNode":{"id":1557,"name":"RecoverError","nameLocations":["6858:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"6858:12:12"},"referencedDeclaration":1283,"src":"6858:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"id":1561,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6891:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1562,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6897:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1563,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6900:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1564,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"6903:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1560,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1373,1447,1541],"referencedDeclaration":1541,"src":"6880:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6880:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1283_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:12"},{"expression":{"arguments":[{"id":1568,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6927:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1283","typeString":"enum ECDSA.RecoverError"}],"id":1567,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"6915:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1283_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6915:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"ExpressionStatement","src":"6915:18:12"},{"expression":{"id":1571,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"6950:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1554,"id":1572,"nodeType":"Return","src":"6943:16:12"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"6569:122:12","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:12","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"hash","nameLocation":"6730:4:12","nodeType":"VariableDeclaration","scope":1574,"src":"6722:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"v","nameLocation":"6750:1:12","nodeType":"VariableDeclaration","scope":1574,"src":"6744:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1545,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"r","nameLocation":"6769:1:12","nodeType":"VariableDeclaration","scope":1574,"src":"6761:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"s","nameLocation":"6788:1:12","nodeType":"VariableDeclaration","scope":1574,"src":"6780:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:12"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"6819:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:12"},"scope":1634,"src":"6696:270:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"7334:187:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":1586,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"7508:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1583,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7459:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7455:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7445:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1581,"id":1589,"nodeType":"Return","src":"7438:76:12"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"6972:279:12","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:12","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"hash","nameLocation":"7296:4:12","nodeType":"VariableDeclaration","scope":1591,"src":"7288:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:12"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"7325:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:12"},"scope":1634,"src":"7256:265:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1612,"nodeType":"Block","src":"7886:116:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1605,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"7981:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7983:6:12","memberName":"length","nodeType":"MemberAccess","src":"7981:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1603,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7964:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1273_$","typeString":"type(library Strings)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7972:8:12","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1156,"src":"7964:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1608,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"7992:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1600,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7917:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1599,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7903:92:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1598,"id":1611,"nodeType":"Return","src":"7896:99:12"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"7527:274:12","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:12","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"s","nameLocation":"7851:1:12","nodeType":"VariableDeclaration","scope":1613,"src":"7838:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1593,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:12"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"7877:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:12"},"scope":1634,"src":"7806:196:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"8443:92:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":1627,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8499:15:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1628,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"8516:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1624,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8474:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1623,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8460:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1622,"id":1631,"nodeType":"Return","src":"8453:75:12"}]},"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"8008:328:12","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:12","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:12","nodeType":"VariableDeclaration","scope":1633,"src":"8366:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:12","nodeType":"VariableDeclaration","scope":1633,"src":"8391:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:12"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"8434:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:12"},"scope":1634,"src":"8341:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1635,"src":"369:8168:12","usedErrors":[]}],"src":"112:8426:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1646]},"id":1647,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1636,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"125:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1646,"linearizedBaseContracts":[1646],"name":"IERC165","nameLocation":"415:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"429:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1645,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:13","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:13","nodeType":"VariableDeclaration","scope":1645,"src":"801:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1639,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:13"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"844:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1642,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:13"},"scope":1646,"src":"774:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1647,"src":"405:447:13","usedErrors":[]}],"src":"100:753:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2511]},"id":2512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1648,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"128:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2511,"linearizedBaseContracts":[2511],"name":"Math","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1653,"members":[{"id":1650,"name":"Down","nameLocation":"245:4:14","nodeType":"EnumValue","src":"245:4:14"},{"id":1651,"name":"Up","nameLocation":"287:2:14","nodeType":"EnumValue","src":"287:2:14"},{"id":1652,"name":"Zero","nameLocation":"318:4:14","nodeType":"EnumValue","src":"318:4:14"}],"name":"Rounding","nameLocation":"226:8:14","nodeType":"EnumDefinition","src":"221:122:14"},{"body":{"id":1670,"nodeType":"Block","src":"480:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1664,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"509:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:14","trueExpression":{"id":1666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"505:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1662,"id":1669,"nodeType":"Return","src":"490:20:14"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"349:59:14","text":" @dev Returns the largest of two numbers."},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:14","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"a","nameLocation":"434:1:14","nodeType":"VariableDeclaration","scope":1671,"src":"426:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"b","nameLocation":"445:1:14","nodeType":"VariableDeclaration","scope":1671,"src":"437:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1657,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:14"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"471:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:14"},"scope":2511,"src":"413:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"655:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:14","trueExpression":{"id":1684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1680,"id":1687,"nodeType":"Return","src":"665:20:14"}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"523:60:14","text":" @dev Returns the smallest of two numbers."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:14","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":1689,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":1689,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:14"},"scope":2511,"src":"588:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1711,"nodeType":"Block","src":"876:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1698,"id":1710,"nodeType":"Return","src":"923:28:14"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"698:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:14","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"a","nameLocation":"830:1:14","nodeType":"VariableDeclaration","scope":1712,"src":"822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"b","nameLocation":"841:1:14","nodeType":"VariableDeclaration","scope":1712,"src":"833:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:14"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1712,"src":"867:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:14"},"scope":2511,"src":"805:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"1228:123:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"1316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"1330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"1339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:14","trueExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1721,"id":1735,"nodeType":"Return","src":"1309:35:14"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"964:188:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:14","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"a","nameLocation":"1182:1:14","nodeType":"VariableDeclaration","scope":1737,"src":"1174:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"b","nameLocation":"1193:1:14","nodeType":"VariableDeclaration","scope":1737,"src":"1185:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:14"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1737,"src":"1219:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:14"},"scope":2511,"src":"1157:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"1795:3797:14","statements":[{"id":1857,"nodeType":"UncheckedBlock","src":"1805:3781:14","statements":[{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:14","nodeType":"VariableDeclaration","scope":1857,"src":"2126:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1751,"nodeType":"VariableDeclarationStatement","src":"2126:13:14"},{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:14","nodeType":"VariableDeclaration","scope":1857,"src":"2198:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1754,"nodeType":"VariableDeclarationStatement","src":"2198:13:14"},{"AST":{"nodeType":"YulBlock","src":"2278:157:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:14"},"nodeType":"YulFunctionCall","src":"2319:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:14"},"nodeType":"YulFunctionCall","src":"2306:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:14"},"nodeType":"YulFunctionCall","src":"2352:9:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:14"}]},{"nodeType":"YulAssignment","src":"2378:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:14"},"nodeType":"YulFunctionCall","src":"2391:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:14"},"nodeType":"YulFunctionCall","src":"2407:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:14"},"nodeType":"YulFunctionCall","src":"2387:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1750,"isOffset":false,"isSlot":false,"src":"2343:5:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"2399:5:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"2414:5:14","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"2378:5:14","valueSize":1},{"declaration":1740,"isOffset":false,"isSlot":false,"src":"2313:1:14","valueSize":1},{"declaration":1740,"isOffset":false,"isSlot":false,"src":"2356:1:14","valueSize":1},{"declaration":1742,"isOffset":false,"isSlot":false,"src":"2316:1:14","valueSize":1},{"declaration":1742,"isOffset":false,"isSlot":false,"src":"2359:1:14","valueSize":1}],"id":1755,"nodeType":"InlineAssembly","src":"2269:166:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2516:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"2512:75:14","trueBody":{"id":1763,"nodeType":"Block","src":"2528:59:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2553:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1760,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2561:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1748,"id":1762,"nodeType":"Return","src":"2546:26:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2697:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1767,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2711:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"2689:28:14"},{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:14","nodeType":"VariableDeclaration","scope":1857,"src":"2973:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1773,"nodeType":"VariableDeclarationStatement","src":"2973:17:14"},{"AST":{"nodeType":"YulBlock","src":"3013:291:14","statements":[{"nodeType":"YulAssignment","src":"3082:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:14"},"nodeType":"YulFunctionCall","src":"3095:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:14"}]},{"nodeType":"YulAssignment","src":"3202:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:14"},"nodeType":"YulFunctionCall","src":"3222:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:14"},"nodeType":"YulFunctionCall","src":"3211:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:14"}]},{"nodeType":"YulAssignment","src":"3260:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:14"},"nodeType":"YulFunctionCall","src":"3269:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3108:11:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"3236:5:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"3260:5:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"3273:5:14","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"3202:5:14","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"3215:5:14","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3082:9:14","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3225:9:14","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3280:9:14","valueSize":1},{"declaration":1740,"isOffset":false,"isSlot":false,"src":"3102:1:14","valueSize":1},{"declaration":1742,"isOffset":false,"isSlot":false,"src":"3105:1:14","valueSize":1}],"id":1774,"nodeType":"InlineAssembly","src":"3004:300:14"},{"assignments":[1776],"declarations":[{"constant":false,"id":1776,"mutability":"mutable","name":"twos","nameLocation":"3619:4:14","nodeType":"VariableDeclaration","scope":1857,"src":"3611:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3626:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:14","subExpression":{"id":1778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3642:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:14"},{"AST":{"nodeType":"YulBlock","src":"3681:362:14","statements":[{"nodeType":"YulAssignment","src":"3746:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:14"},"nodeType":"YulFunctionCall","src":"3761:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:14"}]},{"nodeType":"YulAssignment","src":"3850:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:14"},"nodeType":"YulFunctionCall","src":"3859:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:14"}]},{"nodeType":"YulAssignment","src":"3990:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:14"},"nodeType":"YulFunctionCall","src":"4006:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:14"},"nodeType":"YulFunctionCall","src":"4002:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:14"},"nodeType":"YulFunctionCall","src":"3998:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3746:11:14","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3765:11:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"3850:5:14","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"3863:5:14","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"3778:4:14","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"3870:4:14","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"3990:4:14","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"4013:4:14","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"4020:4:14","valueSize":1}],"id":1785,"nodeType":"InlineAssembly","src":"3672:371:14"},{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"4109:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4118:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1788,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4126:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"nodeType":"ExpressionStatement","src":"4109:21:14"},{"assignments":[1793],"declarations":[{"constant":false,"id":1793,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:14","nodeType":"VariableDeclaration","scope":1857,"src":"4448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4471:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:14"},{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1801,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4719:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1804,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1808,"nodeType":"ExpressionStatement","src":"4704:36:14"},{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1809,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4773:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4788:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1812,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"4773:36:14"},{"expression":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4843:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1820,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1824,"nodeType":"ExpressionStatement","src":"4843:36:14"},{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1825,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4928:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1828,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"4913:36:14"},{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1833,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4998:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1836,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1840,"nodeType":"ExpressionStatement","src":"4983:36:14"},{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5069:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1844,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ExpressionStatement","src":"5054:36:14"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5524:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1850,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5533:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1851,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5541:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"5524:24:14"},{"expression":{"id":1855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5569:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1748,"id":1856,"nodeType":"Return","src":"5562:13:14"}]}]},"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"1357:305:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:14","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"x","nameLocation":"1700:1:14","nodeType":"VariableDeclaration","scope":1859,"src":"1692:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"y","nameLocation":"1719:1:14","nodeType":"VariableDeclaration","scope":1859,"src":"1711:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:14","nodeType":"VariableDeclaration","scope":1859,"src":"1730:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:14"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"result","nameLocation":"1787:6:14","nodeType":"VariableDeclaration","scope":1859,"src":"1779:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:14"},"scope":2511,"src":"1667:3925:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1902,"nodeType":"Block","src":"5872:189:14","statements":[{"assignments":[1875],"declarations":[{"constant":false,"id":1875,"mutability":"mutable","name":"result","nameLocation":"5890:6:14","nodeType":"VariableDeclaration","scope":1902,"src":"5882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1881,"initialValue":{"arguments":[{"id":1877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5906:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1878,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5909:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1879,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"5912:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1859,1903],"referencedDeclaration":1859,"src":"5899:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5938:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1883,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"5950:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1653_$","typeString":"type(enum Math.Rounding)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"5950:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"src":"5938:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5972:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1888,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5975:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1889,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"5978:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1886,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1899,"nodeType":"IfStatement","src":"5934:98:14","trueBody":{"id":1898,"nodeType":"Block","src":"5996:36:14","statements":[{"expression":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"6010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1897,"nodeType":"ExpressionStatement","src":"6010:11:14"}]}},{"expression":{"id":1900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"6048:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1873,"id":1901,"nodeType":"Return","src":"6041:13:14"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"5598:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:14","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"x","nameLocation":"5757:1:14","nodeType":"VariableDeclaration","scope":1903,"src":"5749:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"y","nameLocation":"5776:1:14","nodeType":"VariableDeclaration","scope":1903,"src":"5768:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:14","nodeType":"VariableDeclaration","scope":1903,"src":"5787:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:14","nodeType":"VariableDeclaration","scope":1903,"src":"5816:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"typeName":{"id":1868,"nodeType":"UserDefinedTypeName","pathNode":{"id":1867,"name":"Rounding","nameLocations":["5816:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"5816:8:14"},"referencedDeclaration":1653,"src":"5816:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:14"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"5863:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:14"},"scope":2511,"src":"5724:337:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"6337:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"6351:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"IfStatement","src":"6347:45:14","trueBody":{"id":1916,"nodeType":"Block","src":"6359:33:14","statements":[{"expression":{"hexValue":"30","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1910,"id":1915,"nodeType":"Return","src":"6373:8:14"}]}},{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"result","nameLocation":"7079:6:14","nodeType":"VariableDeclaration","scope":2014,"src":"7071:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1928,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7099:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1921,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2183,2219],"referencedDeclaration":2183,"src":"7094:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:14"},{"id":2013,"nodeType":"UncheckedBlock","src":"7508:408:14","statements":[{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7532:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7542:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7555:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1939,"nodeType":"ExpressionStatement","src":"7532:35:14"},{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7581:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7591:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7600:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7604:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"7581:35:14"},{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7630:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7640:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7649:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"7630:35:14"},{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7689:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7698:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7702:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"7679:35:14"},{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7728:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7738:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7747:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7751:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1983,"nodeType":"ExpressionStatement","src":"7728:35:14"},{"expression":{"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7777:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7796:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7800:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1994,"nodeType":"ExpressionStatement","src":"7777:35:14"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7826:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7836:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7845:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7849:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"7826:35:14"},{"expression":{"arguments":[{"id":2007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7886:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"7894:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7898:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2006,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"7882:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1910,"id":2012,"nodeType":"Return","src":"7875:30:14"}]}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"6067:208:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:14","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"a","nameLocation":"6302:1:14","nodeType":"VariableDeclaration","scope":2015,"src":"6294:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:14"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"6328:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:14"},"scope":2511,"src":"6280:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"8098:161:14","statements":[{"id":2049,"nodeType":"UncheckedBlock","src":"8108:145:14","statements":[{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"result","nameLocation":"8140:6:14","nodeType":"VariableDeclaration","scope":2049,"src":"8132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"arguments":[{"id":2029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8154:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2028,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2015,2051],"referencedDeclaration":2015,"src":"8149:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8177:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"8187:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2034,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"8199:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1653_$","typeString":"type(enum Math.Rounding)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"8199:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"src":"8187:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8214:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8223:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8232:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:14","trueExpression":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2025,"id":2048,"nodeType":"Return","src":"8170:72:14"}]}]},"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"7928:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:14","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"a","nameLocation":"8044:1:14","nodeType":"VariableDeclaration","scope":2051,"src":"8036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:14","nodeType":"VariableDeclaration","scope":2051,"src":"8047:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"typeName":{"id":2020,"nodeType":"UserDefinedTypeName","pathNode":{"id":2019,"name":"Rounding","nameLocations":["8047:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"8047:8:14"},"referencedDeclaration":1653,"src":"8047:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:14"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"8089:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:14"},"scope":2511,"src":"8022:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"8444:922:14","statements":[{"assignments":[2060],"declarations":[{"constant":false,"id":2060,"mutability":"mutable","name":"result","nameLocation":"8462:6:14","nodeType":"VariableDeclaration","scope":2182,"src":"8454:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2062,"initialValue":{"hexValue":"30","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:14"},{"id":2179,"nodeType":"UncheckedBlock","src":"8482:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8510:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2077,"nodeType":"IfStatement","src":"8506:99:14","trueBody":{"id":2076,"nodeType":"Block","src":"8528:77:14","statements":[{"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8546:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ExpressionStatement","src":"8546:13:14"},{"expression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"8577:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2075,"nodeType":"ExpressionStatement","src":"8577:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8622:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"IfStatement","src":"8618:96:14","trueBody":{"id":2091,"nodeType":"Block","src":"8639:75:14","statements":[{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8657:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"8657:12:14"},{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"8687:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ExpressionStatement","src":"8687:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8731:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2107,"nodeType":"IfStatement","src":"8727:96:14","trueBody":{"id":2106,"nodeType":"Block","src":"8748:75:14","statements":[{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8766:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"8766:12:14"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"8796:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"8796:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8840:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"IfStatement","src":"8836:96:14","trueBody":{"id":2121,"nodeType":"Block","src":"8857:75:14","statements":[{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8875:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"8875:12:14"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"8905:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"nodeType":"ExpressionStatement","src":"8905:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8949:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"8945:93:14","trueBody":{"id":2136,"nodeType":"Block","src":"8965:73:14","statements":[{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"8983:11:14"},{"expression":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9012:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2135,"nodeType":"ExpressionStatement","src":"9012:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9055:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"nodeType":"IfStatement","src":"9051:93:14","trueBody":{"id":2151,"nodeType":"Block","src":"9071:73:14","statements":[{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9089:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2146,"nodeType":"ExpressionStatement","src":"9089:11:14"},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9118:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ExpressionStatement","src":"9118:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9161:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2167,"nodeType":"IfStatement","src":"9157:93:14","trueBody":{"id":2166,"nodeType":"Block","src":"9177:73:14","statements":[{"expression":{"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9195:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2161,"nodeType":"ExpressionStatement","src":"9195:11:14"},{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9224:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2165,"nodeType":"ExpressionStatement","src":"9224:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"9267:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2178,"nodeType":"IfStatement","src":"9263:64:14","trueBody":{"id":2177,"nodeType":"Block","src":"9283:44:14","statements":[{"expression":{"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9301:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"nodeType":"ExpressionStatement","src":"9301:11:14"}]}}]},{"expression":{"id":2180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9353:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2058,"id":2181,"nodeType":"Return","src":"9346:13:14"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"8265:113:14","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:14","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"value","nameLocation":"8405:5:14","nodeType":"VariableDeclaration","scope":2183,"src":"8397:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:14"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"8435:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:14"},"scope":2511,"src":"8383:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"9599:165:14","statements":[{"id":2217,"nodeType":"UncheckedBlock","src":"9609:149:14","statements":[{"assignments":[2195],"declarations":[{"constant":false,"id":2195,"mutability":"mutable","name":"result","nameLocation":"9641:6:14","nodeType":"VariableDeclaration","scope":2217,"src":"9633:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2199,"initialValue":{"arguments":[{"id":2197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9655:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2196,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2183,2219],"referencedDeclaration":2183,"src":"9650:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9682:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9692:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2202,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"9704:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1653_$","typeString":"type(enum Math.Rounding)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"9704:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"src":"9692:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:14","trueExpression":{"hexValue":"31","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2193,"id":2216,"nodeType":"Return","src":"9675:72:14"}]}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"9372:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:14","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"value","nameLocation":"9541:5:14","nodeType":"VariableDeclaration","scope":2219,"src":"9533:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:14","nodeType":"VariableDeclaration","scope":2219,"src":"9548:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"typeName":{"id":2188,"nodeType":"UserDefinedTypeName","pathNode":{"id":2187,"name":"Rounding","nameLocations":["9548:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"9548:8:14"},"referencedDeclaration":1653,"src":"9548:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:14"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"9590:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:14"},"scope":2511,"src":"9519:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2347,"nodeType":"Block","src":"9951:828:14","statements":[{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"result","nameLocation":"9969:6:14","nodeType":"VariableDeclaration","scope":2347,"src":"9961:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2230,"initialValue":{"hexValue":"30","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:14"},{"id":2344,"nodeType":"UncheckedBlock","src":"9989:761:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10017:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2247,"nodeType":"IfStatement","src":"10013:99:14","trueBody":{"id":2246,"nodeType":"Block","src":"10034:78:14","statements":[{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10052:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2241,"nodeType":"ExpressionStatement","src":"10052:15:14"},{"expression":{"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10085:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2245,"nodeType":"ExpressionStatement","src":"10085:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10129:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2264,"nodeType":"IfStatement","src":"10125:99:14","trueBody":{"id":2263,"nodeType":"Block","src":"10146:78:14","statements":[{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10164:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"10164:15:14"},{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10197:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2262,"nodeType":"ExpressionStatement","src":"10197:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10241:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"nodeType":"IfStatement","src":"10237:99:14","trueBody":{"id":2280,"nodeType":"Block","src":"10258:78:14","statements":[{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10276:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"10276:15:14"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10309:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"10309:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10353:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2298,"nodeType":"IfStatement","src":"10349:96:14","trueBody":{"id":2297,"nodeType":"Block","src":"10369:76:14","statements":[{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"10387:14:14"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10419:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"10419:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10462:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2315,"nodeType":"IfStatement","src":"10458:96:14","trueBody":{"id":2314,"nodeType":"Block","src":"10478:76:14","statements":[{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ExpressionStatement","src":"10496:14:14"},{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10528:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2313,"nodeType":"ExpressionStatement","src":"10528:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10571:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2332,"nodeType":"IfStatement","src":"10567:96:14","trueBody":{"id":2331,"nodeType":"Block","src":"10587:76:14","statements":[{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10605:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"10605:14:14"},{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10637:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"10637:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10680:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2343,"nodeType":"IfStatement","src":"10676:64:14","trueBody":{"id":2342,"nodeType":"Block","src":"10696:44:14","statements":[{"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10714:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ExpressionStatement","src":"10714:11:14"}]}}]},{"expression":{"id":2345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10766:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2226,"id":2346,"nodeType":"Return","src":"10759:13:14"}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"9770:114:14","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:14","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"value","nameLocation":"9912:5:14","nodeType":"VariableDeclaration","scope":2348,"src":"9904:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:14"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2348,"src":"9942:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:14"},"scope":2511,"src":"9889:890:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2383,"nodeType":"Block","src":"11014:165:14","statements":[{"id":2382,"nodeType":"UncheckedBlock","src":"11024:149:14","statements":[{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"result","nameLocation":"11056:6:14","nodeType":"VariableDeclaration","scope":2382,"src":"11048:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"initialValue":{"arguments":[{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"11071:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2361,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2348,2384],"referencedDeclaration":2348,"src":"11065:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"11098:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"11108:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2367,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11120:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1653_$","typeString":"type(enum Math.Rounding)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"11120:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"src":"11108:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"11139:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"11148:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:14","trueExpression":{"hexValue":"31","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2358,"id":2381,"nodeType":"Return","src":"11091:71:14"}]}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"10785:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:14","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"value","nameLocation":"10956:5:14","nodeType":"VariableDeclaration","scope":2384,"src":"10948:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:14","nodeType":"VariableDeclaration","scope":2384,"src":"10963:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"typeName":{"id":2353,"nodeType":"UserDefinedTypeName","pathNode":{"id":2352,"name":"Rounding","nameLocations":["10963:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"10963:8:14"},"referencedDeclaration":1653,"src":"10963:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:14"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"11005:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:14"},"scope":2511,"src":"10933:246:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"11493:600:14","statements":[{"assignments":[2393],"declarations":[{"constant":false,"id":2393,"mutability":"mutable","name":"result","nameLocation":"11511:6:14","nodeType":"VariableDeclaration","scope":2470,"src":"11503:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"initialValue":{"hexValue":"30","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:14"},{"id":2467,"nodeType":"UncheckedBlock","src":"11531:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11559:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2410,"nodeType":"IfStatement","src":"11555:98:14","trueBody":{"id":2409,"nodeType":"Block","src":"11577:76:14","statements":[{"expression":{"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11595:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2404,"nodeType":"ExpressionStatement","src":"11595:13:14"},{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11626:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"11626:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11670:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"11666:95:14","trueBody":{"id":2424,"nodeType":"Block","src":"11687:74:14","statements":[{"expression":{"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11705:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2419,"nodeType":"ExpressionStatement","src":"11705:12:14"},{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11735:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2423,"nodeType":"ExpressionStatement","src":"11735:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11778:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"11774:95:14","trueBody":{"id":2439,"nodeType":"Block","src":"11795:74:14","statements":[{"expression":{"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11813:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2434,"nodeType":"ExpressionStatement","src":"11813:12:14"},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11843:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2438,"nodeType":"ExpressionStatement","src":"11843:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11886:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"IfStatement","src":"11882:95:14","trueBody":{"id":2454,"nodeType":"Block","src":"11903:74:14","statements":[{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11921:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"11921:12:14"},{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11951:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"11951:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11994:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2466,"nodeType":"IfStatement","src":"11990:64:14","trueBody":{"id":2465,"nodeType":"Block","src":"12010:44:14","statements":[{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"12028:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"12028:11:14"}]}}]},{"expression":{"id":2468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"12080:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2391,"id":2469,"nodeType":"Return","src":"12073:13:14"}]},"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"11185:240:14","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:14","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"value","nameLocation":"11454:5:14","nodeType":"VariableDeclaration","scope":2471,"src":"11446:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:14"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"11484:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:14"},"scope":2511,"src":"11430:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2509,"nodeType":"Block","src":"12329:173:14","statements":[{"id":2508,"nodeType":"UncheckedBlock","src":"12339:157:14","statements":[{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"result","nameLocation":"12371:6:14","nodeType":"VariableDeclaration","scope":2508,"src":"12363:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"id":2485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"12387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2484,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2471,2510],"referencedDeclaration":2471,"src":"12380:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"12414:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2489,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"12424:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2490,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"12436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1653_$","typeString":"type(enum Math.Rounding)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"12436:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"src":"12424:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"12457:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"12471:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:14","trueExpression":{"hexValue":"31","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2481,"id":2507,"nodeType":"Return","src":"12407:78:14"}]}]},"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"12099:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:14","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"value","nameLocation":"12271:5:14","nodeType":"VariableDeclaration","scope":2510,"src":"12263:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:14","nodeType":"VariableDeclaration","scope":2510,"src":"12278:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"},"typeName":{"id":2476,"nodeType":"UserDefinedTypeName","pathNode":{"id":2475,"name":"Rounding","nameLocations":["12278:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"12278:8:14"},"referencedDeclaration":1653,"src":"12278:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1653","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:14"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"12320:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:14"},"scope":2511,"src":"12247:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2512,"src":"202:12302:14","usedErrors":[]}],"src":"103:12402:14"},"id":14},"contracts/core/BaseAccount.sol":{"ast":{"absolutePath":"contracts/core/BaseAccount.sol","exportedSymbols":{"BaseAccount":[2653],"IAccount":[2908],"IAggregator":[2942],"IEntryPoint":[3146],"INonceManager":[3165],"IStakeManager":[3270],"UserOperation":[3297],"UserOperationLib":[3467],"ValidationData":[2662],"_intersectTimeRange":[2806],"_packValidationData":[2843,2881],"_parseValidationData":[2721],"calldataKeccak":[2891]},"id":2654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2513,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":2514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2654,"sourceUnit":2909,"src":"141:36:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":2515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2654,"sourceUnit":3147,"src":"178:39:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2654,"sourceUnit":2892,"src":"218:23:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2518,"name":"IAccount","nameLocations":["509:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2908,"src":"509:8:15"},"id":2519,"nodeType":"InheritanceSpecifier","src":"509:8:15"}],"canonicalName":"BaseAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"243:232:15","text":" Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"},"fullyImplemented":false,"id":2653,"linearizedBaseContracts":[2653,2908],"name":"BaseAccount","nameLocation":"494:11:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2523,"libraryName":{"id":2520,"name":"UserOperationLib","nameLocations":["530:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":3467,"src":"530:16:15"},"nodeType":"UsingForDirective","src":"524:41:15","typeName":{"id":2522,"nodeType":"UserDefinedTypeName","pathNode":{"id":2521,"name":"UserOperation","nameLocations":["551:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"551:13:15"},"referencedDeclaration":3297,"src":"551:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}}},{"constant":true,"id":2526,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"718:21:15","nodeType":"VariableDeclaration","scope":2653,"src":"692:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"742:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"989:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2537,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1036:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaseAccount_$2653","typeString":"contract BaseAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseAccount_$2653","typeString":"contract BaseAccount"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1028:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:15","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1043:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2532,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1006:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3146_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1019:8:15","memberName":"getNonce","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"1006:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$","typeString":"function (address,uint192) view external returns (uint256)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2531,"id":2541,"nodeType":"Return","src":"999:46:15"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"750:176:15","text":" Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"functionSelector":"d087d288","id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"940:8:15","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"948:2:15"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"980:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:9:15"},"scope":2653,"src":"931:121:15","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"1058:137:15","text":" return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":2550,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1209:10:15","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[],"src":"1219:2:15"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"1251:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"},"typeName":{"id":2547,"nodeType":"UserDefinedTypeName","pathNode":{"id":2546,"name":"IEntryPoint","nameLocations":["1251:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"1251:11:15"},"referencedDeclaration":3146,"src":"1251:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1250:13:15"},"scope":2653,"src":"1200:64:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2907],"body":{"id":2583,"nodeType":"Block","src":"1621:186:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2564,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"1631:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1631:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"1631:24:15"},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2567,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"1665:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2569,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1701:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2570,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"1709:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2568,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1682:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$3297_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32) returns (uint256)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1665:55:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"1665:55:15"},{"expression":{"arguments":[{"expression":{"id":2575,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1745:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1752:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"1745:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2574,"name":"_validateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"1730:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1730:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"ExpressionStatement","src":"1730:28:15"},{"expression":{"arguments":[{"id":2580,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1780:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1768:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"ExpressionStatement","src":"1768:32:15"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"1270:179:15","text":" Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."},"functionSelector":"3a871cdd","id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1463:14:15","nodeType":"FunctionDefinition","overrides":{"id":2560,"nodeType":"OverrideSpecifier","overrides":[],"src":"1571:8:15"},"parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"userOp","nameLocation":"1501:6:15","nodeType":"VariableDeclaration","scope":2584,"src":"1478:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2553,"nodeType":"UserDefinedTypeName","pathNode":{"id":2552,"name":"UserOperation","nameLocations":["1478:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"1478:13:15"},"referencedDeclaration":3297,"src":"1478:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"userOpHash","nameLocation":"1517:10:15","nodeType":"VariableDeclaration","scope":2584,"src":"1509:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1509:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"1537:19:15","nodeType":"VariableDeclaration","scope":2584,"src":"1529:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:80:15"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"validationData","nameLocation":"1605:14:15","nodeType":"VariableDeclaration","scope":2584,"src":"1597:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:24:15"},"scope":2653,"src":"1454:353:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":2600,"nodeType":"Block","src":"1944:93:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1962:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1966:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1962:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2593,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"1984:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3146_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1984:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1976:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"1976:7:15","typeDescriptions":{}}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1976:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1962:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1999:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""},"value":"account: not from EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""}],"id":2588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1954:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2599,"nodeType":"ExpressionStatement","src":"1954:76:15"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"1813:70:15","text":" ensure the request comes from the known entrypoint."},"id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"1897:22:15","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[],"src":"1919:2:15"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"1944:0:15"},"scope":2653,"src":"1888:149:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"2043:904:15","text":" validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":2612,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"2961:18:15","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"userOp","nameLocation":"3003:6:15","nodeType":"VariableDeclaration","scope":2612,"src":"2980:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2604,"nodeType":"UserDefinedTypeName","pathNode":{"id":2603,"name":"UserOperation","nameLocations":["2980:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"2980:13:15"},"referencedDeclaration":3297,"src":"2980:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"userOpHash","nameLocation":"3019:10:15","nodeType":"VariableDeclaration","scope":2612,"src":"3011:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3011:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2979:51:15"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"validationData","nameLocation":"3065:14:15","nodeType":"VariableDeclaration","scope":2612,"src":"3057:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3057:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3056:24:15"},"scope":2653,"src":"2952:129:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2618,"nodeType":"Block","src":"3793:7:15","statements":[]},"documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"3087:640:15","text":" Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"_validateNonce","nameLocation":"3741:14:15","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"nonce","nameLocation":"3764:5:15","nodeType":"VariableDeclaration","scope":2619,"src":"3756:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:15:15"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[],"src":"3793:0:15"},"scope":2653,"src":"3732:68:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"4375:270:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4389:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4412:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4389:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"4385:254:15","trueBody":{"id":2649,"nodeType":"Block","src":"4415:224:15","statements":[{"assignments":[2629,null],"declarations":[{"constant":false,"id":2629,"mutability":"mutable","name":"success","nameLocation":"4435:7:15","nodeType":"VariableDeclaration","scope":2649,"src":"4430:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2628,"name":"bool","nodeType":"ElementaryTypeName","src":"4430:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2645,"initialValue":{"arguments":[{"hexValue":"","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4526:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4455:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4459:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4455:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4447:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"4447:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4467:4:15","memberName":"call","nodeType":"MemberAccess","src":"4447:24:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":2636,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4480:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4512:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4507:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4521:3:15","memberName":"max","nodeType":"MemberAccess","src":"4507:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4447:78:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4429:100:15"},{"expression":{"components":[{"id":2646,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"4544:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4543:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2648,"nodeType":"ExpressionStatement","src":"4543:9:15"}]}}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"3806:497:15","text":" sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"4317:11:15","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"4337:19:15","nodeType":"VariableDeclaration","scope":2652,"src":"4329:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4328:29:15"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"4375:0:15"},"scope":2653,"src":"4308:337:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2654,"src":"476:4171:15","usedErrors":[]}],"src":"32:4615:15"},"id":15},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[2662],"_intersectTimeRange":[2806],"_packValidationData":[2843,2881],"_parseValidationData":[2721],"calldataKeccak":[2891]},"id":2892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2655,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:16"},{"canonicalName":"ValidationData","id":2662,"members":[{"constant":false,"id":2657,"mutability":"mutable","name":"aggregator","nameLocation":"726:10:16","nodeType":"VariableDeclaration","scope":2662,"src":"718:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"validAfter","nameLocation":"753:10:16","nodeType":"VariableDeclaration","scope":2662,"src":"746:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2658,"name":"uint48","nodeType":"ElementaryTypeName","src":"746:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"validUntil","nameLocation":"780:10:16","nodeType":"VariableDeclaration","scope":2662,"src":"773:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2660,"name":"uint48","nodeType":"ElementaryTypeName","src":"773:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"693:14:16","nodeType":"StructDefinition","scope":2892,"src":"686:111:16","visibility":"public"},{"body":{"id":2720,"nodeType":"Block","src":"993:346:16","statements":[{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"aggregator","nameLocation":"1011:10:16","nodeType":"VariableDeclaration","scope":2720,"src":"1003:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1003:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2679,"initialValue":{"arguments":[{"arguments":[{"id":2676,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1040:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1032:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2674,"name":"uint160","nodeType":"ElementaryTypeName","src":"1032:7:16","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1032:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1024:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:16","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1003:53:16"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"validUntil","nameLocation":"1073:10:16","nodeType":"VariableDeclaration","scope":2720,"src":"1066:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2680,"name":"uint48","nodeType":"ElementaryTypeName","src":"1066:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2688,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1093:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1093:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1086:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2682,"name":"uint48","nodeType":"ElementaryTypeName","src":"1086:6:16","typeDescriptions":{}}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1066:49:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"1129:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1143:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1129:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2701,"nodeType":"IfStatement","src":"1125:75:16","trueBody":{"id":2700,"nodeType":"Block","src":"1146:54:16","statements":[{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"1160:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1178:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2694,"name":"uint48","nodeType":"ElementaryTypeName","src":"1178:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2693,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1173:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1186:3:16","memberName":"max","nodeType":"MemberAccess","src":"1173:16:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1160:29:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2699,"nodeType":"ExpressionStatement","src":"1160:29:16"}]}},{"assignments":[2703],"declarations":[{"constant":false,"id":2703,"mutability":"mutable","name":"validAfter","nameLocation":"1216:10:16","nodeType":"VariableDeclaration","scope":2720,"src":"1209:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2702,"name":"uint48","nodeType":"ElementaryTypeName","src":"1209:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2713,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1236:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1260:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1255:8:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1254:10:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1236:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1229:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2704,"name":"uint48","nodeType":"ElementaryTypeName","src":"1229:6:16","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1209:56:16"},{"expression":{"arguments":[{"id":2715,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1297:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2716,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1309:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2717,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"1321:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2714,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"1282:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2662_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2669,"id":2719,"nodeType":"Return","src":"1275:57:16"}]},"id":2721,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"909:20:16","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"validationData","nameLocation":"935:14:16","nodeType":"VariableDeclaration","scope":2721,"src":"930:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint","nodeType":"ElementaryTypeName","src":"930:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:21:16"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"data","nameLocation":"987:4:16","nodeType":"VariableDeclaration","scope":2721,"src":"965:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2667,"nodeType":"UserDefinedTypeName","pathNode":{"id":2666,"name":"ValidationData","nameLocations":["965:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"965:14:16"},"referencedDeclaration":2662,"src":"965:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"964:28:16"},"scope":2892,"src":"900:439:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2805,"nodeType":"Block","src":"1511:804:16","statements":[{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"accountValidationData","nameLocation":"1543:21:16","nodeType":"VariableDeclaration","scope":2805,"src":"1521:43:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"ValidationData","nameLocations":["1521:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"1521:14:16"},"referencedDeclaration":2662,"src":"1521:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2735,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1588:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2734,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1567:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2662_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1567:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1521:82:16"},{"assignments":[2740],"declarations":[{"constant":false,"id":2740,"mutability":"mutable","name":"pmValidationData","nameLocation":"1635:16:16","nodeType":"VariableDeclaration","scope":2805,"src":"1613:38:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2739,"nodeType":"UserDefinedTypeName","pathNode":{"id":2738,"name":"ValidationData","nameLocations":["1613:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"1613:14:16"},"referencedDeclaration":2662,"src":"1613:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2744,"initialValue":{"arguments":[{"id":2742,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"1675:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2741,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1654:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2662_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:86:16"},{"assignments":[2746],"declarations":[{"constant":false,"id":2746,"mutability":"mutable","name":"aggregator","nameLocation":"1717:10:16","nodeType":"VariableDeclaration","scope":2805,"src":"1709:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2749,"initialValue":{"expression":{"id":2747,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1730:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1752:10:16","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2657,"src":"1730:32:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1709:53:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"1776:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1798:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1790:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:16","typeDescriptions":{}}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1790:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1776:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2762,"nodeType":"IfStatement","src":"1772:95:16","trueBody":{"id":2761,"nodeType":"Block","src":"1802:65:16","statements":[{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2756,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"1816:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2757,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1829:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1846:10:16","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2657,"src":"1829:27:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1816:40:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2760,"nodeType":"ExpressionStatement","src":"1816:40:16"}]}},{"assignments":[2764],"declarations":[{"constant":false,"id":2764,"mutability":"mutable","name":"validAfter","nameLocation":"1883:10:16","nodeType":"VariableDeclaration","scope":2805,"src":"1876:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2763,"name":"uint48","nodeType":"ElementaryTypeName","src":"1876:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2767,"initialValue":{"expression":{"id":2765,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1896:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1918:10:16","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"1896:32:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1876:52:16"},{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"validUntil","nameLocation":"1945:10:16","nodeType":"VariableDeclaration","scope":2805,"src":"1938:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2768,"name":"uint48","nodeType":"ElementaryTypeName","src":"1938:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2772,"initialValue":{"expression":{"id":2770,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1958:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1980:10:16","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"1958:32:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1938:52:16"},{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2007:12:16","nodeType":"VariableDeclaration","scope":2805,"src":"2000:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2773,"name":"uint48","nodeType":"ElementaryTypeName","src":"2000:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2777,"initialValue":{"expression":{"id":2775,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"2022:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2039:10:16","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"2022:27:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2000:49:16"},{"assignments":[2779],"declarations":[{"constant":false,"id":2779,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2066:12:16","nodeType":"VariableDeclaration","scope":2805,"src":"2059:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2778,"name":"uint48","nodeType":"ElementaryTypeName","src":"2059:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2782,"initialValue":{"expression":{"id":2780,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"2081:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2098:10:16","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"2081:27:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2059:49:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2123:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2784,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"2136:12:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2123:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2790,"nodeType":"IfStatement","src":"2119:56:16","trueBody":{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2786,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2150:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2787,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"2163:12:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2150:25:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2789,"nodeType":"ExpressionStatement","src":"2150:25:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2189:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2792,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2202:12:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2189:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2798,"nodeType":"IfStatement","src":"2185:56:16","trueBody":{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2794,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2216:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2795,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2229:12:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2216:25:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2797,"nodeType":"ExpressionStatement","src":"2216:25:16"}},{"expression":{"arguments":[{"id":2800,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"2273:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2801,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2285:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2802,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2297:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2799,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"2258:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2662_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2730,"id":2804,"nodeType":"Return","src":"2251:57:16"}]},"id":2806,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1397:19:16","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"validationData","nameLocation":"1425:14:16","nodeType":"VariableDeclaration","scope":2806,"src":"1417:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1449:23:16","nodeType":"VariableDeclaration","scope":2806,"src":"1441:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1416:57:16"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2806,"src":"1488:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2728,"nodeType":"UserDefinedTypeName","pathNode":{"id":2727,"name":"ValidationData","nameLocations":["1488:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"1488:14:16"},"referencedDeclaration":2662,"src":"1488:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1487:23:16"},"scope":2892,"src":"1388:927:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2842,"nodeType":"Block","src":"2507:127:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2817,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2532:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2537:10:16","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2657,"src":"2532:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2524:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2815,"name":"uint160","nodeType":"ElementaryTypeName","src":"2524:7:16","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2560:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2565:10:16","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"2560:15:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2552:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2552:7:16","typeDescriptions":{}}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2552:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2551:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2524:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2831,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2596:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData memory"}},"id":2832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2601:10:16","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"2596:15:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2588:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2588:7:16","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2588:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2623:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2617:8:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2616:10:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2588:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2587:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2524:103:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2814,"id":2841,"nodeType":"Return","src":"2517:110:16"}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"2317:105:16","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":2843,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2436:19:16","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"data","nameLocation":"2478:4:16","nodeType":"VariableDeclaration","scope":2843,"src":"2456:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2809,"nodeType":"UserDefinedTypeName","pathNode":{"id":2808,"name":"ValidationData","nameLocations":["2456:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"2456:14:16"},"referencedDeclaration":2662,"src":"2456:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2662_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2455:28:16"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"2498:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2497:9:16"},"scope":2892,"src":"2427:207:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2880,"nodeType":"Block","src":"3058:112:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":2855,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"3076:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3076:17:16","trueExpression":{"hexValue":"31","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3075:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2862,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3106:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3098:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:16","typeDescriptions":{}}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3121:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3098:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3097:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3075:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2870,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"3137:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3129:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"3129:7:16","typeDescriptions":{}}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3129:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3153:8:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3152:10:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3129:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3128:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3075:88:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2854,"id":2879,"nodeType":"Return","src":"3068:95:16"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"2636:311:16","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":2881,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2961:19:16","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"sigFailed","nameLocation":"2986:9:16","nodeType":"VariableDeclaration","scope":2881,"src":"2981:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2845,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"validUntil","nameLocation":"3004:10:16","nodeType":"VariableDeclaration","scope":2881,"src":"2997:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2847,"name":"uint48","nodeType":"ElementaryTypeName","src":"2997:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"validAfter","nameLocation":"3023:10:16","nodeType":"VariableDeclaration","scope":2881,"src":"3016:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2849,"name":"uint48","nodeType":"ElementaryTypeName","src":"3016:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2980:54:16"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"3049:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3049:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3048:9:16"},"scope":2892,"src":"2952:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2890,"nodeType":"Block","src":"3425:193:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3444:168:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3458:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3475:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3469:5:16"},"nodeType":"YulFunctionCall","src":"3469:11:16"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3462:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3493:22:16","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3504:11:16"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3497:3:16","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3541:3:16"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3546:11:16"},{"name":"len","nodeType":"YulIdentifier","src":"3559:3:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3528:12:16"},"nodeType":"YulFunctionCall","src":"3528:35:16"},"nodeType":"YulExpressionStatement","src":"3528:35:16"},{"nodeType":"YulAssignment","src":"3576:26:16","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3593:3:16"},{"name":"len","nodeType":"YulIdentifier","src":"3598:3:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3583:9:16"},"nodeType":"YulFunctionCall","src":"3583:19:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3576:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2884,"isOffset":false,"isSlot":false,"src":"3504:11:16","suffix":"length","valueSize":1},{"declaration":2884,"isOffset":true,"isSlot":false,"src":"3546:11:16","suffix":"offset","valueSize":1},{"declaration":2887,"isOffset":false,"isSlot":false,"src":"3576:3:16","valueSize":1}],"id":2889,"nodeType":"InlineAssembly","src":"3435:177:16"}]},"documentation":{"id":2882,"nodeType":"StructuredDocumentation","src":"3172:176:16","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":2891,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3362:14:16","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"data","nameLocation":"3392:4:16","nodeType":"VariableDeclaration","scope":2891,"src":"3377:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2883,"name":"bytes","nodeType":"ElementaryTypeName","src":"3377:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3376:21:16"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"ret","nameLocation":"3420:3:16","nodeType":"VariableDeclaration","scope":2891,"src":"3412:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3412:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3411:13:16"},"scope":2892,"src":"3353:265:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"32:3587:16"},"id":16},"contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[2908],"UserOperation":[3297],"UserOperationLib":[3467],"calldataKeccak":[2891]},"id":2909,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2893,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2909,"sourceUnit":3468,"src":"58:29:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2908,"linearizedBaseContracts":[2908],"name":"IAccount","nameLocation":"99:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"115:1861:17","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n      The excess is left as a deposit in the entrypoint, for future calls.\n      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"3a871cdd","id":2907,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1990:14:17","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"userOp","nameLocation":"2028:6:17","nodeType":"VariableDeclaration","scope":2907,"src":"2005:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2897,"nodeType":"UserDefinedTypeName","pathNode":{"id":2896,"name":"UserOperation","nameLocations":["2005:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"2005:13:17"},"referencedDeclaration":3297,"src":"2005:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"userOpHash","nameLocation":"2044:10:17","nodeType":"VariableDeclaration","scope":2907,"src":"2036:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2064:19:17","nodeType":"VariableDeclaration","scope":2907,"src":"2056:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2004:80:17"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"validationData","nameLocation":"2111:14:17","nodeType":"VariableDeclaration","scope":2907,"src":"2103:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2102:24:17"},"scope":2908,"src":"1981:146:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2909,"src":"89:2040:17","usedErrors":[]}],"src":"32:2097:17"},"id":17},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[2942],"UserOperation":[3297],"UserOperationLib":[3467],"calldataKeccak":[2891]},"id":2943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2910,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2943,"sourceUnit":3468,"src":"58:29:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":2912,"nodeType":"StructuredDocumentation","src":"89:84:18","text":" Aggregated Signatures validator.\n 集約した署名を検証する。 "},"fullyImplemented":false,"id":2942,"linearizedBaseContracts":[2942],"name":"IAggregator","nameLocation":"184:11:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"203:136:18","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":2922,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"353:18:18","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"userOps","nameLocation":"397:7:18","nodeType":"VariableDeclaration","scope":2922,"src":"372:32:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2915,"nodeType":"UserDefinedTypeName","pathNode":{"id":2914,"name":"UserOperation","nameLocations":["372:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"372:13:18"},"referencedDeclaration":3297,"src":"372:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"id":2916,"nodeType":"ArrayTypeName","src":"372:15:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"signature","nameLocation":"421:9:18","nodeType":"VariableDeclaration","scope":2922,"src":"406:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2918,"name":"bytes","nodeType":"ElementaryTypeName","src":"406:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"371:60:18"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[],"src":"445:0:18"},"scope":2942,"src":"344:102:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2923,"nodeType":"StructuredDocumentation","src":"452:576:18","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":2931,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1042:23:18","nodeType":"FunctionDefinition","parameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"userOp","nameLocation":"1089:6:18","nodeType":"VariableDeclaration","scope":2931,"src":"1066:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2925,"nodeType":"UserDefinedTypeName","pathNode":{"id":2924,"name":"UserOperation","nameLocations":["1066:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"1066:13:18"},"referencedDeclaration":3297,"src":"1066:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1065:31:18"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1133:12:18","nodeType":"VariableDeclaration","scope":2931,"src":"1120:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"1120:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1119:27:18"},"scope":2942,"src":"1033:114:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"1153:368:18","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":2941,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1535:19:18","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"userOps","nameLocation":"1580:7:18","nodeType":"VariableDeclaration","scope":2941,"src":"1555:32:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2934,"nodeType":"UserDefinedTypeName","pathNode":{"id":2933,"name":"UserOperation","nameLocations":["1555:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"1555:13:18"},"referencedDeclaration":3297,"src":"1555:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"id":2935,"nodeType":"ArrayTypeName","src":"1555:15:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1554:34:18"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1625:19:18","nodeType":"VariableDeclaration","scope":2941,"src":"1612:32:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"1612:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1611:34:18"},"scope":2942,"src":"1526:120:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2943,"src":"174:1474:18","usedErrors":[]}],"src":"32:1616:18"},"id":18},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[2942],"IEntryPoint":[3146],"INonceManager":[3165],"IStakeManager":[3270],"UserOperation":[3297],"UserOperationLib":[3467],"calldataKeccak":[2891]},"id":3147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2944,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3147,"sourceUnit":3468,"src":"180:29:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":2946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3147,"sourceUnit":3271,"src":"210:29:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":2947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3147,"sourceUnit":2943,"src":"240:27:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":2948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3147,"sourceUnit":3166,"src":"268:29:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2949,"name":"IStakeManager","nameLocations":["324:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3270,"src":"324:13:19"},"id":2950,"nodeType":"InheritanceSpecifier","src":"324:13:19"},{"baseName":{"id":2951,"name":"INonceManager","nameLocations":["339:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"339:13:19"},"id":2952,"nodeType":"InheritanceSpecifier","src":"339:13:19"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3146,"linearizedBaseContracts":[3146,3165,3270],"name":"IEntryPoint","nameLocation":"309:11:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":2968,"name":"UserOperationEvent","nameLocation":"1060:18:19","nodeType":"EventDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1095:10:19","nodeType":"VariableDeclaration","scope":2968,"src":"1079:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1079:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2956,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1123:6:19","nodeType":"VariableDeclaration","scope":2968,"src":"1107:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1147:9:19","nodeType":"VariableDeclaration","scope":2968,"src":"1131:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2960,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1166:5:19","nodeType":"VariableDeclaration","scope":2968,"src":"1158:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2962,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1178:7:19","nodeType":"VariableDeclaration","scope":2968,"src":"1173:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2961,"name":"bool","nodeType":"ElementaryTypeName","src":"1173:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2964,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1195:13:19","nodeType":"VariableDeclaration","scope":2968,"src":"1187:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2966,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1218:13:19","nodeType":"VariableDeclaration","scope":2968,"src":"1210:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:154:19"},"src":"1054:179:19"},{"anonymous":false,"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"1239:333:19","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":2979,"name":"AccountDeployed","nameLocation":"1583:15:19","nodeType":"EventDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1615:10:19","nodeType":"VariableDeclaration","scope":2979,"src":"1599:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1599:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2973,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:19","nodeType":"VariableDeclaration","scope":2979,"src":"1627:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2975,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1659:7:19","nodeType":"VariableDeclaration","scope":2979,"src":"1651:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2974,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2977,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1676:9:19","nodeType":"VariableDeclaration","scope":2979,"src":"1668:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1598:88:19"},"src":"1577:110:19"},{"anonymous":false,"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"1693:337:19","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":2990,"name":"UserOperationRevertReason","nameLocation":"2041:25:19","nodeType":"EventDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2083:10:19","nodeType":"VariableDeclaration","scope":2990,"src":"2067:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2067:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2984,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2111:6:19","nodeType":"VariableDeclaration","scope":2990,"src":"2095:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2986,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2127:5:19","nodeType":"VariableDeclaration","scope":2990,"src":"2119:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2119:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2988,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2140:12:19","nodeType":"VariableDeclaration","scope":2990,"src":"2134:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2987,"name":"bytes","nodeType":"ElementaryTypeName","src":"2134:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2066:87:19"},"src":"2035:119:19"},{"anonymous":false,"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"2160:158:19","text":" an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":2993,"name":"BeforeExecution","nameLocation":"2329:15:19","nodeType":"EventDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[],"src":"2344:2:19"},"src":"2323:24:19"},{"anonymous":false,"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"2353:101:19","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":2998,"name":"SignatureAggregatorChanged","nameLocation":"2465:26:19","nodeType":"EventDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2508:10:19","nodeType":"VariableDeclaration","scope":2998,"src":"2492:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2491:28:19"},"src":"2459:61:19"},{"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"2526:756:19","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":3005,"name":"FailedOp","nameLocation":"3293:8:19","nodeType":"ErrorDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"opIndex","nameLocation":"3310:7:19","nodeType":"VariableDeclaration","scope":3005,"src":"3302:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"reason","nameLocation":"3326:6:19","nodeType":"VariableDeclaration","scope":3005,"src":"3319:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3002,"name":"string","nodeType":"ElementaryTypeName","src":"3319:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3301:32:19"},"src":"3287:47:19"},{"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"3340:114:19","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":3010,"name":"SignatureValidationFailed","nameLocation":"3465:25:19","nodeType":"ErrorDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"aggregator","nameLocation":"3499:10:19","nodeType":"VariableDeclaration","scope":3010,"src":"3491:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"3491:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3490:20:19"},"src":"3459:52:19"},{"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"3517:327:19","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":3025,"name":"ValidationResult","nameLocation":"3855:16:19","nodeType":"ErrorDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"returnInfo","nameLocation":"3883:10:19","nodeType":"VariableDeclaration","scope":3025,"src":"3872:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3122_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":3013,"nodeType":"UserDefinedTypeName","pathNode":{"id":3012,"name":"ReturnInfo","nameLocations":["3872:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3122,"src":"3872:10:19"},"referencedDeclaration":3122,"src":"3872:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3122_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"senderInfo","nameLocation":"3913:10:19","nodeType":"VariableDeclaration","scope":3025,"src":"3903:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3016,"nodeType":"UserDefinedTypeName","pathNode":{"id":3015,"name":"StakeInfo","nameLocations":["3903:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"3903:9:19"},"referencedDeclaration":3222,"src":"3903:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"factoryInfo","nameLocation":"3935:11:19","nodeType":"VariableDeclaration","scope":3025,"src":"3925:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3019,"nodeType":"UserDefinedTypeName","pathNode":{"id":3018,"name":"StakeInfo","nameLocations":["3925:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"3925:9:19"},"referencedDeclaration":3222,"src":"3925:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"paymasterInfo","nameLocation":"3958:13:19","nodeType":"VariableDeclaration","scope":3025,"src":"3948:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3022,"nodeType":"UserDefinedTypeName","pathNode":{"id":3021,"name":"StakeInfo","nameLocations":["3948:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"3948:9:19"},"referencedDeclaration":3222,"src":"3948:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"3871:101:19"},"src":"3849:124:19"},{"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"3979:561:19","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":3043,"name":"ValidationResultWithAggregation","nameLocation":"4551:31:19","nodeType":"ErrorDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"returnInfo","nameLocation":"4594:10:19","nodeType":"VariableDeclaration","scope":3043,"src":"4583:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3122_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":3028,"nodeType":"UserDefinedTypeName","pathNode":{"id":3027,"name":"ReturnInfo","nameLocations":["4583:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3122,"src":"4583:10:19"},"referencedDeclaration":3122,"src":"4583:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$3122_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"senderInfo","nameLocation":"4624:10:19","nodeType":"VariableDeclaration","scope":3043,"src":"4614:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3031,"nodeType":"UserDefinedTypeName","pathNode":{"id":3030,"name":"StakeInfo","nameLocations":["4614:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"4614:9:19"},"referencedDeclaration":3222,"src":"4614:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"factoryInfo","nameLocation":"4646:11:19","nodeType":"VariableDeclaration","scope":3043,"src":"4636:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3034,"nodeType":"UserDefinedTypeName","pathNode":{"id":3033,"name":"StakeInfo","nameLocations":["4636:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"4636:9:19"},"referencedDeclaration":3222,"src":"4636:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4669:13:19","nodeType":"VariableDeclaration","scope":3043,"src":"4659:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3037,"nodeType":"UserDefinedTypeName","pathNode":{"id":3036,"name":"StakeInfo","nameLocations":["4659:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"4659:9:19"},"referencedDeclaration":3222,"src":"4659:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"4712:14:19","nodeType":"VariableDeclaration","scope":3043,"src":"4692:34:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3128_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":3040,"nodeType":"UserDefinedTypeName","pathNode":{"id":3039,"name":"AggregatorStakeInfo","nameLocations":["4692:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":3128,"src":"4692:19:19"},"referencedDeclaration":3128,"src":"4692:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$3128_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4582:145:19"},"src":"4545:183:19"},{"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"4734:51:19","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":3048,"name":"SenderAddressResult","nameLocation":"4796:19:19","nodeType":"ErrorDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"sender","nameLocation":"4824:6:19","nodeType":"VariableDeclaration","scope":3048,"src":"4816:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"4816:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4815:16:19"},"src":"4790:42:19"},{"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"4838:51:19","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":3063,"name":"ExecutionResult","nameLocation":"4900:15:19","nodeType":"ErrorDefinition","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"preOpGas","nameLocation":"4924:8:19","nodeType":"VariableDeclaration","scope":3063,"src":"4916:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"4916:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"paid","nameLocation":"4942:4:19","nodeType":"VariableDeclaration","scope":3063,"src":"4934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"validAfter","nameLocation":"4955:10:19","nodeType":"VariableDeclaration","scope":3063,"src":"4948:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3054,"name":"uint48","nodeType":"ElementaryTypeName","src":"4948:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"validUntil","nameLocation":"4974:10:19","nodeType":"VariableDeclaration","scope":3063,"src":"4967:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3056,"name":"uint48","nodeType":"ElementaryTypeName","src":"4967:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"targetSuccess","nameLocation":"4991:13:19","nodeType":"VariableDeclaration","scope":3063,"src":"4986:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3058,"name":"bool","nodeType":"ElementaryTypeName","src":"4986:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"targetResult","nameLocation":"5012:12:19","nodeType":"VariableDeclaration","scope":3063,"src":"5006:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3060,"name":"bytes","nodeType":"ElementaryTypeName","src":"5006:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4915:110:19"},"src":"4894:132:19"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3073,"members":[{"constant":false,"id":3067,"mutability":"mutable","name":"userOps","nameLocation":"5124:7:19","nodeType":"VariableDeclaration","scope":3073,"src":"5108:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3065,"nodeType":"UserDefinedTypeName","pathNode":{"id":3064,"name":"UserOperation","nameLocations":["5108:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"5108:13:19"},"referencedDeclaration":3297,"src":"5108:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"id":3066,"nodeType":"ArrayTypeName","src":"5108:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"aggregator","nameLocation":"5184:10:19","nodeType":"VariableDeclaration","scope":3073,"src":"5172:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$2942","typeString":"contract IAggregator"},"typeName":{"id":3069,"nodeType":"UserDefinedTypeName","pathNode":{"id":3068,"name":"IAggregator","nameLocations":["5172:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"5172:11:19"},"referencedDeclaration":2942,"src":"5172:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$2942","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"signature","nameLocation":"5242:9:19","nodeType":"VariableDeclaration","scope":3073,"src":"5236:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5077:20:19","nodeType":"StructDefinition","scope":3146,"src":"5070:188:19","visibility":"public"},{"documentation":{"id":3074,"nodeType":"StructuredDocumentation","src":"5264:368:19","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":3083,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5646:9:19","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"ops","nameLocation":"5681:3:19","nodeType":"VariableDeclaration","scope":3083,"src":"5656:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3076,"nodeType":"UserDefinedTypeName","pathNode":{"id":3075,"name":"UserOperation","nameLocations":["5656:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"5656:13:19"},"referencedDeclaration":3297,"src":"5656:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"id":3077,"nodeType":"ArrayTypeName","src":"5656:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3297_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"beneficiary","nameLocation":"5702:11:19","nodeType":"VariableDeclaration","scope":3083,"src":"5686:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"5686:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5655:59:19"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[],"src":"5723:0:19"},"scope":3146,"src":"5637:87:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3084,"nodeType":"StructuredDocumentation","src":"5730:249:19","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":3093,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5993:19:19","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6054:16:19","nodeType":"VariableDeclaration","scope":3093,"src":"6022:48:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3073_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3086,"nodeType":"UserDefinedTypeName","pathNode":{"id":3085,"name":"UserOpsPerAggregator","nameLocations":["6022:20:19"],"nodeType":"IdentifierPath","referencedDeclaration":3073,"src":"6022:20:19"},"referencedDeclaration":3073,"src":"6022:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3073_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3087,"nodeType":"ArrayTypeName","src":"6022:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3073_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"beneficiary","nameLocation":"6096:11:19","nodeType":"VariableDeclaration","scope":3093,"src":"6080:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"6080:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6012:101:19"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[],"src":"6122:0:19"},"scope":3146,"src":"5984:139:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"6129:197:19","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":3102,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6340:13:19","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"userOp","nameLocation":"6377:6:19","nodeType":"VariableDeclaration","scope":3102,"src":"6354:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3096,"nodeType":"UserDefinedTypeName","pathNode":{"id":3095,"name":"UserOperation","nameLocations":["6354:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"6354:13:19"},"referencedDeclaration":3297,"src":"6354:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6353:31:19"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3102,"src":"6408:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6408:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6407:9:19"},"scope":3146,"src":"6331:86:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"6423:398:19","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":3109,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"6835:18:19","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"userOp","nameLocation":"6877:6:19","nodeType":"VariableDeclaration","scope":3109,"src":"6854:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3105,"nodeType":"UserDefinedTypeName","pathNode":{"id":3104,"name":"UserOperation","nameLocations":["6854:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"6854:13:19"},"referencedDeclaration":3297,"src":"6854:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6853:31:19"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"6893:0:19"},"scope":3146,"src":"6826:68:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","id":3122,"members":[{"constant":false,"id":3111,"mutability":"mutable","name":"preOpGas","nameLocation":"7529:8:19","nodeType":"VariableDeclaration","scope":3122,"src":"7521:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"7521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"prefund","nameLocation":"7555:7:19","nodeType":"VariableDeclaration","scope":3122,"src":"7547:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"7547:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"sigFailed","nameLocation":"7577:9:19","nodeType":"VariableDeclaration","scope":3122,"src":"7572:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3114,"name":"bool","nodeType":"ElementaryTypeName","src":"7572:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"validAfter","nameLocation":"7603:10:19","nodeType":"VariableDeclaration","scope":3122,"src":"7596:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3116,"name":"uint48","nodeType":"ElementaryTypeName","src":"7596:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"validUntil","nameLocation":"7630:10:19","nodeType":"VariableDeclaration","scope":3122,"src":"7623:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3118,"name":"uint48","nodeType":"ElementaryTypeName","src":"7623:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"paymasterContext","nameLocation":"7656:16:19","nodeType":"VariableDeclaration","scope":3122,"src":"7650:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3120,"name":"bytes","nodeType":"ElementaryTypeName","src":"7650:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7500:10:19","nodeType":"StructDefinition","scope":3146,"src":"7493:186:19","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","id":3128,"members":[{"constant":false,"id":3124,"mutability":"mutable","name":"aggregator","nameLocation":"7859:10:19","nodeType":"VariableDeclaration","scope":3128,"src":"7851:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"7851:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"stakeInfo","nameLocation":"7889:9:19","nodeType":"VariableDeclaration","scope":3128,"src":"7879:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3126,"nodeType":"UserDefinedTypeName","pathNode":{"id":3125,"name":"StakeInfo","nameLocations":["7879:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3222,"src":"7879:9:19"},"referencedDeclaration":3222,"src":"7879:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3222_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7821:19:19","nodeType":"StructDefinition","scope":3146,"src":"7814:91:19","visibility":"public"},{"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"7911:337:19","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8262:16:19","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"initCode","nameLocation":"8292:8:19","nodeType":"VariableDeclaration","scope":3134,"src":"8279:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3130,"name":"bytes","nodeType":"ElementaryTypeName","src":"8279:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8278:23:19"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[],"src":"8310:0:19"},"scope":3146,"src":"8253:58:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"8318:847:19","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":3145,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9179:16:19","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"op","nameLocation":"9219:2:19","nodeType":"VariableDeclaration","scope":3145,"src":"9196:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3137,"nodeType":"UserDefinedTypeName","pathNode":{"id":3136,"name":"UserOperation","nameLocations":["9196:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"9196:13:19"},"referencedDeclaration":3297,"src":"9196:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"target","nameLocation":"9231:6:19","nodeType":"VariableDeclaration","scope":3145,"src":"9223:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"9223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"targetCallData","nameLocation":"9254:14:19","nodeType":"VariableDeclaration","scope":3145,"src":"9239:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3141,"name":"bytes","nodeType":"ElementaryTypeName","src":"9239:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9195:74:19"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[],"src":"9278:0:19"},"scope":3146,"src":"9170:109:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3147,"src":"299:8982:19","usedErrors":[3005,3010,3025,3043,3048,3063]}],"src":"32:9250:19"},"id":19},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[3165]},"id":3166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3148,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3165,"linearizedBaseContracts":[3165],"name":"INonceManager","nameLocation":"68:13:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"89:417:20","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order. \n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":3158,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"520:8:20","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"sender","nameLocation":"537:6:20","nodeType":"VariableDeclaration","scope":3158,"src":"529:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"key","nameLocation":"553:3:20","nodeType":"VariableDeclaration","scope":3158,"src":"545:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3152,"name":"uint192","nodeType":"ElementaryTypeName","src":"545:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"528:29:20"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"nonce","nameLocation":"589:5:20","nodeType":"VariableDeclaration","scope":3158,"src":"581:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:15:20"},"scope":3165,"src":"511:85:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3159,"nodeType":"StructuredDocumentation","src":"602:449:20","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":3164,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1065:14:20","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"key","nameLocation":"1088:3:20","nodeType":"VariableDeclaration","scope":3164,"src":"1080:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3160,"name":"uint192","nodeType":"ElementaryTypeName","src":"1080:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1079:13:20"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[],"src":"1101:0:20"},"scope":3165,"src":"1056:46:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3166,"src":"58:1046:20","usedErrors":[]}],"src":"32:1072:20"},"id":20},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[3270]},"id":3271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3167,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"58:212:21","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity. "},"fullyImplemented":false,"id":3270,"linearizedBaseContracts":[3270],"name":"IStakeManager","nameLocation":"281:13:21","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":3174,"name":"Deposited","nameLocation":"308:9:21","nodeType":"EventDefinition","parameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"343:7:21","nodeType":"VariableDeclaration","scope":3174,"src":"327:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3172,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:21","nodeType":"VariableDeclaration","scope":3174,"src":"360:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:69:21"},"src":"302:85:21"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":3182,"name":"Withdrawn","nameLocation":"399:9:21","nodeType":"EventDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"434:7:21","nodeType":"VariableDeclaration","scope":3182,"src":"418:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3178,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"459:15:21","nodeType":"VariableDeclaration","scope":3182,"src":"451:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3180,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:21","nodeType":"VariableDeclaration","scope":3182,"src":"484:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:96:21"},"src":"393:112:21"},{"anonymous":false,"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"511:52:21","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":3191,"name":"StakeLocked","nameLocation":"574:11:21","nodeType":"EventDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"611:7:21","nodeType":"VariableDeclaration","scope":3191,"src":"595:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3187,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"636:11:21","nodeType":"VariableDeclaration","scope":3191,"src":"628:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"665:15:21","nodeType":"VariableDeclaration","scope":3191,"src":"657:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:101:21"},"src":"568:119:21"},{"anonymous":false,"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"693:52:21","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":3198,"name":"StakeUnlocked","nameLocation":"756:13:21","nodeType":"EventDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"795:7:21","nodeType":"VariableDeclaration","scope":3198,"src":"779:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3196,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"820:12:21","nodeType":"VariableDeclaration","scope":3198,"src":"812:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"769:69:21"},"src":"750:89:21"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":3206,"name":"StakeWithdrawn","nameLocation":"851:14:21","nodeType":"EventDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"891:7:21","nodeType":"VariableDeclaration","scope":3206,"src":"875:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3199,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3202,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"916:15:21","nodeType":"VariableDeclaration","scope":3206,"src":"908:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3204,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"949:6:21","nodeType":"VariableDeclaration","scope":3206,"src":"941:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:96:21"},"src":"845:117:21"},{"canonicalName":"IStakeManager.DepositInfo","id":3217,"members":[{"constant":false,"id":3208,"mutability":"mutable","name":"deposit","nameLocation":"1642:7:21","nodeType":"VariableDeclaration","scope":3217,"src":"1634:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3207,"name":"uint112","nodeType":"ElementaryTypeName","src":"1634:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"staked","nameLocation":"1664:6:21","nodeType":"VariableDeclaration","scope":3217,"src":"1659:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3209,"name":"bool","nodeType":"ElementaryTypeName","src":"1659:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"stake","nameLocation":"1688:5:21","nodeType":"VariableDeclaration","scope":3217,"src":"1680:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3211,"name":"uint112","nodeType":"ElementaryTypeName","src":"1680:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1710:15:21","nodeType":"VariableDeclaration","scope":3217,"src":"1703:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3213,"name":"uint32","nodeType":"ElementaryTypeName","src":"1703:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"withdrawTime","nameLocation":"1742:12:21","nodeType":"VariableDeclaration","scope":3217,"src":"1735:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3215,"name":"uint48","nodeType":"ElementaryTypeName","src":"1735:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1612:11:21","nodeType":"StructDefinition","scope":3270,"src":"1605:156:21","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":3222,"members":[{"constant":false,"id":3219,"mutability":"mutable","name":"stake","nameLocation":"1863:5:21","nodeType":"VariableDeclaration","scope":3222,"src":"1855:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1855:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1886:15:21","nodeType":"VariableDeclaration","scope":3222,"src":"1878:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1835:9:21","nodeType":"StructDefinition","scope":3270,"src":"1828:80:21","visibility":"public"},{"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"1914:60:21","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":3231,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1988:14:21","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"account","nameLocation":"2011:7:21","nodeType":"VariableDeclaration","scope":3231,"src":"2003:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"2003:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2002:17:21"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"info","nameLocation":"2062:4:21","nodeType":"VariableDeclaration","scope":3231,"src":"2043:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3217_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3228,"nodeType":"UserDefinedTypeName","pathNode":{"id":3227,"name":"DepositInfo","nameLocations":["2043:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3217,"src":"2043:11:21"},"referencedDeclaration":3217,"src":"2043:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3217_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2042:25:21"},"scope":3270,"src":"1979:89:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"2074:56:21","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":3239,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2144:9:21","nodeType":"FunctionDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"account","nameLocation":"2162:7:21","nodeType":"VariableDeclaration","scope":3239,"src":"2154:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3233,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2153:17:21"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"2194:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2193:9:21"},"scope":3270,"src":"2135:68:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"2209:58:21","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":3245,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2281:9:21","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"account","nameLocation":"2299:7:21","nodeType":"VariableDeclaration","scope":3245,"src":"2291:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2290:17:21"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[],"src":"2324:0:21"},"scope":3270,"src":"2272:53:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"2331:201:21","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3251,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2546:8:21","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2562:16:21","nodeType":"VariableDeclaration","scope":3251,"src":"2555:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3247,"name":"uint32","nodeType":"ElementaryTypeName","src":"2555:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2554:25:21"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[],"src":"2596:0:21"},"scope":3270,"src":"2537:60:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"2603:128:21","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3255,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2745:11:21","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[],"src":"2756:2:21"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[],"src":"2767:0:21"},"scope":3270,"src":"2736:32:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"2774:194:21","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":3261,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2982:13:21","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3012:15:21","nodeType":"VariableDeclaration","scope":3261,"src":"2996:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"2996:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2995:33:21"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[],"src":"3037:0:21"},"scope":3270,"src":"2973:65:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"3044:165:21","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":3269,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3223:10:21","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3250:15:21","nodeType":"VariableDeclaration","scope":3269,"src":"3234:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"3234:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3275:14:21","nodeType":"VariableDeclaration","scope":3269,"src":"3267:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3267:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3233:57:21"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"3299:0:21"},"scope":3270,"src":"3214:86:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3271,"src":"271:3031:21","usedErrors":[]}],"src":"32:3270:21"},"id":21},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[3297],"UserOperationLib":[3467],"calldataKeccak":[2891]},"id":3468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3272,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"contracts/core/Helpers.sol","file":"../core/Helpers.sol","id":3274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3468,"sourceUnit":2892,"src":"100:51:22","symbolAliases":[{"foreign":{"id":3273,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"108:14:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"UserOperation","id":3297,"members":[{"constant":false,"id":3276,"mutability":"mutable","name":"sender","nameLocation":"1234:6:22","nodeType":"VariableDeclaration","scope":3297,"src":"1226:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"nonce","nameLocation":"1258:5:22","nodeType":"VariableDeclaration","scope":3297,"src":"1250:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"initCode","nameLocation":"1279:8:22","nodeType":"VariableDeclaration","scope":3297,"src":"1273:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3279,"name":"bytes","nodeType":"ElementaryTypeName","src":"1273:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"callData","nameLocation":"1303:8:22","nodeType":"VariableDeclaration","scope":3297,"src":"1297:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3281,"name":"bytes","nodeType":"ElementaryTypeName","src":"1297:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"callGasLimit","nameLocation":"1329:12:22","nodeType":"VariableDeclaration","scope":3297,"src":"1321:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1321:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1359:20:22","nodeType":"VariableDeclaration","scope":3297,"src":"1351:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1397:18:22","nodeType":"VariableDeclaration","scope":3297,"src":"1389:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3290,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1433:12:22","nodeType":"VariableDeclaration","scope":3297,"src":"1425:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1463:20:22","nodeType":"VariableDeclaration","scope":3297,"src":"1455:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1499:16:22","nodeType":"VariableDeclaration","scope":3297,"src":"1493:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3293,"name":"bytes","nodeType":"ElementaryTypeName","src":"1493:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"signature","nameLocation":"1531:9:22","nodeType":"VariableDeclaration","scope":3297,"src":"1525:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3295,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1201:13:22","nodeType":"StructDefinition","scope":3468,"src":"1194:353:22","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"1549:77:22","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":3467,"linearizedBaseContracts":[3467],"name":"UserOperationLib","nameLocation":"1635:16:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3318,"nodeType":"Block","src":"1741:199:22","statements":[{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"data","nameLocation":"1759:4:22","nodeType":"VariableDeclaration","scope":3318,"src":"1751:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3308,"nodeType":"VariableDeclarationStatement","src":"1751:12:22"},{"AST":{"nodeType":"YulBlock","src":"1865:30:22","statements":[{"nodeType":"YulAssignment","src":"1866:28:22","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"1887:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1874:12:22"},"nodeType":"YulFunctionCall","src":"1874:20:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1866:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3307,"isOffset":false,"isSlot":false,"src":"1866:4:22","valueSize":1},{"declaration":3301,"isOffset":false,"isSlot":false,"src":"1887:6:22","valueSize":1}],"id":3309,"nodeType":"InlineAssembly","src":"1856:39:22"},{"expression":{"arguments":[{"arguments":[{"id":3314,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"1927:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1919:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3312,"name":"uint160","nodeType":"ElementaryTypeName","src":"1919:7:22","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1911:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3310,"name":"address","nodeType":"ElementaryTypeName","src":"1911:7:22","typeDescriptions":{}}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3305,"id":3317,"nodeType":"Return","src":"1904:29:22"}]},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1668:9:22","nodeType":"FunctionDefinition","parameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"userOp","nameLocation":"1701:6:22","nodeType":"VariableDeclaration","scope":3319,"src":"1678:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3300,"nodeType":"UserDefinedTypeName","pathNode":{"id":3299,"name":"UserOperation","nameLocations":["1678:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"1678:13:22"},"referencedDeclaration":3297,"src":"1678:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1677:31:22"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3319,"src":"1732:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"1732:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1731:9:22"},"scope":3467,"src":"1659:281:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3353,"nodeType":"Block","src":"2161:391:22","statements":[{"id":3352,"nodeType":"UncheckedBlock","src":"2167:379:22","statements":[{"assignments":[3328],"declarations":[{"constant":false,"id":3328,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2195:12:22","nodeType":"VariableDeclaration","scope":3352,"src":"2187:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3331,"initialValue":{"expression":{"id":3329,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"2210:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2217:12:22","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3290,"src":"2210:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:42:22"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2247:20:22","nodeType":"VariableDeclaration","scope":3352,"src":"2239:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"initialValue":{"expression":{"id":3334,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"2270:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2277:20:22","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"2270:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2239:58:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"2311:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3338,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2327:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2311:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"IfStatement","src":"2307:161:22","trueBody":{"id":3342,"nodeType":"Block","src":"2349:119:22","statements":[{"expression":{"id":3340,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"2445:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3326,"id":3341,"nodeType":"Return","src":"2438:19:22"}]}},{"expression":{"arguments":[{"id":3345,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"2488:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2502:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3347,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2525:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2531:7:22","memberName":"basefee","nodeType":"MemberAccess","src":"2525:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2502:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"2484:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2484:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3326,"id":3351,"nodeType":"Return","src":"2477:62:22"}]}]},"id":3354,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2089:8:22","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"userOp","nameLocation":"2121:6:22","nodeType":"VariableDeclaration","scope":3354,"src":"2098:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3321,"nodeType":"UserDefinedTypeName","pathNode":{"id":3320,"name":"UserOperation","nameLocations":["2098:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"2098:13:22"},"referencedDeclaration":3297,"src":"2098:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2097:31:22"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3354,"src":"2152:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:9:22"},"scope":3467,"src":"2080:472:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3433,"nodeType":"Block","src":"2644:856:22","statements":[{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"sender","nameLocation":"2662:6:22","nodeType":"VariableDeclaration","scope":3433,"src":"2654:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"2654:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3367,"initialValue":{"arguments":[{"id":3365,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2681:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3364,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"2671:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3297_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2671:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2654:34:22"},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"nonce","nameLocation":"2706:5:22","nodeType":"VariableDeclaration","scope":3433,"src":"2698:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3372,"initialValue":{"expression":{"id":3370,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2714:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2721:5:22","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"2714:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2698:28:22"},{"assignments":[3374],"declarations":[{"constant":false,"id":3374,"mutability":"mutable","name":"hashInitCode","nameLocation":"2744:12:22","nodeType":"VariableDeclaration","scope":3433,"src":"2736:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2736:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3379,"initialValue":{"arguments":[{"expression":{"id":3376,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2774:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2781:8:22","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3280,"src":"2774:15:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3375,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2759:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2759:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2736:54:22"},{"assignments":[3381],"declarations":[{"constant":false,"id":3381,"mutability":"mutable","name":"hashCallData","nameLocation":"2808:12:22","nodeType":"VariableDeclaration","scope":3433,"src":"2800:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2800:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3386,"initialValue":{"arguments":[{"expression":{"id":3383,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2838:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2845:8:22","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3282,"src":"2838:15:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3382,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2823:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2800:54:22"},{"assignments":[3388],"declarations":[{"constant":false,"id":3388,"mutability":"mutable","name":"callGasLimit","nameLocation":"2872:12:22","nodeType":"VariableDeclaration","scope":3433,"src":"2864:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3391,"initialValue":{"expression":{"id":3389,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2887:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2894:12:22","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3284,"src":"2887:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2864:42:22"},{"assignments":[3393],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2924:20:22","nodeType":"VariableDeclaration","scope":3433,"src":"2916:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2916:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3396,"initialValue":{"expression":{"id":3394,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2947:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2954:20:22","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"2947:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2916:58:22"},{"assignments":[3398],"declarations":[{"constant":false,"id":3398,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2992:18:22","nodeType":"VariableDeclaration","scope":3433,"src":"2984:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"initialValue":{"expression":{"id":3399,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3013:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3020:18:22","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3288,"src":"3013:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2984:54:22"},{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"3056:12:22","nodeType":"VariableDeclaration","scope":3433,"src":"3048:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3406,"initialValue":{"expression":{"id":3404,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3071:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3078:12:22","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3290,"src":"3071:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3048:42:22"},{"assignments":[3408],"declarations":[{"constant":false,"id":3408,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"3108:20:22","nodeType":"VariableDeclaration","scope":3433,"src":"3100:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3411,"initialValue":{"expression":{"id":3409,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3131:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3138:20:22","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"3131:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3100:58:22"},{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"3176:20:22","nodeType":"VariableDeclaration","scope":3433,"src":"3168:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3168:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3418,"initialValue":{"arguments":[{"expression":{"id":3415,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3214:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3221:16:22","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3294,"src":"3214:23:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3414,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"3199:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3168:70:22"},{"expression":{"arguments":[{"id":3421,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"3280:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3422,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"3288:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3423,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"3307:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3424,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"3321:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3425,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"3347:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3426,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3361:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3427,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3383:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3428,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"3415:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3429,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"3429:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3430,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"3463:20:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3419,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3256:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3260:6:22","memberName":"encode","nodeType":"MemberAccess","src":"3256:10:22","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:237:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3361,"id":3432,"nodeType":"Return","src":"3249:244:22"}]},"id":3434,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2567:4:22","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"userOp","nameLocation":"2595:6:22","nodeType":"VariableDeclaration","scope":3434,"src":"2572:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3356,"nodeType":"UserDefinedTypeName","pathNode":{"id":3355,"name":"UserOperation","nameLocations":["2572:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"2572:13:22"},"referencedDeclaration":3297,"src":"2572:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2571:31:22"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"ret","nameLocation":"2639:3:22","nodeType":"VariableDeclaration","scope":3434,"src":"2626:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2626:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2625:18:22"},"scope":3467,"src":"2558:942:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"3583:47:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":3444,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"3615:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3443,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"3610:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3297_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3442,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3600:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3600:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3441,"id":3447,"nodeType":"Return","src":"3593:30:22"}]},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3515:4:22","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"userOp","nameLocation":"3543:6:22","nodeType":"VariableDeclaration","scope":3449,"src":"3520:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3436,"nodeType":"UserDefinedTypeName","pathNode":{"id":3435,"name":"UserOperation","nameLocations":["3520:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"3520:13:22"},"referencedDeclaration":3297,"src":"3520:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3519:31:22"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"3574:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3573:9:22"},"scope":3467,"src":"3506:124:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3465,"nodeType":"Block","src":"3703:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"3720:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"3724:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3462,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"3732:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3720:13:22","trueExpression":{"id":3461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"3728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3457,"id":3464,"nodeType":"Return","src":"3713:20:22"}]},"id":3466,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3645:3:22","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"a","nameLocation":"3657:1:22","nodeType":"VariableDeclaration","scope":3466,"src":"3649:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3649:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"b","nameLocation":"3668:1:22","nodeType":"VariableDeclaration","scope":3466,"src":"3660:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3660:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3648:22:22"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3466,"src":"3694:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3693:9:22"},"scope":3467,"src":"3636:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3468,"src":"1627:2115:22","usedErrors":[]}],"src":"32:3710:22"},"id":22},"contracts/samples/SimpleAccount.sol":{"ast":{"absolutePath":"contracts/samples/SimpleAccount.sol","exportedSymbols":{"Address":[1038],"BaseAccount":[2653],"ECDSA":[1634],"ERC1967Upgrade":[334],"IAccount":[2908],"IAggregator":[2942],"IBeacon":[344],"IERC1155Receiver":[670],"IERC165":[1646],"IERC1822Proxiable":[30],"IERC1967":[20],"IERC721Receiver":[688],"IERC777Recipient":[708],"IEntryPoint":[3146],"INonceManager":[3165],"IStakeManager":[3270],"Initializable":[513],"Math":[2511],"SimpleAccount":[3791],"StorageSlot":[1098],"Strings":[1273],"TokenCallbackHandler":[3915],"UUPSUpgradeable":[629],"UserOperation":[3297],"UserOperationLib":[3467],"ValidationData":[2662],"_intersectTimeRange":[2806],"_packValidationData":[2843,2881],"_parseValidationData":[2721],"calldataKeccak":[2891]},"id":3792,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3469,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3792,"sourceUnit":1635,"src":"180:62:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":3471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3792,"sourceUnit":514,"src":"243:63:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":3472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3792,"sourceUnit":630,"src":"307:65:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BaseAccount.sol","file":"../core/BaseAccount.sol","id":3473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3792,"sourceUnit":2654,"src":"374:33:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/samples/callback/TokenCallbackHandler.sol","file":"./callback/TokenCallbackHandler.sol","id":3474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3792,"sourceUnit":3916,"src":"408:45:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3476,"name":"BaseAccount","nameLocations":["659:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2653,"src":"659:11:23"},"id":3477,"nodeType":"InheritanceSpecifier","src":"659:11:23"},{"baseName":{"id":3478,"name":"TokenCallbackHandler","nameLocations":["672:20:23"],"nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"672:20:23"},"id":3479,"nodeType":"InheritanceSpecifier","src":"672:20:23"},{"baseName":{"id":3480,"name":"UUPSUpgradeable","nameLocations":["694:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"694:15:23"},"id":3481,"nodeType":"InheritanceSpecifier","src":"694:15:23"},{"baseName":{"id":3482,"name":"Initializable","nameLocations":["711:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"711:13:23"},"id":3483,"nodeType":"InheritanceSpecifier","src":"711:13:23"}],"canonicalName":"SimpleAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"455:177:23","text":" minimal account.\n  this is sample minimal account.\n  has execute, eth handling methods\n  has a single signer that can send requests through the entryPoint."},"fullyImplemented":true,"id":3791,"linearizedBaseContracts":[3791,513,629,334,20,30,3915,670,1646,688,708,2653,2908],"name":"SimpleAccount","nameLocation":"642:13:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3486,"libraryName":{"id":3484,"name":"ECDSA","nameLocations":["737:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"737:5:23"},"nodeType":"UsingForDirective","src":"731:24:23","typeName":{"id":3485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"8da5cb5b","id":3488,"mutability":"mutable","name":"owner","nameLocation":"776:5:23","nodeType":"VariableDeclaration","scope":3791,"src":"761:20:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3491,"mutability":"immutable","name":"_entryPoint","nameLocation":"818:11:23","nodeType":"VariableDeclaration","scope":3791,"src":"788:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"IEntryPoint","nameLocations":["788:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"788:11:23"},"referencedDeclaration":3146,"src":"788:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"visibility":"private"},{"anonymous":false,"eventSelector":"47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de","id":3498,"name":"SimpleAccountInitialized","nameLocation":"842:24:23","nodeType":"EventDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"887:10:23","nodeType":"VariableDeclaration","scope":3498,"src":"867:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"},"typeName":{"id":3493,"nodeType":"UserDefinedTypeName","pathNode":{"id":3492,"name":"IEntryPoint","nameLocations":["867:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"867:11:23"},"referencedDeclaration":3146,"src":"867:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":3496,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"915:5:23","nodeType":"VariableDeclaration","scope":3498,"src":"899:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3495,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"866:55:23"},"src":"836:86:23"},{"body":{"id":3504,"nodeType":"Block","src":"949:40:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3500,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"959:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3502,"nodeType":"ExpressionStatement","src":"959:12:23"},{"id":3503,"nodeType":"PlaceholderStatement","src":"981:1:23"}]},"id":3505,"name":"onlyOwner","nameLocation":"937:9:23","nodeType":"ModifierDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[],"src":"946:2:23"},"src":"928:61:23","virtual":false,"visibility":"internal"},{"baseFunctions":[2550],"body":{"id":3515,"nodeType":"Block","src":"1100:35:23","statements":[{"expression":{"id":3513,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"1117:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"functionReturnParameters":3512,"id":3514,"nodeType":"Return","src":"1110:18:23"}]},"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"995:27:23","text":"@inheritdoc BaseAccount"},"functionSelector":"b0d691fe","id":3516,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1036:10:23","nodeType":"FunctionDefinition","overrides":{"id":3508,"nodeType":"OverrideSpecifier","overrides":[],"src":"1069:8:23"},"parameters":{"id":3507,"nodeType":"ParameterList","parameters":[],"src":"1046:2:23"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"1087:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"},"typeName":{"id":3510,"nodeType":"UserDefinedTypeName","pathNode":{"id":3509,"name":"IEntryPoint","nameLocations":["1087:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"1087:11:23"},"referencedDeclaration":3146,"src":"1087:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1086:13:23"},"scope":3791,"src":"1027:108:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3519,"nodeType":"Block","src":"1218:2:23","statements":[]},"id":3520,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[],"src":"1198:2:23"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[],"src":"1218:0:23"},"scope":3791,"src":"1191:29:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3533,"nodeType":"Block","src":"1264:75:23","statements":[{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3526,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"1274:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3527,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"1288:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"src":"1274:26:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"id":3529,"nodeType":"ExpressionStatement","src":"1274:26:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3530,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1310:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1310:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3532,"nodeType":"ExpressionStatement","src":"1310:22:23"}]},"id":3534,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"anEntryPoint","nameLocation":"1250:12:23","nodeType":"VariableDeclaration","scope":3534,"src":"1238:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"},"typeName":{"id":3522,"nodeType":"UserDefinedTypeName","pathNode":{"id":3521,"name":"IEntryPoint","nameLocations":["1238:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3146,"src":"1238:11:23"},"referencedDeclaration":3146,"src":"1238:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1237:26:23"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[],"src":"1264:0:23"},"scope":3791,"src":"1226:113:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3553,"nodeType":"Block","src":"1381:197:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1506:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1510:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1506:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3540,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1520:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1506:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3542,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1529:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1533:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1529:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1551:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$3791","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$3791","typeString":"contract SimpleAccount"}],"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1543:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:23","typeDescriptions":{}}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1529:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1506:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1558:12:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""},"value":"only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""}],"id":3537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1498:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3552,"nodeType":"ExpressionStatement","src":"1498:73:23"}]},"id":3554,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"1354:10:23","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[],"src":"1364:2:23"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[],"src":"1381:0:23"},"scope":3791,"src":"1345:233:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3573,"nodeType":"Block","src":"1752:82:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3564,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1762:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1762:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3566,"nodeType":"ExpressionStatement","src":"1762:31:23"},{"expression":{"arguments":[{"id":3568,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"1809:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"1815:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3570,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"1822:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3567,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"1803:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3572,"nodeType":"ExpressionStatement","src":"1803:24:23"}]},"documentation":{"id":3555,"nodeType":"StructuredDocumentation","src":"1584:87:23","text":" execute a transaction (called directly from owner, or by entryPoint)"},"functionSelector":"b61d27f6","id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1685:7:23","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"dest","nameLocation":"1701:4:23","nodeType":"VariableDeclaration","scope":3574,"src":"1693:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3556,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"value","nameLocation":"1715:5:23","nodeType":"VariableDeclaration","scope":3574,"src":"1707:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"func","nameLocation":"1737:4:23","nodeType":"VariableDeclaration","scope":3574,"src":"1722:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3560,"name":"bytes","nodeType":"ElementaryTypeName","src":"1722:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1692:50:23"},"returnParameters":{"id":3563,"nodeType":"ParameterList","parameters":[],"src":"1752:0:23"},"scope":3791,"src":"1676:158:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3619,"nodeType":"Block","src":"1977:218:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3584,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1987:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3586,"nodeType":"ExpressionStatement","src":"1987:31:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3588,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2036:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2041:6:23","memberName":"length","nodeType":"MemberAccess","src":"2036:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3590,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"2051:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:6:23","memberName":"length","nodeType":"MemberAccess","src":"2051:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2036:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77726f6e67206172726179206c656e67746873","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2064:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""},"value":"wrong array lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""}],"id":3587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2028:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2028:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3595,"nodeType":"ExpressionStatement","src":"2028:58:23"},{"body":{"id":3617,"nodeType":"Block","src":"2138:51:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3608,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2158:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3610,"indexExpression":{"id":3609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2163:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2158:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2167:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"baseExpression":{"id":3612,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"2170:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3614,"indexExpression":{"id":3613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2175:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:7:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3607,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"2152:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3616,"nodeType":"ExpressionStatement","src":"2152:26:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2116:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3601,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2120:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2125:6:23","memberName":"length","nodeType":"MemberAccess","src":"2120:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2116:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3618,"initializationExpression":{"assignments":[3597],"declarations":[{"constant":false,"id":3597,"mutability":"mutable","name":"i","nameLocation":"2109:1:23","nodeType":"VariableDeclaration","scope":3618,"src":"2101:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3599,"initialValue":{"hexValue":"30","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2101:13:23"},"loopExpression":{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2133:3:23","subExpression":{"id":3604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2133:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"2133:3:23"},"nodeType":"ForStatement","src":"2096:93:23"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"1840:53:23","text":" execute a sequence of transactions"},"functionSelector":"18dfb3c7","id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"1907:12:23","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"dest","nameLocation":"1939:4:23","nodeType":"VariableDeclaration","scope":3620,"src":"1920:23:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3576,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3577,"nodeType":"ArrayTypeName","src":"1920:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"func","nameLocation":"1962:4:23","nodeType":"VariableDeclaration","scope":3620,"src":"1945:21:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3579,"name":"bytes","nodeType":"ElementaryTypeName","src":"1945:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3580,"nodeType":"ArrayTypeName","src":"1945:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1919:48:23"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[],"src":"1977:0:23"},"scope":3791,"src":"1898:297:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3632,"nodeType":"Block","src":"2543:37:23","statements":[{"expression":{"arguments":[{"id":3629,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2565:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3628,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"2553:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3631,"nodeType":"ExpressionStatement","src":"2553:20:23"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"2201:273:23","text":" @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n the implementation by calling `upgradeTo()`"},"functionSelector":"c4d66de8","id":3633,"implemented":true,"kind":"function","modifiers":[{"id":3626,"kind":"modifierInvocation","modifierName":{"id":3625,"name":"initializer","nameLocations":["2531:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":415,"src":"2531:11:23"},"nodeType":"ModifierInvocation","src":"2531:11:23"}],"name":"initialize","nameLocation":"2488:10:23","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"anOwner","nameLocation":"2507:7:23","nodeType":"VariableDeclaration","scope":3633,"src":"2499:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2498:17:23"},"returnParameters":{"id":3627,"nodeType":"ParameterList","parameters":[],"src":"2543:0:23"},"scope":3791,"src":"2479:101:23","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3647,"nodeType":"Block","src":"2641:91:23","statements":[{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"2651:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3639,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"2659:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2651:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3641,"nodeType":"ExpressionStatement","src":"2651:15:23"},{"eventCall":{"arguments":[{"id":3643,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2706:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},{"id":3644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"2719:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3642,"name":"SimpleAccountInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"2681:24:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IEntryPoint_$3146_$_t_address_$returns$__$","typeString":"function (contract IEntryPoint,address)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2681:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3646,"nodeType":"EmitStatement","src":"2676:49:23"}]},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"_initialize","nameLocation":"2595:11:23","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"anOwner","nameLocation":"2615:7:23","nodeType":"VariableDeclaration","scope":3648,"src":"2607:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3634,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2606:17:23"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"2641:0:23"},"scope":3791,"src":"2586:146:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"2859:120:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3652,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2877:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2877:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3656,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[3516],"referencedDeclaration":3516,"src":"2899:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3146_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}],"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2891:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3654,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:23","typeDescriptions":{}}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2877:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2916:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2920:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2916:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3662,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"2930:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2916:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2877:58:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2937:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""},"value":"account: not Owner or EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""}],"id":3651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2869:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:103:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"ExpressionStatement","src":"2869:103:23"}]},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPointOrOwner","nameLocation":"2813:29:23","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[],"src":"2842:2:23"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[],"src":"2859:0:23"},"scope":3791,"src":"2804:175:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2612],"body":{"id":3699,"nodeType":"Block","src":"3176:199:23","statements":[{"assignments":[3682],"declarations":[{"constant":false,"id":3682,"mutability":"mutable","name":"hash","nameLocation":"3194:4:23","nodeType":"VariableDeclaration","scope":3699,"src":"3186:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3186:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3686,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3683,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"3201:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3212:22:23","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1591,"src":"3201:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3201:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3186:50:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"3269:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":3690,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"3291:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3298:9:23","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3296,"src":"3291:16:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3688,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"3278:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3283:7:23","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"3278:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3269:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"IfStatement","src":"3265:85:23","trueBody":{"expression":{"id":3694,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"3329:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3680,"id":3695,"nodeType":"Return","src":"3322:28:23"}},{"expression":{"hexValue":"30","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3367:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3680,"id":3698,"nodeType":"Return","src":"3360:8:23"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"2985:44:23","text":"implement template method of BaseAccount"},"id":3700,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3043:18:23","nodeType":"FunctionDefinition","overrides":{"id":3677,"nodeType":"OverrideSpecifier","overrides":[],"src":"3126:8:23"},"parameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"userOp","nameLocation":"3085:6:23","nodeType":"VariableDeclaration","scope":3700,"src":"3062:29:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3672,"nodeType":"UserDefinedTypeName","pathNode":{"id":3671,"name":"UserOperation","nameLocations":["3062:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":3297,"src":"3062:13:23"},"referencedDeclaration":3297,"src":"3062:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3297_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"userOpHash","nameLocation":"3101:10:23","nodeType":"VariableDeclaration","scope":3700,"src":"3093:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3061:51:23"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"validationData","nameLocation":"3160:14:23","nodeType":"VariableDeclaration","scope":3700,"src":"3152:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"3152:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3151:24:23"},"scope":3791,"src":"3034:341:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"3455:213:23","statements":[{"assignments":[3710,3712],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"success","nameLocation":"3471:7:23","nodeType":"VariableDeclaration","scope":3725,"src":"3466:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3709,"name":"bool","nodeType":"ElementaryTypeName","src":"3466:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"result","nameLocation":"3493:6:23","nodeType":"VariableDeclaration","scope":3725,"src":"3480:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3711,"name":"bytes","nodeType":"ElementaryTypeName","src":"3480:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3719,"initialValue":{"arguments":[{"id":3717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3530:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3713,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"3503:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3510:4:23","memberName":"call","nodeType":"MemberAccess","src":"3503:11:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"3523:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3503:26:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3503:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3465:70:23"},{"condition":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3549:8:23","subExpression":{"id":3720,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"3550:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"3545:117:23","trueBody":{"id":3723,"nodeType":"Block","src":"3559:103:23","statements":[{"AST":{"nodeType":"YulBlock","src":"3582:70:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3611:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3619:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3607:3:23"},"nodeType":"YulFunctionCall","src":"3607:15:23"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3630:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3624:5:23"},"nodeType":"YulFunctionCall","src":"3624:13:23"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3600:6:23"},"nodeType":"YulFunctionCall","src":"3600:38:23"},"nodeType":"YulExpressionStatement","src":"3600:38:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":3712,"isOffset":false,"isSlot":false,"src":"3611:6:23","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"3630:6:23","valueSize":1}],"id":3722,"nodeType":"InlineAssembly","src":"3573:79:23"}]}}]},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"_call","nameLocation":"3390:5:23","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"target","nameLocation":"3404:6:23","nodeType":"VariableDeclaration","scope":3726,"src":"3396:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"3396:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"value","nameLocation":"3420:5:23","nodeType":"VariableDeclaration","scope":3726,"src":"3412:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3412:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"data","nameLocation":"3440:4:23","nodeType":"VariableDeclaration","scope":3726,"src":"3427:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3705,"name":"bytes","nodeType":"ElementaryTypeName","src":"3427:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3395:50:23"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[],"src":"3455:0:23"},"scope":3791,"src":"3381:287:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3741,"nodeType":"Block","src":"3797:61:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":3737,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3845:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$3791","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$3791","typeString":"contract SimpleAccount"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3837:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3735,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:23","typeDescriptions":{}}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3732,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[3516],"referencedDeclaration":3516,"src":"3814:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3146_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3827:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"3814:22:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3731,"id":3740,"nodeType":"Return","src":"3807:44:23"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"3674:66:23","text":" check current account deposit in the entryPoint"},"functionSelector":"c399ec88","id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3754:10:23","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[],"src":"3764:2:23"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"3788:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3788:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3787:9:23"},"scope":3791,"src":"3745:113:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3758,"nodeType":"Block","src":"3978:73:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":3754,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4038:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$3791","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$3791","typeString":"contract SimpleAccount"}],"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4030:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3752,"name":"address","nodeType":"ElementaryTypeName","src":"4030:7:23","typeDescriptions":{}}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3746,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[3516],"referencedDeclaration":3516,"src":"3988:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3146_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:9:23","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":3245,"src":"3988:22:23","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4019:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4023:5:23","memberName":"value","nodeType":"MemberAccess","src":"4019:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3988:41:23","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3757,"nodeType":"ExpressionStatement","src":"3988:56:23"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"3864:72:23","text":" deposit more funds for this account in the entryPoint"},"functionSelector":"4a58db19","id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nameLocation":"3950:10:23","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"3960:2:23"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[],"src":"3978:0:23"},"scope":3791,"src":"3941:110:23","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3776,"nodeType":"Block","src":"4296:65:23","statements":[{"expression":{"arguments":[{"id":3772,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4330:15:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4347:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3769,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[3516],"referencedDeclaration":3516,"src":"4306:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$3146_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3146","typeString":"contract IEntryPoint"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4319:10:23","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":3269,"src":"4306:23:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3775,"nodeType":"ExpressionStatement","src":"4306:48:23"}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"4057:141:23","text":" withdraw value from the account's deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"},"functionSelector":"4d44560d","id":3777,"implemented":true,"kind":"function","modifiers":[{"id":3767,"kind":"modifierInvocation","modifierName":{"id":3766,"name":"onlyOwner","nameLocations":["4286:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3505,"src":"4286:9:23"},"nodeType":"ModifierInvocation","src":"4286:9:23"}],"name":"withdrawDepositTo","nameLocation":"4212:17:23","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4246:15:23","nodeType":"VariableDeclaration","scope":3777,"src":"4230:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3761,"name":"address","nodeType":"ElementaryTypeName","src":"4230:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"amount","nameLocation":"4271:6:23","nodeType":"VariableDeclaration","scope":3777,"src":"4263:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4263:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4229:49:23"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[],"src":"4296:0:23"},"scope":3791,"src":"4203:158:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[628],"body":{"id":3789,"nodeType":"Block","src":"4444:58:23","statements":[{"expression":{"components":[{"id":3783,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"4455:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4454:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3785,"nodeType":"ExpressionStatement","src":"4454:19:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3786,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"4483:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4483:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"ExpressionStatement","src":"4483:12:23"}]},"id":3790,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4376:17:23","nodeType":"FunctionDefinition","overrides":{"id":3781,"nodeType":"OverrideSpecifier","overrides":[],"src":"4435:8:23"},"parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"newImplementation","nameLocation":"4402:17:23","nodeType":"VariableDeclaration","scope":3790,"src":"4394:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3778,"name":"address","nodeType":"ElementaryTypeName","src":"4394:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4393:27:23"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[],"src":"4444:0:23"},"scope":3791,"src":"4367:135:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3792,"src":"633:3871:23","usedErrors":[]}],"src":"32:4473:23"},"id":23},"contracts/samples/callback/TokenCallbackHandler.sol":{"ast":{"absolutePath":"contracts/samples/callback/TokenCallbackHandler.sol","exportedSymbols":{"IERC1155Receiver":[670],"IERC165":[1646],"IERC721Receiver":[688],"IERC777Recipient":[708],"TokenCallbackHandler":[3915]},"id":3916,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3793,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3916,"sourceUnit":1647,"src":"97:65:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","file":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","id":3795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3916,"sourceUnit":709,"src":"163:67:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":3796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3916,"sourceUnit":689,"src":"231:66:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":3797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3916,"sourceUnit":671,"src":"298:68:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3799,"name":"IERC777Recipient","nameLocations":["519:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":708,"src":"519:16:24"},"id":3800,"nodeType":"InheritanceSpecifier","src":"519:16:24"},{"baseName":{"id":3801,"name":"IERC721Receiver","nameLocations":["537:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":688,"src":"537:15:24"},"id":3802,"nodeType":"InheritanceSpecifier","src":"537:15:24"},{"baseName":{"id":3803,"name":"IERC1155Receiver","nameLocations":["554:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":670,"src":"554:16:24"},"id":3804,"nodeType":"InheritanceSpecifier","src":"554:16:24"}],"canonicalName":"TokenCallbackHandler","contractDependencies":[],"contractKind":"contract","documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"368:117:24","text":" Token callback handler.\n   Handles supported tokens' callbacks, allowing account receiving these tokens."},"fullyImplemented":true,"id":3915,"linearizedBaseContracts":[3915,670,1646,688,708],"name":"TokenCallbackHandler","nameLocation":"495:20:24","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[707],"body":{"id":3820,"nodeType":"Block","src":"746:7:24","statements":[]},"functionSelector":"0023de29","id":3821,"implemented":true,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"586:14:24","nodeType":"FunctionDefinition","overrides":{"id":3818,"nodeType":"OverrideSpecifier","overrides":[],"src":"737:8:24"},"parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"610:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"627:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"644:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3809,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"661:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"678:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3813,"name":"bytes","nodeType":"ElementaryTypeName","src":"678:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"702:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"702:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"600:122:24"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[],"src":"746:0:24"},"scope":3915,"src":"577:176:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[687],"body":{"id":3839,"nodeType":"Block","src":"906:65:24","statements":[{"expression":{"expression":{"expression":{"id":3835,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"923:15:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$688_$","typeString":"type(contract IERC721Receiver)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"939:16:24","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":687,"src":"923:32:24","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"956:8:24","memberName":"selector","nodeType":"MemberAccess","src":"923:41:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3834,"id":3838,"nodeType":"Return","src":"916:48:24"}]},"functionSelector":"150b7a02","id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"768:16:24","nodeType":"FunctionDefinition","overrides":{"id":3831,"nodeType":"OverrideSpecifier","overrides":[],"src":"880:8:24"},"parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3822,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"811:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3824,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"828:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"845:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3828,"name":"bytes","nodeType":"ElementaryTypeName","src":"845:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"784:81:24"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"898:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3832,"name":"bytes4","nodeType":"ElementaryTypeName","src":"898:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"897:8:24"},"scope":3915,"src":"759:212:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[651],"body":{"id":3860,"nodeType":"Block","src":"1142:67:24","statements":[{"expression":{"expression":{"expression":{"id":3856,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1159:16:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$670_$","typeString":"type(contract IERC1155Receiver)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1176:17:24","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":651,"src":"1159:34:24","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1194:8:24","memberName":"selector","nodeType":"MemberAccess","src":"1159:43:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3855,"id":3859,"nodeType":"Return","src":"1152:50:24"}]},"functionSelector":"f23a6e61","id":3861,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"986:17:24","nodeType":"FunctionDefinition","overrides":{"id":3852,"nodeType":"OverrideSpecifier","overrides":[],"src":"1116:8:24"},"parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"1013:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"1030:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"1047:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"1064:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"1081:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3849,"name":"bytes","nodeType":"ElementaryTypeName","src":"1081:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:98:24"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"1134:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3853,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1134:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1133:8:24"},"scope":3915,"src":"977:232:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[669],"body":{"id":3883,"nodeType":"Block","src":"1407:72:24","statements":[{"expression":{"expression":{"expression":{"id":3879,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1424:16:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$670_$","typeString":"type(contract IERC1155Receiver)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1441:22:24","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":669,"src":"1424:39:24","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1464:8:24","memberName":"selector","nodeType":"MemberAccess","src":"1424:48:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3878,"id":3882,"nodeType":"Return","src":"1417:55:24"}]},"functionSelector":"bc197c81","id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"1224:22:24","nodeType":"FunctionDefinition","overrides":{"id":3875,"nodeType":"OverrideSpecifier","overrides":[],"src":"1381:8:24"},"parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1256:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3862,"name":"address","nodeType":"ElementaryTypeName","src":"1256:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1273:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3864,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1290:18:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ArrayTypeName","src":"1290:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1318:18:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3870,"nodeType":"ArrayTypeName","src":"1318:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1346:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"1346:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1246:120:24"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"1399:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3876,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1399:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1398:8:24"},"scope":3915,"src":"1215:264:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1645],"body":{"id":3913,"nodeType":"Block","src":"1578:205:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"1607:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3894,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1627:15:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$688_$","typeString":"type(contract IERC721Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$688_$","typeString":"type(contract IERC721Receiver)"}],"id":3893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1622:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Receiver_$688","typeString":"type(contract IERC721Receiver)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1644:11:24","memberName":"interfaceId","nodeType":"MemberAccess","src":"1622:33:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1607:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3898,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"1671:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3900,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1691:16:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$670_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$670_$","typeString":"type(contract IERC1155Receiver)"}],"id":3899,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1686:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1686:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$670","typeString":"type(contract IERC1155Receiver)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1709:11:24","memberName":"interfaceId","nodeType":"MemberAccess","src":"1686:34:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1671:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1607:113:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"1736:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3907,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1756:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1646_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1646_$","typeString":"type(contract IERC165)"}],"id":3906,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1751:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1646","typeString":"type(contract IERC165)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1765:11:24","memberName":"interfaceId","nodeType":"MemberAccess","src":"1751:25:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1736:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1607:169:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3891,"id":3912,"nodeType":"Return","src":"1588:188:24"}]},"functionSelector":"01ffc9a7","id":3914,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1494:17:24","nodeType":"FunctionDefinition","overrides":{"id":3888,"nodeType":"OverrideSpecifier","overrides":[],"src":"1554:8:24"},"parameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"interfaceId","nameLocation":"1519:11:24","nodeType":"VariableDeclaration","scope":3914,"src":"1512:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3885,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1512:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1511:20:24"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3914,"src":"1572:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3889,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:24"},"scope":3915,"src":"1485:298:24","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":3916,"src":"486:1299:24","usedErrors":[]}],"src":"32:1753:24"},"id":24}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x84cbc33838326f8a92fb9db5e27176f8eda5de8797cd6c838c11ef99c724accc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f93d36b8355575c884fb938ad43763207cc67f4abd791e528294ec603cbfbb\",\"dweb:/ipfs/QmTGVR5LR8BAtUMnAQ89DdyMaRv2A7kS4WoBuFEXaW5Lfw\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x84cbc33838326f8a92fb9db5e27176f8eda5de8797cd6c838c11ef99c724accc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f93d36b8355575c884fb938ad43763207cc67f4abd791e528294ec603cbfbb\",\"dweb:/ipfs/QmTGVR5LR8BAtUMnAQ89DdyMaRv2A7kS4WoBuFEXaW5Lfw\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x480bc688d336e5d8b30f6705af3c73468dc7a8c4e7edcfcacce955939b0786fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d71598df93feea24df0fc19ef2f0280382ace3adf5a5fb62bd62a9ec458c47c8\",\"dweb:/ipfs/QmbyY8TXQoRZ1GmNN2c9JVStMmkiJMfmMJ3wwEPLQcT3Hq\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x84cbc33838326f8a92fb9db5e27176f8eda5de8797cd6c838c11ef99c724accc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f93d36b8355575c884fb938ad43763207cc67f4abd791e528294ec603cbfbb\",\"dweb:/ipfs/QmTGVR5LR8BAtUMnAQ89DdyMaRv2A7kS4WoBuFEXaW5Lfw\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x480bc688d336e5d8b30f6705af3c73468dc7a8c4e7edcfcacce955939b0786fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d71598df93feea24df0fc19ef2f0280382ace3adf5a5fb62bd62a9ec458c47c8\",\"dweb:/ipfs/QmbyY8TXQoRZ1GmNN2c9JVStMmkiJMfmMJ3wwEPLQcT3Hq\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"IERC777Recipient":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220bc162de216ded30a440bb493f654772fed2b89190b4db38a7a2a6d9b06eb3be464736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC AND 0x2D 0xE2 AND 0xDE 0xD3 EXP PREVRANDAO SIGNEXTEND 0xB4 SWAP4 0xF6 SLOAD PUSH24 0x2FED2B89190B4DB38A7A2A6D9B06EB3BE464736F6C634300 ADDMOD SLT STOP CALLER ","sourceMap":"194:8964:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220bc162de216ded30a440bb493f654772fed2b89190b4db38a7a2a6d9b06eb3be464736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC AND 0x2D 0xE2 AND 0xDE 0xD3 EXP PREVRANDAO SIGNEXTEND 0xB4 SWAP4 0xF6 SLOAD PUSH24 0x2FED2B89190B4DB38A7A2A6D9B06EB3BE464736F6C634300 ADDMOD SLT STOP CALLER ","sourceMap":"194:8964:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205d527d506f4b7eeaaa4e4a5f496f3d0c74d701c734c2304372647c921434a54764736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D MSTORE PUSH30 0x506F4B7EEAAA4E4A5F496F3D0C74D701C734C2304372647C921434A54764 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"1279:1391:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212205d527d506f4b7eeaaa4e4a5f496f3d0c74d701c734c2304372647c921434a54764736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D MSTORE PUSH30 0x506F4B7EEAAA4E4A5F496F3D0C74D701C734C2304372647C921434A54764 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"1279:1391:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c82d0077f0af24c46ddf6d0d69ae7327a58378ed7283a58dcd174c3d75b1a79d64736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x2D STOP PUSH24 0xF0AF24C46DDF6D0D69AE7327A58378ED7283A58DCD174C3D PUSH22 0xB1A79D64736F6C634300081200330000000000000000 ","sourceMap":"188:2065:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c82d0077f0af24c46ddf6d0d69ae7327a58378ed7283a58dcd174c3d75b1a79d64736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x2D STOP PUSH24 0xF0AF24C46DDF6D0D69AE7327A58378ED7283A58DCD174C3D PUSH22 0xB1A79D64736F6C634300081200330000000000000000 ","sourceMap":"188:2065:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203ba6baafc95c2ec085f529a8134f33754e0e30d4258c45aa181d531995479e5764736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xA6 0xBA 0xAF 0xC9 0x5C 0x2E 0xC0 DUP6 CREATE2 0x29 0xA8 SGT 0x4F CALLER PUSH22 0x4E0E30D4258C45AA181D531995479E5764736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"369:8168:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203ba6baafc95c2ec085f529a8134f33754e0e30d4258c45aa181d531995479e5764736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xA6 0xBA 0xAF 0xC9 0x5C 0x2E 0xC0 DUP6 CREATE2 0x29 0xA8 SGT 0x4F CALLER PUSH22 0x4E0E30D4258C45AA181D531995479E5764736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"369:8168:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e73a67fc2023506407b4e59e17ca461d29a79e4285ae2b2280f076a567313f2364736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 GASPRICE PUSH8 0xFC2023506407B4E5 SWAP15 OR 0xCA CHAINID SAR 0x29 0xA7 SWAP15 TIMESTAMP DUP6 0xAE 0x2B 0x22 DUP1 CREATE PUSH23 0xA567313F2364736F6C6343000812003300000000000000 ","sourceMap":"202:12302:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e73a67fc2023506407b4e59e17ca461d29a79e4285ae2b2280f076a567313f2364736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 GASPRICE PUSH8 0xFC2023506407B4E5 SWAP15 OR 0xCA CHAINID SAR 0x29 0xA7 SWAP15 TIMESTAMP DUP6 0xAE 0x2B 0x22 DUP1 CREATE PUSH23 0xA567313F2364736F6C6343000812003300000000000000 ","sourceMap":"202:12302:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"contracts/core/BaseAccount.sol":{"BaseAccount":{"abi":[{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","getNonce()":"d087d288","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0xcc33bf670c4334f70c81ab92c03ded5ee4d28abedab06d458b2f234faceafb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://985ce85b1e80872680db607f62fcf4becf9e2a356e7ea04b0209e4d4bc99fc48\",\"dweb:/ipfs/QmPZddeadd6n963XEeYvcyFSv6c7LcYaQ7G2LfckS7Fa3v\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator. \\u96c6\\u7d04\\u3057\\u305f\\u7f72\\u540d\\u3092\\u691c\\u8a3c\\u3059\\u308b\\u3002 \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order. \"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order. \"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]}},\"version\":1}"}},"contracts/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200f441d50c5ad679529f2b01a41fe83d1edbccf7f678d200e7c8c215d1038030f64736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PREVRANDAO SAR POP 0xC5 0xAD PUSH8 0x9529F2B01A41FE83 0xD1 0xED 0xBC 0xCF PUSH32 0x678D200E7C8C215D1038030F64736F6C63430008120033000000000000000000 ","sourceMap":"1627:2115:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200f441d50c5ad679529f2b01a41fe83d1edbccf7f678d200e7c8c215d1038030f64736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PREVRANDAO SAR POP 0xC5 0xAD PUSH8 0x9529F2B01A41FE83 0xD1 0xED 0xBC 0xCF PUSH32 0x678D200E7C8C215D1038030F64736F6C63430008120033000000000000000000 ","sourceMap":"1627:2115:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]}},\"version\":1}"}},"contracts/samples/SimpleAccount.sol":{"SimpleAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"SimpleAccountInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"anOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60c0346200016857601f620021d738819003918201601f19168301916001600160401b038311848410176200016d578084926020946040528339810103126200016857516001600160a01b038116810362000168573060805260a05260005460ff8160081c16620001135760ff80821610620000d7575b604051612053908162000184823960805181818161059201528181610bb30152610d8f015260a0518181816107b0015281816108a80152818161098701528181610f04015281816110f70152818161133201528181611b500152611baf0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000076565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806223de291461013a57806301ffc9a714610135578063150b7a021461013057806318dfb3c71461012b5780633659cfe6146101265780633a871cdd146101215780634a58db191461011c5780634d44560d146101175780634f1ef2861461011257806352d1902d1461010d5780638da5cb5b14610108578063b0d691fe14610103578063b61d27f6146100fe578063bc197c81146100f9578063c399ec88146100f4578063c4d66de8146100ef578063d087d288146100ea5763f23a6e610361000e57611395565b6112b3565b611150565b61107f565b610fb8565b610f28565b610eb9565b610e64565b610d49565b610b32565b610929565b610866565b610749565b61053e565b6103cd565b61030b565b61021b565b610190565b73ffffffffffffffffffffffffffffffffffffffff81160361015d57565b600080fd5b9181601f8401121561015d5782359167ffffffffffffffff831161015d576020838186019501011161015d57565b3461015d5760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576101ca60043561013f565b6101d560243561013f565b6101e060443561013f565b67ffffffffffffffff60843581811161015d57610201903690600401610162565b505060a43590811161015d57610019903690600401610162565b3461015d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361015d57807f150b7a0200000000000000000000000000000000000000000000000000000000602092149081156102e1575b81156102b7575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102ac565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102a5565b3461015d5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5761034560043561013f565b61035060243561013f565b60643567ffffffffffffffff811161015d57610370903690600401610162565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b9181601f8401121561015d5782359167ffffffffffffffff831161015d576020808501948460051b01011161015d57565b3461015d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5767ffffffffffffffff6004803582811161015d5761041d903690830161039c565b602492919293843590811161015d57610439903690840161039c565b610441611b97565b8083036104e15760005b83811061045457005b61048561046a61046583878a6119d5565b6119ea565b61047f610478848688611a45565b3691610afb565b90611f6a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104b45760010161044b565b866011867f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b6064846013886020604051937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b3461015d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576004356105798161013f565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016916105bf83301415611426565b6105ee7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9382855416146114b1565b6105f6611f8a565b6040519061060382610a48565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561063d57505061001991506115e2565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa60009181610719575b50610706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610019936107149114611557565b6116ce565b61073b91925060203d8111610742575b6107338183610a80565b81019061153c565b903861067c565b503d610729565b3461015d577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60608136011261015d576004359067ffffffffffffffff821161015d5761016090823603011261015d5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610808576107e96108049160243590600401611c50565b6107f460443561196c565b6040519081529081906020820190565b0390f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109265773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681813b1561092657602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af1801561092157610915575080f35b61091e90610a2f565b80f35b61154b565b80fd5b3461015d57600060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610926576004356109668161013f565b61096e611f8a565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b156109fc576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af1801561092157610915575080f35b8280fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610a4357604052565b610a00565b6020810190811067ffffffffffffffff821117610a4357604052565b6060810190811067ffffffffffffffff821117610a4357604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a4357604052565b67ffffffffffffffff8111610a4357601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610b0782610ac1565b91610b156040519384610a80565b82948184528183011161015d578281602093846000960137010152565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57600435610b688161013f565b60243567ffffffffffffffff811161015d573660238201121561015d57610b99903690602481600401359101610afb565b9073ffffffffffffffffffffffffffffffffffffffff91827f00000000000000000000000000000000000000000000000000000000000000001692610be084301415611426565b610c0f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9482865416146114b1565b610c17611f8a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c4d57505061001991506115e2565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa60009181610d29575b50610d16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b61001993610d249114611557565b6117ad565b610d4291925060203d8111610742576107338183610a80565b9038610c8c565b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610de0576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57602073ffffffffffffffffffffffffffffffffffffffff60005460101c16604051908152f35b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461015d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57600435610f638161013f565b60443567ffffffffffffffff811161015d57600091610f92610f8a84933690600401610162565b610478611b97565b9060208251920190602435905af1610fa861180d565b9015610fb057005b602081519101fd5b3461015d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57610ff260043561013f565b610ffd60243561013f565b67ffffffffffffffff60443581811161015d5761101e90369060040161039c565b505060643581811161015d5761103890369060040161039c565b505060843590811161015d57611052903690600401610162565b50506040517fbc197c81000000000000000000000000000000000000000000000000000000008152602090f35b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa801561092157602091600091611133575b50604051908152f35b61114a9150823d8111610742576107338183610a80565b3861112a565b3461015d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5760043561118b8161013f565b6111ed600054916111b360ff8460081c1615809481956112a5575b8115611285575b50611a60565b826111e460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b61124f57611aeb565b6111f357005b6112207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b6112806101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b611aeb565b303b15915081611297575b50386111ad565b6001915060ff161438611290565b600160ff82161091506111a6565b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa80156109215761080491600091611377575b506040519081529081906020820190565b61138f915060203d8111610742576107338183610a80565b38611366565b3461015d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576113cf60043561013f565b6113da60243561013f565b60843567ffffffffffffffff811161015d576113fa903690600401610162565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b1561142d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b156114b857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b9081602091031261015d575190565b6040513d6000823e3d90fd5b1561155e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b803b1561164a5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b906116d8826115e2565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051158015906117a5575b611727575050565b6117a2916000806040519361173b85610a64565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af461179c61180d565b916118a2565b50565b50600061171f565b906117b7826115e2565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061180557611727575050565b50600161171f565b3d15611838573d9061181e82610ac1565b9161182c6040519384610a80565b82523d6000602084013e565b606090565b1561184457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156118c557508151156118b6575090565b6118c2903b151561183d565b90565b8251909150156118d85750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110611955575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201611914565b806119745750565b600080808093337ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1506117a261180d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156119e55760051b0190565b6119a6565b356118c28161013f565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561015d570180359067ffffffffffffffff821161015d5760200191813603831361015d57565b908210156119e557611a5c9160051b8101906119f4565b9091565b15611a6757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b169116178060005573ffffffffffffffffffffffffffffffffffffffff809160101c16907f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de600080a3565b73ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000163314908115611c3f575b5015611be157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c16331438611bd9565b9060405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152611c8e81610a64565b519020611cd5611ccd73ffffffffffffffffffffffffffffffffffffffff92611cc76104788560005460101c16966101408101906119f4565b90611ea7565b919091611d1e565b1603611ce057600090565b600190565b60051115611cef57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611d2781611ce5565b80611d2f5750565b611d3881611ce5565b60018103611d9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611da881611ce5565b60028103611e0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611e1b600392611ce5565b14611e2257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b906041815114600014611ed157611a5c916020820151906060604084015193015160001a90611edb565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611f5e5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561092157815173ffffffffffffffffffffffffffffffffffffffff811615611f58579190565b50600190565b50505050600090600390565b600091829182602083519301915af1611f8161180d565b9015610fb05750565b73ffffffffffffffffffffffffffffffffffffffff60005460101c1633148015612014575b15611fb657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b50303314611faf56fea26469706673582212206ca5e7a9a48e8442fbdf39bedac0512e9ced272397ae3cb3b5e3d2a69c3e42a664736f6c63430008120033","opcodes":"PUSH1 0xC0 CALLVALUE PUSH3 0x168 JUMPI PUSH1 0x1F PUSH3 0x21D7 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x16D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x168 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x168 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH3 0x113 JUMPI PUSH1 0xFF DUP1 DUP3 AND LT PUSH3 0xD7 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2053 SWAP1 DUP2 PUSH3 0x184 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x592 ADD MSTORE DUP2 DUP2 PUSH2 0xBB3 ADD MSTORE PUSH2 0xD8F ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x7B0 ADD MSTORE DUP2 DUP2 PUSH2 0x8A8 ADD MSTORE DUP2 DUP2 PUSH2 0x987 ADD MSTORE DUP2 DUP2 PUSH2 0xF04 ADD MSTORE DUP2 DUP2 PUSH2 0x10F7 ADD MSTORE DUP2 DUP2 PUSH2 0x1332 ADD MSTORE DUP2 DUP2 PUSH2 0x1B50 ADD MSTORE PUSH2 0x1BAF ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH3 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0xEA JUMPI PUSH4 0xF23A6E61 SUB PUSH2 0xE JUMPI PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x107F JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x15D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x15D JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x15D JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x15D JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x1CA PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x44 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x201 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x19 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x15D JUMPI DUP1 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x2E1 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2B7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x2AC JUMP JUMPDEST PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x345 PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x350 PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x370 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x15D JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x15D JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x15D JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x41D SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x24 SWAP3 SWAP2 SWAP3 SWAP4 DUP5 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x439 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x39C JUMP JUMPDEST PUSH2 0x441 PUSH2 0x1B97 JUMP JUMPDEST DUP1 DUP4 SUB PUSH2 0x4E1 JUMPI PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x454 JUMPI STOP JUMPDEST PUSH2 0x485 PUSH2 0x46A PUSH2 0x465 DUP4 DUP8 DUP11 PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0x19EA JUMP JUMPDEST PUSH2 0x47F PUSH2 0x478 DUP5 DUP7 DUP9 PUSH2 0x1A45 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0xAFB JUMP JUMPDEST SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x4B4 JUMPI PUSH1 0x1 ADD PUSH2 0x44B JUMP JUMPDEST DUP7 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH1 0x13 DUP9 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x579 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND SWAP2 PUSH2 0x5BF DUP4 ADDRESS EQ ISZERO PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x5EE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x603 DUP3 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x63D JUMPI POP POP PUSH2 0x19 SWAP2 POP PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x719 JUMPI JUMPDEST POP PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x19 SWAP4 PUSH2 0x714 SWAP2 EQ PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x73B SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI JUMPDEST PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x153C JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x67C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x729 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 DUP2 CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x15D JUMPI PUSH2 0x160 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x15D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x808 JUMPI PUSH2 0x7E9 PUSH2 0x804 SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x7F4 PUSH1 0x44 CALLDATALOAD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x926 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 DUP2 EXTCODESIZE ISZERO PUSH2 0x926 JUMPI PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH2 0x915 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x91E SWAP1 PUSH2 0xA2F JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH2 0x154B JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x926 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x966 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH2 0x96E PUSH2 0x1F8A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FC JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH2 0x915 JUMPI POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA43 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xB07 DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 PUSH2 0xB15 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xA80 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x15D JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB68 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x15D JUMPI PUSH2 0xB99 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xAFB JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH32 0x0 AND SWAP3 PUSH2 0xBE0 DUP5 ADDRESS EQ ISZERO PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xC0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0xC17 PUSH2 0x1F8A JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC4D JUMPI POP POP PUSH2 0x19 SWAP2 POP PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xD29 JUMPI JUMPDEST POP PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x19 SWAP4 PUSH2 0xD24 SWAP2 EQ PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x17AD JUMP JUMPDEST PUSH2 0xD42 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC8C JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF63 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI PUSH1 0x0 SWAP2 PUSH2 0xF92 PUSH2 0xF8A DUP5 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST PUSH2 0x478 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 MLOAD SWAP3 ADD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 GAS CALL PUSH2 0xFA8 PUSH2 0x180D JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xFB0 JUMPI STOP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0xFF2 PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0xFFD PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x101E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x39C JUMP JUMPDEST POP POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x1038 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x39C JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x1052 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1133 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x114A SWAP2 POP DUP3 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST CODESIZE PUSH2 0x112A JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x118B DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH2 0x11ED PUSH1 0x0 SLOAD SWAP2 PUSH2 0x11B3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO DUP1 SWAP5 DUP2 SWAP6 PUSH2 0x12A5 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1285 JUMPI JUMPDEST POP PUSH2 0x1A60 JUMP JUMPDEST DUP3 PUSH2 0x11E4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x124F JUMPI PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x11F3 JUMPI STOP JUMPDEST PUSH2 0x1220 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH2 0x1280 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1AEB JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x1297 JUMPI JUMPDEST POP CODESIZE PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ CODESIZE PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x11A6 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH2 0x804 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1377 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x138F SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST CODESIZE PUSH2 0x1366 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x13CF PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x13FA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST ISZERO PUSH2 0x142D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x14B8 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x15D JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x155E JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x164A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x16D8 DUP3 PUSH2 0x15E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17A5 JUMPI JUMPDEST PUSH2 0x1727 JUMPI POP POP JUMP JUMPDEST PUSH2 0x17A2 SWAP2 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x173B DUP6 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x27 DUP6 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP7 ADD MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x179C PUSH2 0x180D JUMP JUMPDEST SWAP2 PUSH2 0x18A2 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x171F JUMP JUMPDEST SWAP1 PUSH2 0x17B7 DUP3 PUSH2 0x15E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1805 JUMPI PUSH2 0x1727 JUMPI POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x171F JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1838 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x181E DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 PUSH2 0x182C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xA80 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1844 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x18C5 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x18B6 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x18C2 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x183D JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x18D8 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1955 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x1914 JUMP JUMPDEST DUP1 PUSH2 0x1974 JUMPI POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALL POP PUSH2 0x17A2 PUSH2 0x180D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST CALLDATALOAD PUSH2 0x18C2 DUP2 PUSH2 0x13F JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x15D JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x15D JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x15D JUMPI JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x19E5 JUMPI PUSH2 0x1A5C SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST ISZERO PUSH2 0x1A67 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0x0 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP2 AND OR DUP1 PUSH1 0x0 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x1C3F JUMPI JUMPDEST POP ISZERO PUSH2 0x1BE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND CALLER EQ CODESIZE PUSH2 0x1BD9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP4 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x3C DUP2 MSTORE PUSH2 0x1C8E DUP2 PUSH2 0xA64 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1CD5 PUSH2 0x1CCD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1CC7 PUSH2 0x478 DUP6 PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND SWAP7 PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1D1E JUMP JUMPDEST AND SUB PUSH2 0x1CE0 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x1CEF JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D27 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST DUP1 PUSH2 0x1D2F JUMPI POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1E0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1E1B PUSH1 0x3 SWAP3 PUSH2 0x1CE5 JUMP JUMPDEST EQ PUSH2 0x1E22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1ED1 JUMPI PUSH2 0x1A5C SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1EDB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1F5E JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x921 JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1F58 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL PUSH2 0x1F81 PUSH2 0x180D JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xFB0 JUMPI POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND CALLER EQ DUP1 ISZERO PUSH2 0x2014 JUMPI JUMPDEST ISZERO PUSH2 0x1FB6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS CALLER EQ PUSH2 0x1FAF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xA5E7A9A48E8442FBDF39BEDAC0 MLOAD 0x2E SWAP13 0xED 0x27 0x23 SWAP8 0xAE EXTCODECOPY 0xB3 0xB5 0xE3 0xD2 0xA6 SWAP13 RETURNDATACOPY TIMESTAMP 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"633:3871:23:-:0;;;;;;;;;;;;;-1:-1:-1;;633:3871:23;;;;-1:-1:-1;;;;;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;633:3871:23;;;;;;1088:4:5;1080:13;;633:3871:23;1274:26;-1:-1:-1;633:3871:23;;;;;;;;;;;;6045:30:4;6041:138;;-1:-1:-1;633:3871:23;;;;;;;;1080:13:5;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6041:138:4;633:3871:23;;;;;;-1:-1:-1;633:3871:23;6140:28:4;633:3871:23;;;;;;6140:28:4;6041:138;;;633:3871:23;;;-1:-1:-1;;;633:3871:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;633:3871:23;;;;;;;;-1:-1:-1;633:3871:23;;;;;;-1:-1:-1;633:3871:23;;;;;-1:-1:-1;633:3871:23"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_address_dyn_calldata":{"entryPoint":924,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_bytes":{"entryPoint":2811,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes32_fromMemory":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":354,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_520d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8e8e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_bytes_calldata":{"entryPoint":6644,"id":null,"parameterSlots":2,"returnSlots":2},"array_allocation_size_bytes":{"entryPoint":2753,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":6613,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":6725,"id":null,"parameterSlots":3,"returnSlots":2},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_addDeposit":{"entryPoint":2150,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_entryPoint":{"entryPoint":3769,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_execute":{"entryPoint":3880,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeBatch":{"entryPoint":973,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDeposit":{"entryPoint":4223,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getNonce":{"entryPoint":4787,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":4432,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_onERC1155BatchReceived":{"entryPoint":4024,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_onERC1155Received":{"entryPoint":5013,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_onERC721Received":{"entryPoint":779,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":3684,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proxiableUUID":{"entryPoint":3401,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":539,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokensReceived":{"entryPoint":400,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeTo":{"entryPoint":1342,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeToAndCall":{"entryPoint":2866,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_validateUserOp":{"entryPoint":1865,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdrawDepositTo":{"entryPoint":2345,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":6157,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_10843":{"entryPoint":2632,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_10848":{"entryPoint":2660,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_7607":{"entryPoint":2607,"id":null,"parameterSlots":1,"returnSlots":0},"fun_call":{"entryPoint":8042,"id":3726,"parameterSlots":2,"returnSlots":0},"fun_initialize":{"entryPoint":6891,"id":3648,"parameterSlots":1,"returnSlots":0},"fun_onlyOwner":{"entryPoint":8074,"id":3554,"parameterSlots":0,"returnSlots":0},"fun_payPrefund":{"entryPoint":6508,"id":2652,"parameterSlots":1,"returnSlots":0},"fun_requireFromEntryPointOrOwner":{"entryPoint":7063,"id":3669,"parameterSlots":0,"returnSlots":0},"fun_setImplementation":{"entryPoint":5602,"id":84,"parameterSlots":1,"returnSlots":0},"fun_throwError":{"entryPoint":7454,"id":1327,"parameterSlots":1,"returnSlots":0},"fun_tryRecover":{"entryPoint":7899,"id":1541,"parameterSlots":4,"returnSlots":2},"fun_tryRecover_1373":{"entryPoint":7847,"id":1373,"parameterSlots":2,"returnSlots":2},"fun_upgradeToAndCall":{"entryPoint":6061,"id":129,"parameterSlots":2,"returnSlots":0},"fun_upgradeToAndCall_10844":{"entryPoint":5838,"id":129,"parameterSlots":2,"returnSlots":0},"fun_validateSignature":{"entryPoint":7248,"id":3700,"parameterSlots":2,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":6306,"id":993,"parameterSlots":4,"returnSlots":1},"panic_error_0x32":{"entryPoint":6566,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2560,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_address":{"entryPoint":6634,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_36e1":{"entryPoint":5158,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":5297,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_76b6":{"entryPoint":5463,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7a2a":{"entryPoint":6752,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc2e":{"entryPoint":6205,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":5451,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_7615":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":7397,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"529":[{"length":32,"start":1426},{"length":32,"start":2995},{"length":32,"start":3471}],"3491":[{"length":32,"start":1968},{"length":32,"start":2216},{"length":32,"start":2439},{"length":32,"start":3844},{"length":32,"start":4343},{"length":32,"start":4914},{"length":32,"start":6992},{"length":32,"start":7087}]},"linkReferences":{},"object":"6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806223de291461013a57806301ffc9a714610135578063150b7a021461013057806318dfb3c71461012b5780633659cfe6146101265780633a871cdd146101215780634a58db191461011c5780634d44560d146101175780634f1ef2861461011257806352d1902d1461010d5780638da5cb5b14610108578063b0d691fe14610103578063b61d27f6146100fe578063bc197c81146100f9578063c399ec88146100f4578063c4d66de8146100ef578063d087d288146100ea5763f23a6e610361000e57611395565b6112b3565b611150565b61107f565b610fb8565b610f28565b610eb9565b610e64565b610d49565b610b32565b610929565b610866565b610749565b61053e565b6103cd565b61030b565b61021b565b610190565b73ffffffffffffffffffffffffffffffffffffffff81160361015d57565b600080fd5b9181601f8401121561015d5782359167ffffffffffffffff831161015d576020838186019501011161015d57565b3461015d5760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576101ca60043561013f565b6101d560243561013f565b6101e060443561013f565b67ffffffffffffffff60843581811161015d57610201903690600401610162565b505060a43590811161015d57610019903690600401610162565b3461015d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361015d57807f150b7a0200000000000000000000000000000000000000000000000000000000602092149081156102e1575b81156102b7575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102ac565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102a5565b3461015d5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5761034560043561013f565b61035060243561013f565b60643567ffffffffffffffff811161015d57610370903690600401610162565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b9181601f8401121561015d5782359167ffffffffffffffff831161015d576020808501948460051b01011161015d57565b3461015d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5767ffffffffffffffff6004803582811161015d5761041d903690830161039c565b602492919293843590811161015d57610439903690840161039c565b610441611b97565b8083036104e15760005b83811061045457005b61048561046a61046583878a6119d5565b6119ea565b61047f610478848688611a45565b3691610afb565b90611f6a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104b45760010161044b565b866011867f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b6064846013886020604051937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b3461015d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576004356105798161013f565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016916105bf83301415611426565b6105ee7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9382855416146114b1565b6105f6611f8a565b6040519061060382610a48565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561063d57505061001991506115e2565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa60009181610719575b50610706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610019936107149114611557565b6116ce565b61073b91925060203d8111610742575b6107338183610a80565b81019061153c565b903861067c565b503d610729565b3461015d577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60608136011261015d576004359067ffffffffffffffff821161015d5761016090823603011261015d5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610808576107e96108049160243590600401611c50565b6107f460443561196c565b6040519081529081906020820190565b0390f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109265773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681813b1561092657602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af1801561092157610915575080f35b61091e90610a2f565b80f35b61154b565b80fd5b3461015d57600060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610926576004356109668161013f565b61096e611f8a565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b156109fc576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af1801561092157610915575080f35b8280fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610a4357604052565b610a00565b6020810190811067ffffffffffffffff821117610a4357604052565b6060810190811067ffffffffffffffff821117610a4357604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a4357604052565b67ffffffffffffffff8111610a4357601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610b0782610ac1565b91610b156040519384610a80565b82948184528183011161015d578281602093846000960137010152565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57600435610b688161013f565b60243567ffffffffffffffff811161015d573660238201121561015d57610b99903690602481600401359101610afb565b9073ffffffffffffffffffffffffffffffffffffffff91827f00000000000000000000000000000000000000000000000000000000000000001692610be084301415611426565b610c0f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9482865416146114b1565b610c17611f8a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c4d57505061001991506115e2565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa60009181610d29575b50610d16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b61001993610d249114611557565b6117ad565b610d4291925060203d8111610742576107338183610a80565b9038610c8c565b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610de0576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57602073ffffffffffffffffffffffffffffffffffffffff60005460101c16604051908152f35b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461015d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57600435610f638161013f565b60443567ffffffffffffffff811161015d57600091610f92610f8a84933690600401610162565b610478611b97565b9060208251920190602435905af1610fa861180d565b9015610fb057005b602081519101fd5b3461015d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d57610ff260043561013f565b610ffd60243561013f565b67ffffffffffffffff60443581811161015d5761101e90369060040161039c565b505060643581811161015d5761103890369060040161039c565b505060843590811161015d57611052903690600401610162565b50506040517fbc197c81000000000000000000000000000000000000000000000000000000008152602090f35b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa801561092157602091600091611133575b50604051908152f35b61114a9150823d8111610742576107338183610a80565b3861112a565b3461015d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d5760043561118b8161013f565b6111ed600054916111b360ff8460081c1615809481956112a5575b8115611285575b50611a60565b826111e460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b61124f57611aeb565b6111f357005b6112207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b6112806101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b611aeb565b303b15915081611297575b50386111ad565b6001915060ff161438611290565b600160ff82161091506111a6565b3461015d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa80156109215761080491600091611377575b506040519081529081906020820190565b61138f915060203d8111610742576107338183610a80565b38611366565b3461015d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015d576113cf60043561013f565b6113da60243561013f565b60843567ffffffffffffffff811161015d576113fa903690600401610162565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b1561142d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b156114b857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b9081602091031261015d575190565b6040513d6000823e3d90fd5b1561155e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b803b1561164a5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b906116d8826115e2565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051158015906117a5575b611727575050565b6117a2916000806040519361173b85610a64565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af461179c61180d565b916118a2565b50565b50600061171f565b906117b7826115e2565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061180557611727575050565b50600161171f565b3d15611838573d9061181e82610ac1565b9161182c6040519384610a80565b82523d6000602084013e565b606090565b1561184457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156118c557508151156118b6575090565b6118c2903b151561183d565b90565b8251909150156118d85750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110611955575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201611914565b806119745750565b600080808093337ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1506117a261180d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156119e55760051b0190565b6119a6565b356118c28161013f565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561015d570180359067ffffffffffffffff821161015d5760200191813603831361015d57565b908210156119e557611a5c9160051b8101906119f4565b9091565b15611a6757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b169116178060005573ffffffffffffffffffffffffffffffffffffffff809160101c16907f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de600080a3565b73ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000163314908115611c3f575b5015611be157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c16331438611bd9565b9060405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152611c8e81610a64565b519020611cd5611ccd73ffffffffffffffffffffffffffffffffffffffff92611cc76104788560005460101c16966101408101906119f4565b90611ea7565b919091611d1e565b1603611ce057600090565b600190565b60051115611cef57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611d2781611ce5565b80611d2f5750565b611d3881611ce5565b60018103611d9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611da881611ce5565b60028103611e0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611e1b600392611ce5565b14611e2257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b906041815114600014611ed157611a5c916020820151906060604084015193015160001a90611edb565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611f5e5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561092157815173ffffffffffffffffffffffffffffffffffffffff811615611f58579190565b50600190565b50505050600090600390565b600091829182602083519301915af1611f8161180d565b9015610fb05750565b73ffffffffffffffffffffffffffffffffffffffff60005460101c1633148015612014575b15611fb657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b50303314611faf56fea26469706673582212206ca5e7a9a48e8442fbdf39bedac0512e9ced272397ae3cb3b5e3d2a69c3e42a664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0xEA JUMPI PUSH4 0xF23A6E61 SUB PUSH2 0xE JUMPI PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x107F JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x15D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x15D JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x15D JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x15D JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x1CA PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x44 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x201 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x19 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x15D JUMPI DUP1 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x2E1 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2B7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x2AC JUMP JUMPDEST PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x345 PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x350 PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x370 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x15D JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x15D JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x15D JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x41D SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x24 SWAP3 SWAP2 SWAP3 SWAP4 DUP5 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x439 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x39C JUMP JUMPDEST PUSH2 0x441 PUSH2 0x1B97 JUMP JUMPDEST DUP1 DUP4 SUB PUSH2 0x4E1 JUMPI PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x454 JUMPI STOP JUMPDEST PUSH2 0x485 PUSH2 0x46A PUSH2 0x465 DUP4 DUP8 DUP11 PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0x19EA JUMP JUMPDEST PUSH2 0x47F PUSH2 0x478 DUP5 DUP7 DUP9 PUSH2 0x1A45 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0xAFB JUMP JUMPDEST SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x4B4 JUMPI PUSH1 0x1 ADD PUSH2 0x44B JUMP JUMPDEST DUP7 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH1 0x13 DUP9 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x579 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND SWAP2 PUSH2 0x5BF DUP4 ADDRESS EQ ISZERO PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x5EE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x603 DUP3 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x63D JUMPI POP POP PUSH2 0x19 SWAP2 POP PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x719 JUMPI JUMPDEST POP PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x19 SWAP4 PUSH2 0x714 SWAP2 EQ PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x73B SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI JUMPDEST PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x153C JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x67C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x729 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 DUP2 CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x15D JUMPI PUSH2 0x160 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x15D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x808 JUMPI PUSH2 0x7E9 PUSH2 0x804 SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x7F4 PUSH1 0x44 CALLDATALOAD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x926 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 DUP2 EXTCODESIZE ISZERO PUSH2 0x926 JUMPI PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xB760FAF900000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH2 0x915 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x91E SWAP1 PUSH2 0xA2F JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH2 0x154B JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x926 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x966 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH2 0x96E PUSH2 0x1F8A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FC JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x205C287800000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH2 0x915 JUMPI POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA43 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xB07 DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 PUSH2 0xB15 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xA80 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x15D JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB68 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x15D JUMPI PUSH2 0xB99 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xAFB JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH32 0x0 AND SWAP3 PUSH2 0xBE0 DUP5 ADDRESS EQ ISZERO PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xC0F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0xC17 PUSH2 0x1F8A JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC4D JUMPI POP POP PUSH2 0x19 SWAP2 POP PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xD29 JUMPI JUMPDEST POP PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x19 SWAP4 PUSH2 0xD24 SWAP2 EQ PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x17AD JUMP JUMPDEST PUSH2 0xD42 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC8C JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF63 DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI PUSH1 0x0 SWAP2 PUSH2 0xF92 PUSH2 0xF8A DUP5 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST PUSH2 0x478 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 MLOAD SWAP3 ADD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 GAS CALL PUSH2 0xFA8 PUSH2 0x180D JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xFB0 JUMPI STOP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0xFF2 PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0xFFD PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x101E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x39C JUMP JUMPDEST POP POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x1038 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x39C JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x1052 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1133 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x114A SWAP2 POP DUP3 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST CODESIZE PUSH2 0x112A JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x118B DUP2 PUSH2 0x13F JUMP JUMPDEST PUSH2 0x11ED PUSH1 0x0 SLOAD SWAP2 PUSH2 0x11B3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO DUP1 SWAP5 DUP2 SWAP6 PUSH2 0x12A5 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1285 JUMPI JUMPDEST POP PUSH2 0x1A60 JUMP JUMPDEST DUP3 PUSH2 0x11E4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x124F JUMPI PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x11F3 JUMPI STOP JUMPDEST PUSH2 0x1220 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH2 0x1280 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1AEB JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x1297 JUMPI JUMPDEST POP CODESIZE PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ CODESIZE PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x11A6 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0x35567E1A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x921 JUMPI PUSH2 0x804 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1377 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x138F SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x742 JUMPI PUSH2 0x733 DUP2 DUP4 PUSH2 0xA80 JUMP JUMPDEST CODESIZE PUSH2 0x1366 JUMP JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x13CF PUSH1 0x4 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x24 CALLDATALOAD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15D JUMPI PUSH2 0x13FA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x162 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST ISZERO PUSH2 0x142D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x14B8 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x15D JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x155E JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x164A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x16D8 DUP3 PUSH2 0x15E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17A5 JUMPI JUMPDEST PUSH2 0x1727 JUMPI POP POP JUMP JUMPDEST PUSH2 0x17A2 SWAP2 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x173B DUP6 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x27 DUP6 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP7 ADD MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x179C PUSH2 0x180D JUMP JUMPDEST SWAP2 PUSH2 0x18A2 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x171F JUMP JUMPDEST SWAP1 PUSH2 0x17B7 DUP3 PUSH2 0x15E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1805 JUMPI PUSH2 0x1727 JUMPI POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x171F JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1838 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x181E DUP3 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 PUSH2 0x182C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xA80 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1844 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x18C5 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x18B6 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x18C2 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x183D JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x18D8 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1955 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x1914 JUMP JUMPDEST DUP1 PUSH2 0x1974 JUMPI POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALL POP PUSH2 0x17A2 PUSH2 0x180D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST CALLDATALOAD PUSH2 0x18C2 DUP2 PUSH2 0x13F JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x15D JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x15D JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x15D JUMPI JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x19E5 JUMPI PUSH2 0x1A5C SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST ISZERO PUSH2 0x1A67 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0x0 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP2 AND OR DUP1 PUSH1 0x0 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x1C3F JUMPI JUMPDEST POP ISZERO PUSH2 0x1BE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND CALLER EQ CODESIZE PUSH2 0x1BD9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP4 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x3C DUP2 MSTORE PUSH2 0x1C8E DUP2 PUSH2 0xA64 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1CD5 PUSH2 0x1CCD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1CC7 PUSH2 0x478 DUP6 PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND SWAP7 PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1D1E JUMP JUMPDEST AND SUB PUSH2 0x1CE0 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x1CEF JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D27 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST DUP1 PUSH2 0x1D2F JUMPI POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1E0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1E1B PUSH1 0x3 SWAP3 PUSH2 0x1CE5 JUMP JUMPDEST EQ PUSH2 0x1E22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1ED1 JUMPI PUSH2 0x1A5C SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1EDB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1F5E JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x921 JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1F58 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL PUSH2 0x1F81 PUSH2 0x180D JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xFB0 JUMPI POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND CALLER EQ DUP1 ISZERO PUSH2 0x2014 JUMPI JUMPDEST ISZERO PUSH2 0x1FB6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS CALLER EQ PUSH2 0x1FAF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xA5E7A9A48E8442FBDF39BEDAC0 MLOAD 0x2E SWAP13 0xED 0x27 0x23 SWAP8 0xAE EXTCODECOPY 0xB3 0xB5 0xE3 0xD2 0xA6 SWAP13 RETURNDATACOPY TIMESTAMP 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"633:3871:23:-:0;;;;;;;;;-1:-1:-1;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1607:48:24;1622:33;633:3871:23;1607:48:24;;:113;;;;;633:3871:23;1607:169:24;;;;633:3871:23;;;;;;;;;;1607:169:24;1751:25;1736:40;;;1607:169;;;:113;1686:34;1671:49;;;-1:-1:-1;1607:113:24;;633:3871:23;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;923:41:24;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;1898:297;;:::i;:::-;2036:26;;;633:3871;;-1:-1:-1;2116:15:23;;;;;;633:3871;2133:3;2152:26;2158:7;;;;;;:::i;:::-;;:::i;:::-;633:3871;2170:7;;;;;:::i;:::-;633:3871;;;:::i;:::-;2152:26;;:::i;:::-;633:3871;;;;;;;2101:13;;633:3871;;;;;-1:-1:-1;633:3871:23;;-1:-1:-1;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1654:6:5;;;633:3871:23;1645:4:5;1629:80;1645:4;;1637:23;;1629:80;:::i;:::-;1719:87;1082:66:2;633:3871:23;;;;;1727:30:5;1719:87;:::i;:::-;4454:19:23;;:::i;:::-;633:3871;;;;;;:::i;:::-;-1:-1:-1;633:3871:23;;741:66:2;;;;;;;3105:17;;;;;;:::i;3018:504::-;633:3871:23;;;;;;;;3158:52:2;;;;741:66;3158:52;;633:3871:23;;3158:52:2;;-1:-1:-1;;3158:52:2;;;3018:504;-1:-1:-1;3154:291:2;;633:3871:23;;3374:56:2;;;741:66;633:3871:23;3374:56:2;;741:66;;;;;633:3871:23;741:66:2;633:3871:23;;;741:66:2;;;;;;;;3374:56;3154:291;3501:9;3260:28;3252:82;3260:28;;3252:82;:::i;:::-;3501:9;:::i;3158:52::-;;;;;633:3871:23;3158:52:2;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:11;633:3871;1962:10:15;:35;633:3871:23;;1682:38:15;633:3871:23;;;;;;;1682:38:15;:::i;:::-;1780:19;633:3871:23;;1780:19:15;:::i;:::-;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:11;633:3871;3988:56;;;;;;633:3871;;;;3988:56;;;;741:66:2;3988:56:23;;4038:4;633:3871;3988:56;;633:3871;4019:9;3988:56;;;;;;;;;633:3871;;;3988:56;;;;:::i;:::-;633:3871;;3988:56;;:::i;:::-;633:3871;;;;;;-1:-1:-1;633:3871:23;;;;;;;;;;;;:::i;:::-;928:61;;:::i;:::-;633:3871;;1117:11;;633:3871;4306:48;;;;;;633:3871;;;;;4306:48;;;;;741:66:2;4306:48:23;;633:3871;;4306:48;;633:3871;;;;;;;4306:48;;;;;;;;633:3871;;;4306:48;633:3871;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;633:3871:23;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1654:6:5;;;633:3871:23;1645:4:5;1629:80;1645:4;;1637:23;;1629:80;:::i;:::-;1719:87;1082:66:2;633:3871:23;;;;;1727:30:5;1719:87;:::i;:::-;4454:19:23;;:::i;:::-;741:66:2;;;;;;;3105:17;;;;;;:::i;3018:504::-;3158:52;633:3871:23;;;;;;;3158:52:2;;;;741:66;3158:52;;633:3871:23;;3158:52:2;;;;;;;3018:504;-1:-1:-1;3154:291:2;;633:3871:23;;3374:56:2;;;741:66;633:3871:23;3374:56:2;;741:66;;;;;633:3871:23;741:66:2;633:3871:23;;;741:66:2;;;;;;;;3374:56;3154:291;3501:9;3260:28;3252:82;3260:28;;3252:82;:::i;:::-;3501:9;:::i;3158:52::-;;;;;;;;;;;;;;;:::i;:::-;;;;;633:3871:23;;;;;;;;;;;;2089:6:5;633:3871:23;2080:4:5;2072:23;633:3871:23;;;;1082:66:2;633:3871:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:11;633:3871;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3503:32;633:3871;;;;;;;;;;:::i;:::-;1676:158;;:::i;633:3871::-;3503:32;;;;;;633:3871;;;3503:32;;;;;:::i;:::-;3549:8;;3545:117;;633:3871;3545:117;3503:32;3573:79;;;;;633:3871;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;633:3871:23;;1424:48:24;633:3871:23;;;;;;;;;;;;;;;;;;741:66:2;3814:37:23;;3845:4;633:3871;3814:37;;633:3871;3814:37;1117:11;633:3871;1117:11;633:3871;1117:11;633:3871;3814:37;;;;;;;;633:3871;3814:37;;;633:3871;;;;;;;;3814:37;;;;;;;;;;;;;;:::i;:::-;;;;633:3871;;;;;;;;;;;;;;;;:::i;:::-;2565:7;-1:-1:-1;633:3871:23;;3303:190:4;741:66:2;633:3871:23;;;741:66:2;3279:14:4;3325:34;;;;;;633:3871:23;3324:97:4;;;;633:3871:23;3303:190:4;;:::i;:::-;3503:16;;741:66:2;633:3871:23;3280:13:4;633:3871:23;;;3280:13:4;633:3871:23;;3503:16:4;3529:65;;2565:7:23;:::i;:::-;3614:99:4;;633:3871:23;3614:99:4;3648:21;633:3871:23;3280:13:4;633:3871:23;;3280:13:4;633:3871:23;;3648:21:4;633:3871:23;;3518:1:4;633:3871:23;;3688:14:4;;633:3871:23;;3688:14:4;633:3871:23;3529:65:4;3563:20;633:3871:23;;3280:13:4;633:3871:23;;;3280:13:4;633:3871:23;;3563:20:4;2565:7:23;:::i;3324:97:4:-;3393:4;1465:19:9;:23;;-1:-1:-1;1465:23:9;3365:55:4;;3324:97;;;;;3365:55;3419:1;741:66:2;;;;3403:17:4;3365:55;;;3325:34;3358:1;741:66:2;;;3343:16:4;;-1:-1:-1;3325:34:4;;633:3871:23;;;;;;;;;;;;;741:66:2;1006:39:15;;1036:4;633:3871:23;1006:39:15;;633:3871:23;;;;;;1006:39:15;1117:11:23;633:3871;1117:11;633:3871;1117:11;633:3871;1006:39:15;;;;;;633:3871:23;1006:39:15;633:3871:23;1006:39:15;;;633:3871:23;-1:-1:-1;633:3871:23;;;;;;;;;;;;;1006:39:15;;;;;;;;;;;;;;:::i;:::-;;;;633:3871:23;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;1159:43:24;633:3871:23;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:66:2;;;;;;;;;;;:::o;:::-;633:3871:23;;741:66:2;;;;;;;;;;;:::o;:::-;;633:3871:23;;741:66:2;;;;;;;;;;;;633:3871:23;741:66:2;633:3871:23;;;741:66:2;;;;;;;1458:259;1465:19:9;;:23;633:3871:23;;;1082:66:2;633:3871:23;;;;;;;;;1458:259:2:o;633:3871:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:295:2;;1908:17;;;:::i;:::-;633:3871:23;;;1941:27:2;-1:-1:-1;1941:27:2;;633:3871:23;;2290:15:2;;;:28;;;2109:295;2286:112;;2109:295;;:::o;2286:112::-;7102:69:9;633:3871:23;-1:-1:-1;633:3871:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;7060:25:9;;;;;;;;;:::i;:::-;7102:69;;:::i;:::-;;2109:295:2:o;2290:28::-;;-1:-1:-1;2290:28:2;;2109:295;;1908:17;;;:::i;:::-;633:3871:23;;;1941:27:2;;;;633:3871:23;;2290:15:2;;;:28;;;2286:112;;2109:295;;:::o;2290:28::-;;3729:4:5;2290:28:2;;633:3871:23;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;633:3871:23;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7466:628:9;;;;7670:418;;;633:3871:23;;;7701:22:9;7697:286;;7996:17;;:::o;7697:286::-;7908:60;1465:19;;:23;;7908:60;:::i;:::-;7996:17;:::o;7670:418::-;633:3871:23;;;;-1:-1:-1;8775:21:9;:17;;8947:142;;;;;;;8771:379;633:3871:23;;9119:20:9;;;;633:3871:23;;9119:20:9;;;;633:3871:23;;;;;;;;;8795:1:9;633:3871:23;;;;;;;;;;;;8795:1:9;633:3871:23;;;;;;;;;;;9119:20:9;;;;633:3871:23;;;;;;;;;;;;;;;-1:-1:-1;633:3871:23;;;;4308:337:15;4389:24;4385:254;;4308:337;:::o;4385:254::-;4412:1;4455:10;;;;;4507:17;4447:82;;;;:::i;633:3871:23:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2586:146;633:3871;;2651:15;633:3871;;;;;;;;;2651:15;633:3871;;;;;;;2706:11;;633:3871;2681:44;2651:15;2681:44;;2586:146::o;2804:175::-;633:3871;1117:11;;633:3871;2877:10;:35;:58;;;;;2804:175;633:3871;;;;2804:175::o;633:3871::-;;;;;;;;;;;;;;;;;;;;;;;2877:58;633:3871;;2930:5;633:3871;;;;2877:10;2916:19;2877:58;;;3034:341;;633:3871;;7455:58:12;;;633:3871:23;;;;;;;;;7455:58:12;;;;;:::i;:::-;633:3871:23;7445:69:12;;3849:5;3800:27;633:3871:23;;;3291:16;633:3871;-1:-1:-1;633:3871:23;;;;3291:16;;;;;;:::i;633:3871::-;3800:27:12;;:::i;:::-;3849:5;;;;:::i;:::-;633:3871:23;3269:39;3265:85;;-1:-1:-1;3034:341:23;:::o;3265:85::-;742:1:15;3322:28:23;:::o;633:3871::-;;-1:-1:-1;633:3871:23;;;:::o;:::-;;;;;;;;;;570:511:12;633:3871:23;;;:::i;:::-;638:29:12;;;683:7;:::o;634:441::-;633:3871:23;;;:::i;:::-;743:29:12;734:38;;743:29;;633:3871:23;;788:34:12;;;633:3871:23;788:34:12;;;633:3871:23;;;;;;;;;;;;;3374:56:2;730:345:12;633:3871:23;;;:::i;:::-;852:35:12;843:44;;852:35;;633:3871:23;;903:41:12;;;633:3871:23;903:41:12;;;633:3871:23;;;;;;;;;;;;;3374:56:2;839:236:12;633:3871:23;;974:30:12;633:3871:23;;:::i;:::-;965:39:12;961:114;;570:511::o;961:114::-;633:3871:23;;1020:44:12;;;633:3871:23;1020:44:12;;;633:3871:23;;;;;;;;;;;;;;;;;;3374:56:2;2145:730:12;;2283:2;633:3871:23;;2263:22:12;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:12;2746:25;;:::i;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;5069:1494::-;;;;6119:66;6106:79;;6102:161;;633:3871:23;;;;;741:66:2;633:3871:23;;;;;;;741:66:2;633:3871:23;;;;;;;;;;;;-1:-1:-1;6374:24:12;;;;;;;;;;;;;;633:3871:23;;;6412:20:12;6408:101;;6519:37;5069:1494;:::o;6408:101::-;6448:50;6374:24;6448:50;:::o;6102:161::-;6201:51;;;;6217:1;6201:51;6221:30;6201:51;:::o;3381:287:23:-;2113:1;3381:287;;;3503:32;;;;;;;;;;;:::i;:::-;3549:8;;3545:117;;3381:287;:::o;1345:233::-;633:3871;1520:5;633:3871;;;;1506:10;:19;:50;;;;1345:233;633:3871;;;1345:233::o;633:3871::-;;;;;;;;;;;;;;;;;;;;;;;1506:50;1551:4;;1506:10;1529:27;1506:50;"},"methodIdentifiers":{"addDeposit()":"4a58db19","entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch(address[],bytes[])":"18dfb3c7","getDeposit()":"c399ec88","getNonce()":"d087d288","initialize(address)":"c4d66de8","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd","withdrawDepositTo(address,uint256)":"4d44560d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SimpleAccountInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"anOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"deposit more funds for this account in the entryPoint\"},\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a transaction (called directly from owner, or by entryPoint)\"},\"executeBatch(address[],bytes[])\":{\"notice\":\"execute a sequence of transactions\"},\"getDeposit()\":{\"notice\":\"check current account deposit in the entryPoint\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"withdraw value from the account's deposit\"}},\"notice\":\"minimal account.  this is sample minimal account.  has execute, eth handling methods  has a single signer that can send requests through the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/SimpleAccount.sol\":\"SimpleAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x84cbc33838326f8a92fb9db5e27176f8eda5de8797cd6c838c11ef99c724accc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f93d36b8355575c884fb938ad43763207cc67f4abd791e528294ec603cbfbb\",\"dweb:/ipfs/QmTGVR5LR8BAtUMnAQ89DdyMaRv2A7kS4WoBuFEXaW5Lfw\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x480bc688d336e5d8b30f6705af3c73468dc7a8c4e7edcfcacce955939b0786fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d71598df93feea24df0fc19ef2f0280382ace3adf5a5fb62bd62a9ec458c47c8\",\"dweb:/ipfs/QmbyY8TXQoRZ1GmNN2c9JVStMmkiJMfmMJ3wwEPLQcT3Hq\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0xcc33bf670c4334f70c81ab92c03ded5ee4d28abedab06d458b2f234faceafb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://985ce85b1e80872680db607f62fcf4becf9e2a356e7ea04b0209e4d4bc99fc48\",\"dweb:/ipfs/QmPZddeadd6n963XEeYvcyFSv6c7LcYaQ7G2LfckS7Fa3v\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x0f5d5a052ba4cecc4699ca4eb0bd21787ab0a5122e3aaa33283e8009dcfba576\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0055598a026e7ab7fd22c900087c08552bfec84350854f337be786191ff571b5\",\"dweb:/ipfs/QmcVFLLLSM2TyaXKbuA718EJygHkvUBgJiAkC6rqCXjMoM\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x5f95f26f95b7638a679d246e4f88f8bce752c1a2da43d3672db9683584f41949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f303a98a037054c57eb30a39a90de2339caeca2f244b4bcfd362bd80d68c9c52\",\"dweb:/ipfs/QmTSggTuH1VDj8LvZVG3mY8RupWdCCSwvuQ27Lfmeh5hfC\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x882c23df83ff9eb7b6d8da9a0a2aace7ae05ceb5045bab3bcfd8424ad5e3fb94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26515cb73553340a1347de257e9ec18176c4e1d0743f2b45b192e62fb5da9db2\",\"dweb:/ipfs/QmcVSodmViGq7QR41fzuVkxgzUfoKp14SP42EYeURPudL6\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x789c29158831da49cb68476ed9fd474b3a96fd07833f9d01c52d96662d7ee5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d627a6cd0b63376627e13042f01cdf780150622443a272922f8cd9762cf86b\",\"dweb:/ipfs/Qmci2frpA8wJfmCT7p88LJSh3765WLHCL1EZbpb8C7rkWz\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x559e47ae829da7b717f04aad27ea24cad0d3590dcefb71d3b5f19a79f4ad1069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a193c6d6e35145860e9034f21302be5352239bb92d0cfb0d2a7d0dbb4d4267a2\",\"dweb:/ipfs/QmVuBq5LYBwCXXUdipdomxq82v2ybh73sBCm89AW1vvg6W\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x68fdee5452a594c7f5f2dd80b3637e9cad71fbad4b255d60cd2fa2d98290fb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82407c1d978530b1f4de0abc0c03044e7b618baeb6e090612250863d94307671\",\"dweb:/ipfs/QmYYyZE2j9XVAPxoZXwMx3HGkG8XQ4C8y55dDWLMSrYJZy\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x54bfc3bb0ec261c343803cadb5ba08befc65ad40d6e6d6417cb267d1e1437aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a115de9d38f45b40cbccdda415d43ac2efb618afcd4d4dab1d434b48b537df3\",\"dweb:/ipfs/QmehKyXL5gWE4FkwrB5QAfDzqFcTWjBUk2nULb3WoBDXcN\"]},\"contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0x43dd278289640f8ee04f772efed7ff8b6ea26fa968e17765d04b2fefe4da2591\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a0ee6be695a1c57c0481eebbe5a81e992d40985a5483cde9d8bb63ebdd8f7fc\",\"dweb:/ipfs/QmQKrSTedLNpbvstdqpPVqb6ZVecJ4BVaXamasHD65QB12\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xe36d84f455b497f6eb7f7058a319c5a679900f499c4f5e1d048f3d762a7da5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9232444f7b34f7a42f8acffd375042c00f75439c37099fe0e609ab17462ace1\",\"dweb:/ipfs/QmPcQAaTy6tiHKyTwMcWPuAM4ypVqpZiijir8h1is1ycuQ\"]}},\"version\":1}"}},"contracts/samples/callback/TokenCallbackHandler.sol":{"TokenCallbackHandler":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576104ab908161001c8239f35b600080fdfe60808060405260048036101561001457600080fd5b600091823560e01c90816223de291461032b57816301ffc9a71461023d57508063150b7a02146101b0578063bc197c81146100ec5763f23a6e611461005857600080fd5b346100e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e85761008f6103cb565b506100986103f3565b5060843567ffffffffffffffff81116100e4576100b89250369101610416565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b8280fd5b5080fd5b50346100e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576101246103cb565b5061012d6103f3565b5067ffffffffffffffff6044358181116101ac5761014e9036908401610444565b50506064358181116101ac576101679036908401610444565b50506084359081116100e4576101809250369101610416565b505060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b8380fd5b50346100e85760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576101e86103cb565b506101f16103f3565b5060643567ffffffffffffffff81116100e4576102119250369101610416565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b919050346100e45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e457357fffffffff0000000000000000000000000000000000000000000000000000000081168091036100e457602092507f150b7a02000000000000000000000000000000000000000000000000000000008114908115610301575b81156102d7575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102d0565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102c9565b5050346100e85760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576103646103cb565b5061036d6103f3565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036100e85767ffffffffffffffff906084358281116101ac576103ae9036908301610416565b505060a4359182116100e4576103c691369101610416565b505080f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103ee57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103ee57565b9181601f840112156103ee5782359167ffffffffffffffff83116103ee57602083818601950101116103ee57565b9181601f840112156103ee5782359167ffffffffffffffff83116103ee576020808501948460051b0101116103ee5756fea2646970667358221220e21db1e50086c0162dd64aba034395eb475e21220699d1b25701ba75c4f4209c64736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x4AB SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x23DE29 EQ PUSH2 0x32B JUMPI DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x23D JUMPI POP DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xEC JUMPI PUSH4 0xF23A6E61 EQ PUSH2 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x8F PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x98 PUSH2 0x3F3 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH2 0xB8 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x124 PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x12D PUSH2 0x3F3 JUMP JUMPDEST POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1AC JUMPI PUSH2 0x14E SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x444 JUMP JUMPDEST POP POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1AC JUMPI PUSH2 0x167 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x444 JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE4 JUMPI PUSH2 0x180 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x1E8 PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x1F1 PUSH2 0x3F3 JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH2 0x211 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0xE4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE4 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE4 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x301 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2D7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x2D0 JUMP JUMPDEST PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x2C9 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0xC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x364 PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x36D PUSH2 0x3F3 JUMP JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x84 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1AC JUMPI PUSH2 0x3AE SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE4 JUMPI PUSH2 0x3C6 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3EE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3EE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3EE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3EE JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x3EE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3EE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3EE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x3EE JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SAR 0xB1 0xE5 STOP DUP7 0xC0 AND 0x2D 0xD6 0x4A 0xBA SUB NUMBER SWAP6 0xEB SELFBALANCE 0x5E 0x21 0x22 MOD SWAP10 0xD1 0xB2 JUMPI ADD 0xBA PUSH22 0xC4F4209C64736F6C6343000812003300000000000000 ","sourceMap":"486:1299:24:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1011,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_1567":{"entryPoint":971,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":1092,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_calldata":{"entryPoint":1046,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260048036101561001457600080fd5b600091823560e01c90816223de291461032b57816301ffc9a71461023d57508063150b7a02146101b0578063bc197c81146100ec5763f23a6e611461005857600080fd5b346100e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e85761008f6103cb565b506100986103f3565b5060843567ffffffffffffffff81116100e4576100b89250369101610416565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b8280fd5b5080fd5b50346100e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576101246103cb565b5061012d6103f3565b5067ffffffffffffffff6044358181116101ac5761014e9036908401610444565b50506064358181116101ac576101679036908401610444565b50506084359081116100e4576101809250369101610416565b505060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b8380fd5b50346100e85760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576101e86103cb565b506101f16103f3565b5060643567ffffffffffffffff81116100e4576102119250369101610416565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b919050346100e45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e457357fffffffff0000000000000000000000000000000000000000000000000000000081168091036100e457602092507f150b7a02000000000000000000000000000000000000000000000000000000008114908115610301575b81156102d7575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102d0565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102c9565b5050346100e85760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576103646103cb565b5061036d6103f3565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036100e85767ffffffffffffffff906084358281116101ac576103ae9036908301610416565b505060a4359182116100e4576103c691369101610416565b505080f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103ee57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103ee57565b9181601f840112156103ee5782359167ffffffffffffffff83116103ee57602083818601950101116103ee57565b9181601f840112156103ee5782359167ffffffffffffffff83116103ee576020808501948460051b0101116103ee5756fea2646970667358221220e21db1e50086c0162dd64aba034395eb475e21220699d1b25701ba75c4f4209c64736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x23DE29 EQ PUSH2 0x32B JUMPI DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x23D JUMPI POP DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xEC JUMPI PUSH4 0xF23A6E61 EQ PUSH2 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x8F PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x98 PUSH2 0x3F3 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH2 0xB8 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x124 PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x12D PUSH2 0x3F3 JUMP JUMPDEST POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1AC JUMPI PUSH2 0x14E SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x444 JUMP JUMPDEST POP POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1AC JUMPI PUSH2 0x167 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x444 JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE4 JUMPI PUSH2 0x180 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x1E8 PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x1F1 PUSH2 0x3F3 JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4 JUMPI PUSH2 0x211 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0xE4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE4 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE4 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x301 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2D7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x2D0 JUMP JUMPDEST PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x2C9 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0xC0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE8 JUMPI PUSH2 0x364 PUSH2 0x3CB JUMP JUMPDEST POP PUSH2 0x36D PUSH2 0x3F3 JUMP JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x84 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1AC JUMPI PUSH2 0x3AE SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x416 JUMP JUMPDEST POP POP PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE4 JUMPI PUSH2 0x3C6 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST POP POP DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3EE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3EE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3EE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3EE JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x3EE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3EE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x3EE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x3EE JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SAR 0xB1 0xE5 STOP DUP7 0xC0 AND 0x2D 0xD6 0x4A 0xBA SUB NUMBER SWAP6 0xEB SELFBALANCE 0x5E 0x21 0x22 MOD SWAP10 0xD1 0xB2 JUMPI ADD 0xBA PUSH22 0xC4F4209C64736F6C6343000812003300000000000000 ","sourceMap":"486:1299:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1159:43;486:1299;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;486:1299:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1424:48;486:1299;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;923:41;486:1299;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:48;;1622:33;1607:48;;:113;;;;;486:1299;1607:169;;;;486:1299;;;;;;;1607:169;1751:25;1736:40;;;1607:169;;;:113;1686:34;1671:49;;;-1:-1:-1;1607:113:24;;486:1299;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token callback handler.   Handles supported tokens' callbacks, allowing account receiving these tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/callback/TokenCallbackHandler.sol\":\"TokenCallbackHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xe36d84f455b497f6eb7f7058a319c5a679900f499c4f5e1d048f3d762a7da5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9232444f7b34f7a42f8acffd375042c00f75439c37099fe0e609ab17462ace1\",\"dweb:/ipfs/QmPcQAaTy6tiHKyTwMcWPuAM4ypVqpZiijir8h1is1ycuQ\"]}},\"version\":1}"}}}}}